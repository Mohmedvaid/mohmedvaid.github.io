{"version":3,"file":"static/js/223.844c4ab5.chunk.js","mappings":"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","sources":["components/HandGesture/DetectedFingers.jsx","components/HandGesture/getExtendedFingers.js","components/HandGesture/getFingerGestureGif.js","components/HandGesture/index.jsx","pages/Fun.jsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nconst DetectedFingers = memo(\n  ({ fingers, gifUrl }) => {\n    return (\n      <Box>\n        <Typography textAlign=\"center\" gutterBottom>\n          {fingers.length === 0 ? \"No fingers detected\" : fingers.join(\", \")}\n        </Typography>\n        {gifUrl && (\n          <iframe\n            src={gifUrl}\n            width=\"100%\"\n            height=\"300\"\n            allowFullScreen\n            title=\"Finger Gesture Gif\"\n            style={{ border: \"none\" }}\n          ></iframe>\n        )}\n      </Box>\n    );\n  },\n  (prevProps, nextProps) => {\n    return (\n      prevProps.gifUrl === nextProps.gifUrl &&\n      prevProps.fingers.join(\",\") === nextProps.fingers.join(\",\")\n    );\n  }\n);\n\nexport default DetectedFingers;\n","const analyzeFingers = (landmarks) => {\n  const fingerJoints = {\n    thumb: [0, 1, 2, 3, 4],\n    indexFinger: [0, 5, 6, 7, 8],\n    middleFinger: [0, 9, 10, 11, 12],\n    ringFinger: [0, 13, 14, 15, 16],\n    littleFinger: [0, 17, 18, 19, 20],\n  };\n\n  let extendedFingers = [];\n\n  for (const finger in fingerJoints) {\n    const joints = fingerJoints[finger];\n    const isExtended = isFingerExtended(joints, landmarks, finger);\n    if (isExtended) {\n      extendedFingers.push(finger);\n    }\n  }\n\n  return extendedFingers;\n};\n\nconst isFingerExtended = (joints, landmarks, fingerName) => {\n  if (fingerName === \"thumb\") {\n    // Special logic for thumb\n    const thumbTip = landmarks[joints[joints.length - 1]];\n    const indexBase = landmarks[5]; // Base of the index finger\n    return thumbTip[0] > indexBase[0]; // Check if thumb tip is to the left of the index base (for right hand)\n  } else {\n    // For other fingers\n    const tip = landmarks[joints[joints.length - 1]];\n    const bottom = landmarks[joints[joints.length - 2]];\n    return tip[1] < bottom[1]; // Y-coordinate comparison for other fingers\n  }\n};\n\nexport default analyzeFingers;\n","const fingerCombinations = {\n  // Individual fingers\n  thumb: \"https://giphy.com/embed/9Ai5dIk8xvBm0\",\n  indexFinger: \"https://giphy.com/embed/U1ZG5CxukCD8nbLBdB\",\n  middleFinger: \"https://giphy.com/embed/g4ODNTnpEBrmsghYtD\",\n  ringFinger: \"https://giphy.com/embed/n7dICavAOkXxHreDb3\",\n  littleFinger: \"https://giphy.com/embed/yxO7pd4zpTz2\",\n\n  // Combinations of two fingers\n  thumb_indexFinger: \"https://giphy.com/embed/88iYsvbegSUn9bSTF8\",\n  thumb_middleFinger: \"https://giphy.com/embed/g4ODNTnpEBrmsghYtD\",\n  thumb_ringFinger: \"https://giphy.com/embed/n7dICavAOkXxHreDb3\",\n  thumb_littleFinger: \"https://giphy.com/embed/KH884zrbUlIqHWKLzE\",\n  indexFinger_middleFinger: \"https://giphy.com/embed/cQNRp4QA8z7B6\",\n  indexFinger_ringFinger: \"https://giphy.com/embed/vKHKDIdvxvN7vTAEOM\",\n  indexFinger_littleFinger: \"https://giphy.com/embed/1qErVv5GVUac8uqBJU\",\n  middleFinger_ringFinger: \"https://giphy.com/embed/nTfdeBvfgzV26zjoFP\",\n  middleFinger_littleFinger: \"https://giphy.com/embed/nTfdeBvfgzV26zjoFP\",\n  ringFinger_littleFinger: \"https://giphy.com/embed/JuX2sNywfh0McD0pLm\",\n\n  // Combinations of three or more fingers\n  thumb_indexFinger_middleFinger: \"https://giphy.com/embed/cHjEtESnmSim3w0CNq\",\n  thumb_indexFinger_ringFinger: \"https://giphy.com/embed/vKHKDIdvxvN7vTAEOM\",\n  thumb_indexFinger_littleFinger: \"https://giphy.com/embed/1qErVv5GVUac8uqBJU\",\n  indexFinger_middleFinger_ringFinger:\n    \"https://giphy.com/embed/UvychT0pHq2VjhHNSF\",\n  indexFinger_middleFinger_littleFinger:\n    \"https://giphy.com/embed/X9XPEqfgU8YSiOMpM6\",\n  middleFinger_ringFinger_littleFinger:\n    \"https://giphy.com/embed/EsFI67hfi6B4hmdeCL\",\n  thumb_middleFinger_ringFinger: \"https://giphy.com/embed/X9XPEqfgU8YSiOMpM6\",\n  thumb_middleFinger_littleFinger: \"https://giphy.com/embed/X9XPEqfgU8YSiOMpM6\",\n  thumb_ringFinger_littleFinger: \"https://giphy.com/embed/X9XPEqfgU8YSiOMpM6\",\n\n  // Combinations of four fingers\n  thumb_indexFinger_middleFinger_ringFinger:\n    \"https://giphy.com/embed/TDMZWt69CBjfMYvZHG\",\n  indexFinger_middleFinger_ringFinger_littleFinger:\n    \"https://giphy.com/embed/09HAftvLeRDew2HWEM\",\n\n  // All fingers\n  all: \"https://giphy.com/embed/3oKIPbOaTdyWc8iUWA\",\n  four: \"https://giphy.com/embed/3oKIPbOaTdyWc8iUWA\",\n\n  // Default case\n  default: \"https://giphy.com/embed/r0q8JfQLzevKR24Anc\",\n};\n\nconst getFingerGestureGif = (detectedFingers) => {\n  // Convert the array of fingers to a Set for efficient lookup\n  if (detectedFingers.length === 5) return fingerCombinations[\"all\"];\n\n  const fingerSet = new Set(detectedFingers);\n\n  // Find a matching key in fingerCombinations\n  for (const key in fingerCombinations) {\n    const keyFingers = key.split(\"_\");\n    if (\n      keyFingers.every((kf) => fingerSet.has(kf)) &&\n      keyFingers.length === fingerSet.size\n    ) {\n      return fingerCombinations[key];\n    }\n  }\n\n  if (detectedFingers.length === 4) return fingerCombinations[\"four\"];\n\n  return fingerCombinations[\"default\"];\n};\n\nexport default getFingerGestureGif;\n","import React, {\n  useRef,\n  useEffect,\n  useState,\n  useCallback,\n  useMemo,\n} from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nimport Loader from \"../Loader\";\nimport DetectedFingers from \"./DetectedFingers\";\nimport getExtendedFingers from \"./getExtendedFingers\";\nimport getFingerGestureGif from \"./getFingerGestureGif\";\n\nconst styles = {\n  root: {\n    padding: \"20px\",\n    width: \"100%\",\n  },\n  video: {\n    transform: \"scaleX(-1)\",\n    width: \"100%\",\n    maxHeight: \"400px\",\n    margin: \"20px\",\n  },\n  noticeWrapper: {\n    textAlign: \"center\",\n    marginTop: 5,\n  },\n};\n\nconst HandGestureDetection = () => {\n  const videoRef = useRef();\n  const streamRef = useRef();\n  const detectionTimeoutRef = useRef();\n\n  const [model, setModel] = useState(null);\n  const [permissionDenied, setPermissionDenied] = useState(false);\n  const [isDetectionStarted, setIsDetectionStarted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [detectedFingers, setDetectedFingers] = useState([]);\n  const [currentGifUrl, setCurrentGifUrl] = useState(null);\n\n  const detectedFingersMemo = useMemo(\n    () => detectedFingers,\n    [detectedFingers.join(\",\")]\n  );\n  const newGifEmbedUrl = useMemo(\n    () => getFingerGestureGif(detectedFingersMemo),\n    [detectedFingersMemo]\n  );\n\n  useEffect(() => {\n    if (newGifEmbedUrl !== currentGifUrl) {\n      setCurrentGifUrl(newGifEmbedUrl);\n    }\n  }, [newGifEmbedUrl, currentGifUrl]);\n\n  useEffect(() => {\n    const loadModel = async () => {\n      try {\n        setIsLoading(true);\n        const loadedModel = await handpose.load();\n        setModel(loadedModel);\n      } catch (error) {\n        console.error(\"Failed to load model: \", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadModel();\n  }, []);\n\n  const startVideo = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      streamRef.current = stream;\n      videoRef.current.srcObject = stream;\n      videoRef.current.onloadedmetadata = () => {\n        videoRef.current.play();\n        setIsDetectionStarted(true);\n        setPermissionDenied(false);\n      };\n    } catch (error) {\n      console.error(\"Error accessing the webcam: \", error);\n      setPermissionDenied(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const stopVideo = useCallback(() => {\n    streamRef.current?.getTracks().forEach((track) => track.stop());\n    clearTimeout(detectionTimeoutRef.current);\n    setIsDetectionStarted(false);\n    setDetectedFingers([]);\n  }, []);\n\n  const detect = useCallback(async () => {\n    if (videoRef.current && model && isDetectionStarted) {\n      const predictions = await model.estimateHands(videoRef.current);\n      if (predictions.length > 0) {\n        const fingers = getExtendedFingers(predictions[0].landmarks);\n        setDetectedFingers(fingers);\n      } else {\n        setDetectedFingers([]);\n      }\n      detectionTimeoutRef.current = setTimeout(detect, 2000);\n    }\n  }, [model, isDetectionStarted]);\n\n  useEffect(() => {\n    if (model && isDetectionStarted) {\n      detect();\n    }\n    return () => clearTimeout(detectionTimeoutRef.current);\n  }, [model, isDetectionStarted, detect]);\n\n  // Separate component for permission notice\n  const PermissionNotice = () => {\n    if (!permissionDenied) return null;\n    return (\n      <Typography color=\"error\">Need video permissions to proceed.</Typography>\n    );\n  };\n\n  return (\n    <Box sx={styles.root}>\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n        <Grid item xs={12} md={6} align=\"center\">\n          {!isDetectionStarted && !permissionDenied && (\n            <Button variant=\"contained\" onClick={startVideo}>\n              Start Magic\n            </Button>\n          )}\n          <PermissionNotice />\n          {isLoading && <Loader />}\n          <video\n            ref={videoRef}\n            style={styles.video}\n            hidden={!isDetectionStarted}\n          />\n        </Grid>\n        {isDetectionStarted && (\n          <>\n            <Grid item xs={12} md={6} sx={{ textAlign: \"center\" }}>\n              <>\n                <DetectedFingers\n                  fingers={detectedFingersMemo}\n                  gifUrl={currentGifUrl}\n                />\n              </>\n            </Grid>\n            <Grid item xs={12} sx={styles.noticeWrapper}>\n              <Button variant=\"contained\" onClick={stopVideo}>\n                Stop Magic\n              </Button>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Detection runs every 2 seconds for CPU efficiency. Please be\n                patient.\n              </Typography>\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default HandGestureDetection;\n","import React, { useState } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\n\nimport HandGesture from \"../components/HandGesture\";\n\nconst FunPage = () => {\n  const [open, setOpen] = useState(true);\n\n  const handleToggleDialog = () => setOpen(!open);\n\n  return (\n    <Box sx={{ height: \"100vh\" }} component=\"section\" id=\"fun\">\n      <IconButton onClick={handleToggleDialog}>\n        <InfoIcon />\n      </IconButton>\n      <Dialog open={open} onClose={handleToggleDialog}>\n        <DialogTitle>{\"Hand Gesture Detection\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This is a fun application to detect hand gestures. No data is\n            tracked or saved.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleToggleDialog} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <HandGesture />\n    </Box>\n  );\n};\n\nexport default FunPage;\n"],"names":["memo","_ref","fingers","gifUrl","_jsxs","Box","children","_jsx","Typography","textAlign","gutterBottom","length","join","src","width","height","allowFullScreen","title","style","border","prevProps","nextProps","isFingerExtended","joints","landmarks","fingerName","thumbTip","indexBase","tip","bottom","fingerJoints","thumb","indexFinger","middleFinger","ringFinger","littleFinger","extendedFingers","finger","push","fingerCombinations","thumb_indexFinger","thumb_middleFinger","thumb_ringFinger","thumb_littleFinger","indexFinger_middleFinger","indexFinger_ringFinger","indexFinger_littleFinger","middleFinger_ringFinger","middleFinger_littleFinger","ringFinger_littleFinger","thumb_indexFinger_middleFinger","thumb_indexFinger_ringFinger","thumb_indexFinger_littleFinger","indexFinger_middleFinger_ringFinger","indexFinger_middleFinger_littleFinger","middleFinger_ringFinger_littleFinger","thumb_middleFinger_ringFinger","thumb_middleFinger_littleFinger","thumb_ringFinger_littleFinger","thumb_indexFinger_middleFinger_ringFinger","indexFinger_middleFinger_ringFinger_littleFinger","all","four","default","detectedFingers","fingerSet","Set","key","keyFingers","split","every","kf","has","size","styles","root","padding","video","transform","maxHeight","margin","noticeWrapper","marginTop","HandGestureDetection","videoRef","useRef","streamRef","detectionTimeoutRef","model","setModel","useState","permissionDenied","setPermissionDenied","isDetectionStarted","setIsDetectionStarted","isLoading","setIsLoading","setDetectedFingers","currentGifUrl","setCurrentGifUrl","detectedFingersMemo","useMemo","newGifEmbedUrl","getFingerGestureGif","useEffect","async","loadedModel","handpose","error","console","loadModel","startVideo","useCallback","stream","navigator","mediaDevices","getUserMedia","current","srcObject","onloadedmetadata","play","stopVideo","_streamRef$current","getTracks","forEach","track","stop","clearTimeout","detect","predictions","estimateHands","getExtendedFingers","setTimeout","PermissionNotice","color","sx","Grid","container","spacing","justifyContent","alignItems","item","xs","md","align","Button","variant","onClick","Loader","ref","hidden","_Fragment","DetectedFingers","FunPage","open","setOpen","handleToggleDialog","component","id","IconButton","InfoIcon","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","HandGesture"],"sourceRoot":""}