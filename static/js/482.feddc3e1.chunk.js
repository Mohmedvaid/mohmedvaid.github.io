/*! For license information please see 482.feddc3e1.chunk.js.LICENSE.txt */
(self.webpackChunkreact_portfolio=self.webpackChunkreact_portfolio||[]).push([[482],{5584:(t,e,n)=>{"use strict";var a=n(4836);e.Z=void 0;var s=a(n(5649)),r=n(184),o=(0,s.default)((0,r.jsx)("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"}),"Info");e.Z=o},5289:(t,e,n)=>{"use strict";n.d(e,{Z:()=>E});var a=n(3366),s=n(7462),r=n(2791),o=n(3733),i=n(4419),c=n(8252),l=n(4036),u=n(5711),h=n(627),d=n(5527),p=n(1402),f=n(6934),m=n(5878),g=n(1217);function y(t){return(0,g.Z)("MuiDialog",t)}const b=(0,m.Z)("MuiDialog",["root","scrollPaper","scrollBody","container","paper","paperScrollPaper","paperScrollBody","paperWidthFalse","paperWidthXs","paperWidthSm","paperWidthMd","paperWidthLg","paperWidthXl","paperFullWidth","paperFullScreen"]);var x=n(5090),v=n(2739),w=n(3967),k=n(184);const I=["aria-describedby","aria-labelledby","BackdropComponent","BackdropProps","children","className","disableEscapeKeyDown","fullScreen","fullWidth","maxWidth","onBackdropClick","onClose","open","PaperComponent","PaperProps","scroll","TransitionComponent","transitionDuration","TransitionProps"],S=(0,f.ZP)(v.Z,{name:"MuiDialog",slot:"Backdrop",overrides:(t,e)=>e.backdrop})({zIndex:-1}),N=(0,f.ZP)(u.Z,{name:"MuiDialog",slot:"Root",overridesResolver:(t,e)=>e.root})({"@media print":{position:"absolute !important"}}),T=(0,f.ZP)("div",{name:"MuiDialog",slot:"Container",overridesResolver:(t,e)=>{const{ownerState:n}=t;return[e.container,e["scroll".concat((0,l.Z)(n.scroll))]]}})((t=>{let{ownerState:e}=t;return(0,s.Z)({height:"100%","@media print":{height:"auto"},outline:0},"paper"===e.scroll&&{display:"flex",justifyContent:"center",alignItems:"center"},"body"===e.scroll&&{overflowY:"auto",overflowX:"hidden",textAlign:"center","&::after":{content:'""',display:"inline-block",verticalAlign:"middle",height:"100%",width:"0"}})})),C=(0,f.ZP)(d.Z,{name:"MuiDialog",slot:"Paper",overridesResolver:(t,e)=>{const{ownerState:n}=t;return[e.paper,e["scrollPaper".concat((0,l.Z)(n.scroll))],e["paperWidth".concat((0,l.Z)(String(n.maxWidth)))],n.fullWidth&&e.paperFullWidth,n.fullScreen&&e.paperFullScreen]}})((t=>{let{theme:e,ownerState:n}=t;return(0,s.Z)({margin:32,position:"relative",overflowY:"auto","@media print":{overflowY:"visible",boxShadow:"none"}},"paper"===n.scroll&&{display:"flex",flexDirection:"column",maxHeight:"calc(100% - 64px)"},"body"===n.scroll&&{display:"inline-block",verticalAlign:"middle",textAlign:"left"},!n.maxWidth&&{maxWidth:"calc(100% - 64px)"},"xs"===n.maxWidth&&{maxWidth:"px"===e.breakpoints.unit?Math.max(e.breakpoints.values.xs,444):"max(".concat(e.breakpoints.values.xs).concat(e.breakpoints.unit,", 444px)"),["&.".concat(b.paperScrollBody)]:{[e.breakpoints.down(Math.max(e.breakpoints.values.xs,444)+64)]:{maxWidth:"calc(100% - 64px)"}}},n.maxWidth&&"xs"!==n.maxWidth&&{maxWidth:"".concat(e.breakpoints.values[n.maxWidth]).concat(e.breakpoints.unit),["&.".concat(b.paperScrollBody)]:{[e.breakpoints.down(e.breakpoints.values[n.maxWidth]+64)]:{maxWidth:"calc(100% - 64px)"}}},n.fullWidth&&{width:"calc(100% - 64px)"},n.fullScreen&&{margin:0,width:"100%",maxWidth:"100%",height:"100%",maxHeight:"none",borderRadius:0,["&.".concat(b.paperScrollBody)]:{margin:0,maxWidth:"100%"}})})),E=r.forwardRef((function(t,e){const n=(0,p.Z)({props:t,name:"MuiDialog"}),u=(0,w.Z)(),f={enter:u.transitions.duration.enteringScreen,exit:u.transitions.duration.leavingScreen},{"aria-describedby":m,"aria-labelledby":g,BackdropComponent:b,BackdropProps:v,children:E,className:_,disableEscapeKeyDown:A=!1,fullScreen:D=!1,fullWidth:R=!1,maxWidth:O="sm",onBackdropClick:F,onClose:M,open:B,PaperComponent:L=d.Z,PaperProps:z={},scroll:U="paper",TransitionComponent:P=h.Z,transitionDuration:V=f,TransitionProps:W}=n,G=(0,a.Z)(n,I),H=(0,s.Z)({},n,{disableEscapeKeyDown:A,fullScreen:D,fullWidth:R,maxWidth:O,scroll:U}),j=(t=>{const{classes:e,scroll:n,maxWidth:a,fullWidth:s,fullScreen:r}=t,o={root:["root"],container:["container","scroll".concat((0,l.Z)(n))],paper:["paper","paperScroll".concat((0,l.Z)(n)),"paperWidth".concat((0,l.Z)(String(a))),s&&"paperFullWidth",r&&"paperFullScreen"]};return(0,i.Z)(o,y,e)})(H),X=r.useRef(),q=(0,c.Z)(g),K=r.useMemo((()=>({titleId:q})),[q]);return(0,k.jsx)(N,(0,s.Z)({className:(0,o.Z)(j.root,_),closeAfterTransition:!0,components:{Backdrop:S},componentsProps:{backdrop:(0,s.Z)({transitionDuration:V,as:b},v)},disableEscapeKeyDown:A,onClose:M,open:B,ref:e,onClick:t=>{X.current&&(X.current=null,F&&F(t),M&&M(t,"backdropClick"))},ownerState:H},G,{children:(0,k.jsx)(P,(0,s.Z)({appear:!0,in:B,timeout:V,role:"presentation"},W,{children:(0,k.jsx)(T,{className:(0,o.Z)(j.container),onMouseDown:t=>{X.current=t.target===t.currentTarget},ownerState:H,children:(0,k.jsx)(C,(0,s.Z)({as:L,elevation:24,role:"dialog","aria-describedby":m,"aria-labelledby":q},z,{className:(0,o.Z)(j.paper,z.className),ownerState:H,children:(0,k.jsx)(x.Z.Provider,{value:K,children:E})}))})}))}))}))},5090:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});const a=n(2791).createContext({})},7123:(t,e,n)=>{"use strict";n.d(e,{Z:()=>g});var a=n(3366),s=n(7462),r=n(2791),o=n(3733),i=n(4419),c=n(6934),l=n(1402),u=n(5878),h=n(1217);function d(t){return(0,h.Z)("MuiDialogActions",t)}(0,u.Z)("MuiDialogActions",["root","spacing"]);var p=n(184);const f=["className","disableSpacing"],m=(0,c.ZP)("div",{name:"MuiDialogActions",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:n}=t;return[e.root,!n.disableSpacing&&e.spacing]}})((t=>{let{ownerState:e}=t;return(0,s.Z)({display:"flex",alignItems:"center",padding:8,justifyContent:"flex-end",flex:"0 0 auto"},!e.disableSpacing&&{"& > :not(style) ~ :not(style)":{marginLeft:8}})})),g=r.forwardRef((function(t,e){const n=(0,l.Z)({props:t,name:"MuiDialogActions"}),{className:r,disableSpacing:c=!1}=n,u=(0,a.Z)(n,f),h=(0,s.Z)({},n,{disableSpacing:c}),g=(t=>{const{classes:e,disableSpacing:n}=t,a={root:["root",!n&&"spacing"]};return(0,i.Z)(a,d,e)})(h);return(0,p.jsx)(m,(0,s.Z)({className:(0,o.Z)(g.root,r),ownerState:h,ref:e},u))}))},9157:(t,e,n)=>{"use strict";n.d(e,{Z:()=>y});var a=n(3366),s=n(7462),r=n(2791),o=n(3733),i=n(4419),c=n(6934),l=n(1402),u=n(5878),h=n(1217);function d(t){return(0,h.Z)("MuiDialogContent",t)}(0,u.Z)("MuiDialogContent",["root","dividers"]);var p=n(7673),f=n(184);const m=["className","dividers"],g=(0,c.ZP)("div",{name:"MuiDialogContent",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:n}=t;return[e.root,n.dividers&&e.dividers]}})((t=>{let{theme:e,ownerState:n}=t;return(0,s.Z)({flex:"1 1 auto",WebkitOverflowScrolling:"touch",overflowY:"auto",padding:"20px 24px"},n.dividers?{padding:"16px 24px",borderTop:"1px solid ".concat((e.vars||e).palette.divider),borderBottom:"1px solid ".concat((e.vars||e).palette.divider)}:{[".".concat(p.Z.root," + &")]:{paddingTop:0}})})),y=r.forwardRef((function(t,e){const n=(0,l.Z)({props:t,name:"MuiDialogContent"}),{className:r,dividers:c=!1}=n,u=(0,a.Z)(n,m),h=(0,s.Z)({},n,{dividers:c}),p=(t=>{const{classes:e,dividers:n}=t,a={root:["root",n&&"dividers"]};return(0,i.Z)(a,d,e)})(h);return(0,f.jsx)(g,(0,s.Z)({className:(0,o.Z)(p.root,r),ownerState:h,ref:e},u))}))},1691:(t,e,n)=>{"use strict";n.d(e,{Z:()=>y});var a=n(3366),s=n(7462),r=n(2791),o=n(3733),i=n(4419),c=n(6934),l=n(1402),u=n(890),h=n(5878),d=n(1217);function p(t){return(0,d.Z)("MuiDialogContentText",t)}(0,h.Z)("MuiDialogContentText",["root"]);var f=n(184);const m=["children","className"],g=(0,c.ZP)(u.Z,{shouldForwardProp:t=>(0,c.FO)(t)||"classes"===t,name:"MuiDialogContentText",slot:"Root",overridesResolver:(t,e)=>e.root})({}),y=r.forwardRef((function(t,e){const n=(0,l.Z)({props:t,name:"MuiDialogContentText"}),{className:r}=n,c=(0,a.Z)(n,m),u=(t=>{const{classes:e}=t,n=(0,i.Z)({root:["root"]},p,e);return(0,s.Z)({},e,n)})(c);return(0,f.jsx)(g,(0,s.Z)({component:"p",variant:"body1",color:"text.secondary",ref:e,ownerState:c,className:(0,o.Z)(u.root,r)},n,{classes:u}))}))},5661:(t,e,n)=>{"use strict";n.d(e,{Z:()=>g});var a=n(7462),s=n(3366),r=n(2791),o=n(3733),i=n(4419),c=n(890),l=n(6934),u=n(1402),h=n(7673),d=n(5090),p=n(184);const f=["className","id"],m=(0,l.ZP)(c.Z,{name:"MuiDialogTitle",slot:"Root",overridesResolver:(t,e)=>e.root})({padding:"16px 24px",flex:"0 0 auto"}),g=r.forwardRef((function(t,e){const n=(0,u.Z)({props:t,name:"MuiDialogTitle"}),{className:c,id:l}=n,g=(0,s.Z)(n,f),y=n,b=(t=>{const{classes:e}=t;return(0,i.Z)({root:["root"]},h.a,e)})(y),{titleId:x=l}=r.useContext(d.Z);return(0,p.jsx)(m,(0,a.Z)({component:"h2",className:(0,o.Z)(b.root,c),ownerState:y,ref:e,variant:"h6",id:null!=l?l:x},g))}))},7673:(t,e,n)=>{"use strict";n.d(e,{Z:()=>o,a:()=>r});var a=n(5878),s=n(1217);function r(t){return(0,s.Z)("MuiDialogTitle",t)}const o=(0,a.Z)("MuiDialogTitle",["root"])},5193:(t,e,n)=>{"use strict";var a;n.d(e,{Z:()=>h});var s=n(2791),r=n(9120),o=n(3073),i=n(162);function c(t,e,n,a,r){const[o,c]=s.useState((()=>r&&n?n(t).matches:a?a(t).matches:e));return(0,i.Z)((()=>{let e=!0;if(!n)return;const a=n(t),s=()=>{e&&c(a.matches)};return s(),a.addListener(s),()=>{e=!1,a.removeListener(s)}}),[t,n]),o}const l=(a||(a=n.t(s,2))).useSyncExternalStore;function u(t,e,n,a,r){const o=s.useCallback((()=>e),[e]),i=s.useMemo((()=>{if(r&&n)return()=>n(t).matches;if(null!==a){const{matches:e}=a(t);return()=>e}return o}),[o,t,a,r,n]),[c,u]=s.useMemo((()=>{if(null===n)return[o,()=>()=>{}];const e=n(t);return[()=>e.matches,t=>(e.addListener(t),()=>{e.removeListener(t)})]}),[o,n,t]);return l(u,c,i)}function h(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=(0,r.Z)(),a="undefined"!==typeof window&&"undefined"!==typeof window.matchMedia,{defaultMatches:s=!1,matchMedia:i=(a?window.matchMedia:null),ssrMatchMedia:h=null,noSsr:d=!1}=(0,o.Z)({name:"MuiUseMediaQuery",props:e,theme:n});let p="function"===typeof t?t(n):t;p=p.replace(/^@media( ?)/m,"");return(void 0!==l?u:c)(p,s,i,h,d)}},3983:(t,e,n)=>{"use strict";n.d(e,{z:()=>E});var a=n(1447),s=n(8149);function r(t,e,n,a){return new(n||(n=Promise))((function(s,r){function o(t){try{c(a.next(t))}catch(t){r(t)}}function i(t){try{c(a.throw(t))}catch(t){r(t)}}function c(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,i)}c((a=a.apply(t,e||[])).next())}))}function o(t,e){var n,a,s,r,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function i(i){return function(c){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;r&&(r=0,i[0]&&(o=0)),o;)try{if(n=1,a&&(s=2&i[0]?a.return:i[0]?a.throw||((s=a.return)&&s.call(a),0):a.next)&&!(s=s.call(a,i[1])).done)return s;switch(a=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,a=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){o.label=i[1];break}if(6===i[0]&&o.label<s[1]){o.label=s[1],s=i;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(i);break}s[2]&&o.ops.pop(),o.trys.pop();continue}i=e.call(t,o)}catch(t){i=[6,t],a=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}}function i(t,e,n){if(n||2===arguments.length)for(var a,s=0,r=e.length;s<r;s++)!a&&s in e||(a||(a=Array.prototype.slice.call(e,0,s)),a[s]=e[s]);return t.concat(a||Array.prototype.slice.call(e))}function c(t){return[Math.abs(t.endPoint[0]-t.startPoint[0]),Math.abs(t.endPoint[1]-t.startPoint[1])]}function l(t){return[t.startPoint[0]+(t.endPoint[0]-t.startPoint[0])/2,t.startPoint[1]+(t.endPoint[1]-t.startPoint[1])/2]}function u(t,e){void 0===e&&(e=1.5);var n=l(t),a=c(t),s=[e*a[0]/2,e*a[1]/2];return{startPoint:[n[0]-s[0],n[1]-s[1]],endPoint:[n[0]+s[0],n[1]+s[1]],palmLandmarks:t.palmLandmarks}}function h(t){var e=l(t),n=c(t),a=Math.max.apply(Math,n)/2;return{startPoint:[e[0]-a,e[1]-a],endPoint:[e[0]+a,e[1]+a],palmLandmarks:t.palmLandmarks}}function d(t,e){var n=[t.endPoint[0]-t.startPoint[0],t.endPoint[1]-t.startPoint[1]],a=[n[0]*e[0],n[1]*e[1]];return{startPoint:[t.startPoint[0]+a[0],t.startPoint[1]+a[1]],endPoint:[t.endPoint[0]+a[0],t.endPoint[1]+a[1]],palmLandmarks:t.palmLandmarks}}"function"==typeof SuppressedError&&SuppressedError;var p=function(){function t(t,e,n,a,r,o){this.model=t,this.width=e,this.height=n,this.iouThreshold=r,this.scoreThreshold=o,this.anchors=a.map((function(t){return[t.x_center,t.y_center]})),this.anchorsTensor=(0,s.odF)(this.anchors),this.inputSizeTensor=(0,s.RRF)([e,n]),this.doubleInputSizeTensor=(0,s.RRF)([2*e,2*n])}return t.prototype.normalizeBoxes=function(t){var e=this;return(0,s.lub)((function(){var n=(0,s.tPi)(t,[0,0],[-1,2]),a=(0,s.tPi)(t,[0,2],[-1,2]),r=(0,s.IHx)((0,s.hiC)(n,e.inputSizeTensor),e.anchorsTensor),o=(0,s.hiC)(a,e.doubleInputSizeTensor),i=(0,s.dC7)((0,s.luU)(r,o),e.inputSizeTensor),c=(0,s.dC7)((0,s.IHx)(r,o),e.inputSizeTensor);return(0,s.Izb)([i,c],1)}))},t.prototype.normalizeLandmarks=function(t,e){var n=this;return(0,s.lub)((function(){var a=(0,s.IHx)((0,s.hiC)((0,s.XLQ)(t,[-1,7,2]),n.inputSizeTensor),n.anchors[e]);return(0,s.dC7)(a,n.inputSizeTensor)}))},t.prototype.getBoundingBoxes=function(t){return r(this,void 0,void 0,(function(){var e,n,a,r,i,c,l,u,h,d,p,f,m,g,y,b=this;return o(this,(function(o){switch(o.label){case 0:return e=(0,s.lub)((function(){return(0,s.dC7)((0,s.luU)(t,.5),2)})),"webgl"===(0,s.N_N)()?(a=(0,s.OBj)().get("WEBGL_PACK_DEPTHWISECONV"),(0,s.OBj)().set("WEBGL_PACK_DEPTHWISECONV",!0),n=this.model.predict(e),(0,s.OBj)().set("WEBGL_PACK_DEPTHWISECONV",a)):n=this.model.predict(e),r=(0,s.L9e)(n),i=(0,s.lub)((function(){return(0,s.L9e)((0,s.XD2)((0,s.tPi)(r,[0,0],[-1,1])))})),c=(0,s.tPi)(r,[0,1],[-1,4]),l=this.normalizeBoxes(c),u=console.warn,console.warn=function(){},h=s.image.nonMaxSuppression(l,i,1,this.iouThreshold,this.scoreThreshold),console.warn=u,[4,h.array()];case 1:return d=o.sent(),p=[e,n,h,r,l,c,i],0===d.length?(p.forEach((function(t){return t.dispose()})),[2,null]):(f=d[0],m=(0,s.tPi)(l,[f,0],[1,-1]),g=(0,s.tPi)(r,[f,5],[1,14]),y=(0,s.lub)((function(){return(0,s.XLQ)(b.normalizeLandmarks(g,f),[-1,2])})),p.push(g),p.forEach((function(t){return t.dispose()})),[2,{boxes:m,palmLandmarks:y}])}}))}))},t.prototype.estimateHandBounds=function(t){return r(this,void 0,void 0,(function(){var e,n,a,r,i,c,l,u,h=this;return o(this,(function(o){switch(o.label){case 0:return e=t.shape[1],n=t.shape[2],a=(0,s.lub)((function(){return(0,s.hiC)(s.image.resizeBilinear(t,[h.width,h.height]),255)})),[4,this.getBoundingBoxes(a)];case 1:return null===(r=o.sent())?(a.dispose(),[2,null]):(i=r.boxes.arraySync(),c=i[0].slice(0,2),l=i[0].slice(2,4),u=r.palmLandmarks.arraySync(),a.dispose(),r.boxes.dispose(),r.palmLandmarks.dispose(),[2,(d={startPoint:c,endPoint:l,palmLandmarks:u},p=[n/this.width,e/this.height],{startPoint:[d.startPoint[0]*p[0],d.startPoint[1]*p[1]],endPoint:[d.endPoint[0]*p[0],d.endPoint[1]*p[1]],palmLandmarks:d.palmLandmarks.map((function(t){return[t[0]*p[0],t[1]*p[1]]}))})])}var d,p}))}))},t}(),f={thumb:[1,2,3,4],indexFinger:[5,6,7,8],middleFinger:[9,10,11,12],ringFinger:[13,14,15,16],pinky:[17,18,19,20],palmBase:[0]};var m=function(t,e){return[[1,0,t],[0,1,e],[0,0,1]]};function g(t,e){for(var n=0,a=0;a<t.length;a++)n+=t[a]*e[a];return n}function y(t,e){for(var n=[],a=0;a<t.length;a++)n.push(t[a][e]);return n}function b(t,e){for(var n=[],a=t.length,s=0;s<a;s++){n.push([]);for(var r=0;r<a;r++)n[s].push(g(t[s],y(e,r)))}return n}function x(t,e){var n=Math.cos(t),a=Math.sin(t),s=[[n,-a,0],[a,n,0],[0,0,1]],r=b(m(e[0],e[1]),s);return b(r,m(-e[0],-e[1]))}function v(t,e){return[g(t,e[0]),g(t,e[1])]}var w=[0,-.4],k=[0,-.1],I=[0,5,9,13,17,1,2],S=function(){function t(t,e,n,a,s,r){this.boundingBoxDetector=t,this.meshDetector=e,this.meshWidth=n,this.meshHeight=a,this.maxContinuousChecks=s,this.detectionConfidence=r,this.regionsOfInterest=[],this.runsWithoutHandDetector=0,this.maxHandsNumber=1}return t.prototype.getBoxForPalmLandmarks=function(t,e){var n=t.map((function(t){return v(i(i([],t,!0),[1],!1),e)}));return u(h(d(this.calculateLandmarksBoundingBox(n),w)),3)},t.prototype.getBoxForHandLandmarks=function(t){for(var e=u(h(d(this.calculateLandmarksBoundingBox(t),k)),1.65),n=[],a=0;a<I.length;a++)n.push(t[I[a]].slice(0,2));return e.palmLandmarks=n,e},t.prototype.transformRawCoords=function(t,e,n,a){var s,r,o,u,h=this,d=c(e),p=[d[0]/this.meshWidth,d[1]/this.meshHeight],f=t.map((function(t){return[p[0]*(t[0]-h.meshWidth/2),p[1]*(t[1]-h.meshHeight/2),t[2]]})),m=x(n,[0,0]),y=f.map((function(t){return i(i([],v(t,m),!0),[t[2]],!1)})),b=(r=[[(s=a)[0][0],s[1][0]],[s[0][1],s[1][1]]],o=[s[0][2],s[1][2]],u=[-g(r[0],o),-g(r[1],o)],[r[0].concat(u[0]),r[1].concat(u[1]),[0,0,1]]),w=i(i([],l(e),!0),[1],!1),k=[g(w,b[0]),g(w,b[1])];return y.map((function(t){return[t[0]+k[0],t[1]+k[1],t[2]]}))},t.prototype.estimateHand=function(t){return r(this,void 0,void 0,(function(){var e,n,a,r,i,c,u,h,d,p,f,m,g,y,b,v,w,k,I,S;return o(this,(function(o){switch(o.label){case 0:return!0!==(e=this.shouldUpdateRegionsOfInterest())?[3,2]:[4,this.boundingBoxDetector.estimateHandBounds(t)];case 1:return null===(n=o.sent())?(t.dispose(),this.regionsOfInterest=[],[2,null]):(this.updateRegionsOfInterest(n,!0),this.runsWithoutHandDetector=0,[3,3]);case 2:this.runsWithoutHandDetector++,o.label=3;case 3:return a=this.regionsOfInterest[0],r=function(t,e){var n;return(n=Math.PI/2-Math.atan2(-(e[1]-t[1]),e[0]-t[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}(a.palmLandmarks[0],a.palmLandmarks[2]),i=l(a),c=[i[0]/t.shape[2],i[1]/t.shape[1]],u=s.image.rotateWithOffset(t,r,0,c),h=x(-r,i),d=!0===e?this.getBoxForPalmLandmarks(a.palmLandmarks,h):a,p=function(t,e,n){var a=e.shape[1],r=e.shape[2],o=[[t.startPoint[1]/a,t.startPoint[0]/r,t.endPoint[1]/a,t.endPoint[0]/r]];return s.image.cropAndResize(e,o,[0],n)}(d,u,[this.meshWidth,this.meshHeight]),f=(0,s.hiC)(p,255),p.dispose(),u.dispose(),"webgl"===(0,s.N_N)()?(g=(0,s.OBj)().get("WEBGL_PACK_DEPTHWISECONV"),(0,s.OBj)().set("WEBGL_PACK_DEPTHWISECONV",!0),m=this.meshDetector.predict(f),(0,s.OBj)().set("WEBGL_PACK_DEPTHWISECONV",g)):m=this.meshDetector.predict(f),y=m[0],b=m[1],f.dispose(),v=y.dataSync()[0],y.dispose(),v<this.detectionConfidence?(b.dispose(),this.regionsOfInterest=[],[2,null]):(w=(0,s.XLQ)(b,[-1,3]),k=w.arraySync(),b.dispose(),w.dispose(),I=this.transformRawCoords(k,d,r,h),S=this.getBoxForHandLandmarks(I),this.updateRegionsOfInterest(S,!1),[2,{landmarks:I,handInViewConfidence:v,boundingBox:{topLeft:S.startPoint,bottomRight:S.endPoint}}])}}))}))},t.prototype.calculateLandmarksBoundingBox=function(t){var e=t.map((function(t){return t[0]})),n=t.map((function(t){return t[1]}));return{startPoint:[Math.min.apply(Math,e),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,e),Math.max.apply(Math,n)]}},t.prototype.updateRegionsOfInterest=function(t,e){if(e)this.regionsOfInterest=[t];else{var n=this.regionsOfInterest[0],a=0;if(null!=n&&null!=n.startPoint){var s=t.startPoint,r=s[0],o=s[1],i=t.endPoint,c=i[0],l=i[1],u=n.startPoint,h=u[0],d=u[1],p=n.endPoint,f=p[0],m=p[1],g=Math.max(r,h),y=Math.max(o,d),b=(Math.min(c,f)-g)*(Math.min(l,m)-y);a=b/((c-r)*(l-o)+(f-h)*(m-o)-b)}this.regionsOfInterest[0]=a>.8?n:t}},t.prototype.shouldUpdateRegionsOfInterest=function(){return this.regionsOfInterest.length!==this.maxHandsNumber||this.runsWithoutHandDetector>=this.maxContinuousChecks},t}();function N(){return r(this,void 0,void 0,(function(){return o(this,(function(t){return[2,(0,a.YL)("https://tfhub.dev/mediapipe/tfjs-model/handdetector/1/default/1",{fromTFHub:!0})]}))}))}function T(){return r(this,void 0,void 0,(function(){return o(this,(function(t){return[2,(0,a.YL)("https://tfhub.dev/mediapipe/tfjs-model/handskeleton/1/default/1",{fromTFHub:!0})]}))}))}function C(){return r(this,void 0,void 0,(function(){return o(this,(function(t){return[2,s.D5U.fetch("https://tfhub.dev/mediapipe/tfjs-model/handskeleton/1/default/1/anchors.json?tfjs-format=file").then((function(t){return t.json()}))]}))}))}function E(t){var e=void 0===t?{}:t,n=e.maxContinuousChecks,a=void 0===n?1/0:n,s=e.detectionConfidence,i=void 0===s?.8:s,c=e.iouThreshold,l=void 0===c?.3:c,u=e.scoreThreshold,h=void 0===u?.5:u;return r(this,void 0,void 0,(function(){var t,e,n,s,r,c;return o(this,(function(o){switch(o.label){case 0:return[4,Promise.all([C(),N(),T()])];case 1:return t=o.sent(),e=t[0],n=t[1],s=t[2],r=new p(n,256,256,e,l,h),c=new S(r,s,256,256,a,i),[2,new _(c)]}}))}))}var _=function(){function t(t){this.pipeline=t}return t.getAnnotations=function(){return f},t.prototype.estimateHands=function(t,e){return void 0===e&&(e=!1),r(this,void 0,void 0,(function(){var n,a,r,i,c,l,u,h,d;return o(this,(function(o){switch(o.label){case 0:return n=function(t){return t instanceof s.esB?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),a=n[1],r=(0,s.lub)((function(){return t instanceof s.esB||(t=s.Xhn.fromPixels(t)),(0,s.dt4)((0,s.pju)(t,"float32"))})),[4,this.pipeline.estimateHand(r)];case 1:if(i=o.sent(),r.dispose(),null===i)return[2,[]];for(c=i,!0===e&&(c=function(t,e){var n=t.handInViewConfidence,a=t.landmarks,s=t.boundingBox;return{handInViewConfidence:n,landmarks:a.map((function(t){return[e-1-t[0],t[1],t[2]]})),boundingBox:{topLeft:[e-1-s.topLeft[0],s.topLeft[1]],bottomRight:[e-1-s.bottomRight[0],s.bottomRight[1]]}}}(i,a)),l={},u=0,h=Object.keys(f);u<h.length;u++)d=h[u],l[d]=f[d].map((function(t){return c.landmarks[t]}));return[2,[{handInViewConfidence:c.handInViewConfidence,boundingBox:c.boundingBox,landmarks:c.landmarks,annotations:l}]]}}))}))},t}()},1447:(t,e,n)=>{"use strict";n.d(e,{YL:()=>Xt,gJ:()=>qt});var a={};n.r(a),n.d(a,{json:()=>B});var s={};n.r(s),n.d(s,{json:()=>L});var r={};n.r(r),n.d(r,{json:()=>z});var o={};n.r(o),n.d(o,{json:()=>U});var i={};n.r(i),n.d(i,{json:()=>P});var c={};n.r(c),n.d(c,{json:()=>V});var l={};n.r(l),n.d(l,{json:()=>W});var u={};n.r(u),n.d(u,{json:()=>G});var h={};n.r(h),n.d(h,{json:()=>H});var d={};n.r(d),n.d(d,{json:()=>j});var p={};n.r(p),n.d(p,{json:()=>X});var f={};n.r(f),n.d(f,{json:()=>q});var m={};n.r(m),n.d(m,{json:()=>K});var g={};n.r(g),n.d(g,{json:()=>Z});var y={};n.r(y),n.d(y,{json:()=>Y});var b={};n.r(b),n.d(b,{json:()=>Q});var x={};n.r(x),n.d(x,{json:()=>J});var v={};n.r(v),n.d(v,{json:()=>$});var w={};n.r(w),n.d(w,{json:()=>tt});var k={};n.r(k),n.d(k,{OP_SCOPE_SUFFIX:()=>yt.zvA,abs:()=>yt.WnP,acos:()=>yt.Khb,acosh:()=>yt.__u,add:()=>yt.IHx,addN:()=>yt.QBD,all:()=>yt.$6P,any:()=>yt.YjB,argMax:()=>yt.NqF,argMin:()=>yt.vHJ,asin:()=>yt.ZRM,asinh:()=>yt.VfV,atan:()=>yt.z4N,atan2:()=>yt.fvJ,atanh:()=>yt.C80,avgPool:()=>yt.wS1,avgPool3d:()=>yt.uR5,basicLSTMCell:()=>yt.zEQ,batchNorm:()=>yt.tgs,batchNorm2d:()=>yt.Dxk,batchNorm3d:()=>yt.JY5,batchNorm4d:()=>yt.p3b,batchToSpaceND:()=>yt.E4h,bincount:()=>yt.yE8,bitwiseAnd:()=>yt.ycw,booleanMaskAsync:()=>yt.anm,broadcastArgs:()=>yt.XsQ,broadcastTo:()=>yt.UFq,buffer:()=>yt.f3b,cast:()=>yt.pju,ceil:()=>yt.mDi,clipByValue:()=>yt.iUl,clone:()=>yt.d9v,complex:()=>yt.PYB,concat:()=>yt.zoF,concat1d:()=>yt.gME,concat2d:()=>yt.Izb,concat3d:()=>yt.MNy,concat4d:()=>yt.ZaL,conv1d:()=>yt.PAt,conv2d:()=>yt.Tek,conv2dTranspose:()=>yt.bc,conv3d:()=>yt.pdZ,conv3dTranspose:()=>yt.$QV,cos:()=>yt.mCk,cosh:()=>yt.f9Y,cosineWindow:()=>yt.mew,cumprod:()=>yt.$Gn,cumsum:()=>yt.zbp,denseBincount:()=>yt.ppE,depthToSpace:()=>yt.nTT,depthwiseConv2d:()=>yt.B10,diag:()=>yt.Ka3,dilation2d:()=>yt.WmZ,div:()=>yt.hiC,divNoNan:()=>yt.NTj,dot:()=>yt.AKD,dropout:()=>yt.rvX,einsum:()=>yt.WYO,elu:()=>yt.pyx,enclosingPowerOfTwo:()=>yt.GRh,ensureShape:()=>yt.EDe,equal:()=>yt.DgJ,erf:()=>yt.qNN,euclideanNorm:()=>yt.d2q,exp:()=>yt.Qqt,expandDims:()=>yt.dt4,expm1:()=>yt.t$B,eye:()=>yt.iyy,fft:()=>yt.kp_,fill:()=>yt.hlL,floor:()=>yt.GWj,floorDiv:()=>yt.qPi,fused:()=>yt.imm,gather:()=>yt.Iqj,gatherND:()=>yt.dbB,greater:()=>yt.pjt,greaterEqual:()=>yt.brS,ifft:()=>yt.Sxn,imag:()=>yt.asL,image:()=>yt.BHj,inTopKAsync:()=>yt.V3u,irfft:()=>yt.wx0,isFinite:()=>yt.xVT,isInf:()=>yt.UWc,isNaN:()=>yt.i2d,leakyRelu:()=>yt.hi7,less:()=>yt.d9m,lessEqual:()=>yt.zN1,linalg:()=>yt.$r2,linspace:()=>yt.SX3,localResponseNormalization:()=>yt.G9k,log:()=>yt.cM7,log1p:()=>yt.Krr,logSigmoid:()=>yt.e_t,logSoftmax:()=>yt.CmS,logSumExp:()=>yt.l_t,logicalAnd:()=>yt.HvI,logicalNot:()=>yt.hJK,logicalOr:()=>yt.K5V,logicalXor:()=>yt.egP,losses:()=>yt.MB5,lowerBound:()=>yt.eab,matMul:()=>yt.OI3,max:()=>yt.Fp7,maxPool:()=>yt._sB,maxPool3d:()=>yt.YQQ,maxPoolWithArgmax:()=>yt.Ip$,maximum:()=>yt.gWQ,mean:()=>yt.J69,meshgrid:()=>yt.ry_,min:()=>yt.VV$,minimum:()=>yt.LTh,mirrorPad:()=>yt.VdP,mod:()=>yt.wQq,moments:()=>yt.Gi7,movingAverage:()=>yt.p_,mul:()=>yt.dC7,multiRNNCell:()=>yt.rq4,multinomial:()=>yt.SJ_,neg:()=>yt.W76,norm:()=>yt.KOy,notEqual:()=>yt.Quu,oneHot:()=>yt.lfX,ones:()=>yt.iUs,onesLike:()=>yt.JpU,op:()=>yt.op,outerProduct:()=>yt.N2O,pad:()=>yt.vku,pad1d:()=>yt.pNR,pad2d:()=>yt.koy,pad3d:()=>yt.t1L,pad4d:()=>yt.lGY,pool:()=>yt.d_R,pow:()=>yt.sQ3,prelu:()=>yt.AL3,print:()=>yt.S0v,prod:()=>yt.WVs,raggedGather:()=>yt.$gW,raggedRange:()=>yt.VT$,raggedTensorToTensor:()=>yt.N89,rand:()=>yt.TN_,randomGamma:()=>yt.wzB,randomNormal:()=>yt.nGf,randomStandardNormal:()=>yt.ruB,randomUniform:()=>yt.LGj,randomUniformInt:()=>yt.pe5,range:()=>yt.w6H,real:()=>yt.kwC,reciprocal:()=>yt.M25,relu:()=>yt.UYe,relu6:()=>yt.btT,reshape:()=>yt.XLQ,reverse:()=>yt.GYS,reverse1d:()=>yt.SDf,reverse2d:()=>yt.diP,reverse3d:()=>yt.sx7,reverse4d:()=>yt.mG2,rfft:()=>yt.QEs,round:()=>yt.NMM,rsqrt:()=>yt.bp0,scalar:()=>yt.iD$,scatterND:()=>yt.snQ,searchSorted:()=>yt.zcT,selu:()=>yt.U8D,separableConv2d:()=>yt.U_I,setdiff1dAsync:()=>yt.ODp,sigmoid:()=>yt.XD2,sign:()=>yt.Xxe,signal:()=>yt.tdS,sin:()=>yt.O$l,sinh:()=>yt.R_K,slice:()=>yt.tPi,slice1d:()=>yt.jZU,slice2d:()=>yt.SmN,slice3d:()=>yt.CnO,slice4d:()=>yt.p0P,softmax:()=>yt.XAC,softplus:()=>yt.Wvh,spaceToBatchND:()=>yt.fBT,sparse:()=>yt.rVs,sparseToDense:()=>yt.ers,spectral:()=>yt.uN7,split:()=>yt.Vl2,sqrt:()=>yt._b3,square:()=>yt.h62,squaredDifference:()=>yt.$i,squeeze:()=>yt.L9e,stack:()=>yt.knu,step:()=>yt.Nbs,stridedSlice:()=>yt.NXj,string:()=>yt.Z_8,sub:()=>yt.luU,sum:()=>yt.Smz,tan:()=>yt.ORZ,tanh:()=>yt.AEp,tensor:()=>yt.XeE,tensor1d:()=>yt.RRF,tensor2d:()=>yt.odF,tensor3d:()=>yt.wOQ,tensor4d:()=>yt.yXz,tensor5d:()=>yt.Bfx,tensor6d:()=>yt.xZs,tensorScatterUpdate:()=>yt.Pg0,tile:()=>yt.Gg6,topk:()=>yt.hg7,transpose:()=>yt.p4s,truncatedNormal:()=>yt.Xu6,unique:()=>yt.Two,unsortedSegmentSum:()=>yt.pUJ,unstack:()=>yt.HHK,upperBound:()=>yt.GaM,variable:()=>yt.VD$,where:()=>yt.arb,whereAsync:()=>yt.itS,zeros:()=>yt.lls,zerosLike:()=>yt.P84});var I=n(8149);var S,N;(0,I.OBj)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"}(S||(S={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(N||(N={}));const T={};function C(t){return T[t]}function E(t,e,n,a,s){const r=e.inputParams[t];if(r&&void 0!==r.inputIndexStart){const t=r.inputIndexStart,o=0===r.inputIndexEnd?void 0:void 0===r.inputIndexEnd?t+1:r.inputIndexEnd,i=t<0?e.inputNames.length+t:t;if("tensor"===r.type)return _(e.inputNames[i],n,a,s);if("tensors"===r.type){const r=e.inputs.slice(t,o);return e.inputNames.slice(t,o).filter(((t,e)=>{var n;return"NoOp"!==(null===(n=r[e])||void 0===n?void 0:n.op)})).map((t=>_(t,n,a,s)))}const c=_(e.inputNames[i],n,a,s),l=c.dataSync();return"number"===r.type?l[0]:I.D5U.toNestedArray(c.shape,l)}const o=e.attrParams[t];return o&&o.value}function _(t,e,n,a){const[s,r]=O(t,n);if(null!=a){const t=a.getHashTableHandleByName(s);if(null!=t)return t}const o=n.currentContextIds.find((t=>!!e[R(s,t)]));return void 0!==o?e[R(s,o)][r]:void 0}function A(t,e,n){return e[R(t,n.currentContextId)]}function D(t,e){const[n,a,s]=O(t,e);return[R(n,e&&e.currentContextId),a,s]}function R(t,e){return e?"".concat(t,"-").concat(e):t}function O(t,e){if(""===t)return["",0,void 0];const n=null!=e&&null!=e.parseNodeNameCache;if(n){const n=e.parseNodeNameCache.get(t);if(null!=n)return n}const a=t.split(":");let s;if(1===a.length)s=[t,0,void 0];else{const t=a[0],e=3===a.length?a[1]:void 0;s=[t,Number(a[a.length-1]),e]}return n&&e.parseNodeNameCache.set(t,s),s}function F(t,e,n){let a=E("pad",t,e,n);if("explicit"===a){a=E("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=a[2*t],s[t][1]=a[2*t+1];return s}return a}function M(t){return t.kept?t:(0,I.d9v)(t)}const B=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],L=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],z=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],U=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],P=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],V=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],W=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],G=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],H=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],j=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],X=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],q=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],K=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Z=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Y=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Q=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],J=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],$=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],tt=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class et{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[a,s,r,o,i,c,l,u,h,d,p,f,m,g,y,b,x,v,w].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=t.node,a=[],s=[],r=[],o=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?a.push(t[e.name]):"Const"===e.op?s.push(t[e.name]):null!=e.input&&0!==e.input.length||r.push(t[e.name]),t)),{});let i=[];const c=[];let l={},u={};null!=e&&(l=this.mapSignatureEntries(e.inputs),u=this.mapSignatureEntries(e.outputs));const h=Object.keys(o);h.forEach((t=>{const e=o[t];e.inputNames.forEach(((t,n)=>{const[a,,s]=D(t),r=o[a];if(null!=r.outputs){const t=r.outputs.indexOf(s);if(-1!==t){const s="".concat(a,":").concat(t);e.inputNames[n]=s}}e.inputs.push(r),r.children.push(e)}))})),0===Object.keys(u).length?h.forEach((t=>{const e=o[t];0===e.children.length&&c.push(e)})):Object.keys(u).forEach((t=>{const[e]=D(t),n=o[e];null!=n&&(n.signatureKey=u[t],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((t=>{const[e]=D(t),n=o[e];n&&(n.signatureKey=l[t],i.push(n))})):i=a;let d={};null!=t.library&&null!=t.library.function&&(d=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const p={nodes:o,inputs:i,outputs:c,weights:s,placeholders:a,signature:e,functions:d};return r.length>0&&(p.initNodes=r),p}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=C(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.slice(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const a=n.type;let s;switch(n.type){case"string":s=at(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=at(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=pt(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pt(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=rt(t.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=rt(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=dt(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=dt(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=st(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=st(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=mt(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=mt(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=ht(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ht(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=ft(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ft(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=ct(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ct(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=lt(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=lt(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=it(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=it(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(t.op))}return e[n.name]={value:s,type:a},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let a={};null!=e&&(a=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const s=[],r=[];t.signature.inputArg.forEach((t=>{const[e]=D(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ot(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,s.push(n),a[e]=n}));Object.keys(a).forEach((t=>{const e=a[t];e.inputNames.forEach(((t,n)=>{const[s,,r]=D(t),o=a[s];if(null!=o.outputs){const t=o.outputs.indexOf(r);if(-1!==t){const a="".concat(s,":").concat(t);e.inputNames[n]=a}}e.inputs.push(o),o.children.push(e)}))}));const o=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=D(o[t.name]),s=a[e];null!=s&&(s.defaultOutput=n,r.push(s))}));const i=this.mapArgsToSignature(t);return{nodes:a,inputs:s,outputs:r,weights:n,placeholders:[],signature:i}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function nt(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=(0,I.OBj)().global;if("undefined"!==typeof e.atob)return e.atob(t);if("undefined"!==typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function at(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=t[e];return null!=s?nt(s.s,a):n}function st(t,e,n){const a=t[e];return a?a.b:n}function rt(t,e,n){const a=t[e]||{},s=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof s?s:parseInt(s,10)}function ot(t){switch("string"===typeof t&&(t=S[t]),t){case S.DT_FLOAT:case S.DT_HALF:return"float32";case S.DT_INT32:case S.DT_INT64:case S.DT_INT8:case S.DT_UINT8:return"int32";case S.DT_BOOL:return"bool";case S.DT_DOUBLE:return"float32";case S.DT_STRING:return"string";default:return null}}function it(t,e,n){const a=t[e];return a&&a.func?a.func.name:n}function ct(t,e,n){const a=t[e];return a&&a.type?ot(a.type):n}function lt(t,e,n){const a=t[e];return a&&a.list&&a.list.type?a.list.type.map((t=>ot(t))):n}function ut(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"===typeof t.size?t.size:parseInt(t.size,10))):[]}function ht(t,e,n){const a=t[e];return a&&a.shape?ut(a.shape):n}function dt(t,e,n){const a=t[e];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((t=>"number"===typeof t?t:parseInt(t,10))):n}function pt(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=t[e];return s&&s.list&&s.list.s?s.list.s.map((t=>nt(t,a))):n}function ft(t,e,n){const a=t[e];return a&&a.list&&a.list.shape?a.list.shape.map((t=>ut(t))):n}function mt(t,e,n){const a=t[e];return a&&a.list&&a.list.b?a.list.b:n}class gt{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return _(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return _(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return rt(this.node.rawAttrs,t,e);if(null!=n.s)return at(this.node.rawAttrs,t,e);if(null!=n.b)return st(this.node.rawAttrs,t,e);if(null!=n.shape)return ht(this.node.rawAttrs,t,e);if(null!=n.type)return ct(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return dt(this.node.rawAttrs,t,e);if(null!=n.list.s)return pt(this.node.rawAttrs,t,e);if(null!=n.list.shape)return ft(this.node.rawAttrs,t,e);if(null!=n.list.b)return mt(this.node.rawAttrs,t,e);if(null!=n.list.type)return lt(this.node.rawAttrs,t,e)}return e}}var yt=n(4176);function bt(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof t&&"number"!==typeof e){I.D5U.assert(t.length===e.length,(()=>n+" Shapes ".concat(t," and ").concat(e," must match")));for(let a=0;a<t.length;a++){const s=t[a],r=e[a];I.D5U.assert(s<0||r<0||s===r,(()=>n+" Shapes ".concat(t," and ").concat(e," must match")))}}}function xt(t){return"number"!==typeof t&&!t.some((t=>t<0))}function vt(t,e,n){let a=wt(t,n);const s=!xt(a);if(s&&0===e.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(s&&e.forEach((t=>{a=wt(t.shape,a)})),!xt(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function wt(t,e){if("number"===typeof t)return e;if("number"===typeof e)return t;if(t.length!==e.length)throw new Error("Incompatible ranks during merge: ".concat(t," vs. ").concat(e));const n=[];for(let a=0;a<t.length;++a){const s=t[a],r=e[a];if(s>=0&&r>=0&&s!==r)throw new Error("Incompatible shape during merge: ".concat(t," vs. ").concat(e));n[a]=s>=0?s:r}return n}class kt{constructor(t,e,n,a,s,r,o){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=s,this.dynamicSize=r,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,I.iD$)(0),(0,I.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||t>=this.size())throw new Error("Tried to read from index ".concat(t,", but array size is: ").concat(this.size()));const e=this.tensors[t];if(e.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(t," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error("Tried to write to index ".concat(t,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,",\n          because the value dtype is ").concat(e.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),bt(this.elementShape,e.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been written."));n.tensor=e,(0,I.CnY)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(t.length," is not the same as tensors size: ").concat(e.length,"."));t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(e));if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return(0,I.XeE)([],[0].concat(this.elementShape));const n=this.readMany(t);return bt(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,I.knu)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(t));if(0===this.size())return(0,I.XeE)([],[0].concat(this.elementShape));const e=[];for(let a=0;a<this.size();a++)e.push(a);const n=this.readMany(e);return bt(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),(0,I.zoF)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(t,(0,I.HHK)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));let n=0;const a=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(e.shape));if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(t.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const s=0===n?0:e.size/n,r=[];(0,I.lub)((()=>{e=(0,I.XLQ)(e,[1,n,s]);for(let n=0;n<t.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,t[n],s];r[n]=(0,I.XLQ)((0,I.tPi)(e,o,i),this.elementShape)}return r}));const o=[];for(let i=0;i<t.length;i++)o[i]=i;this.writeMany(o,r)}}class It{get id(){return this.idTensor.id}constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(t.dtype));bt(e,t.shape,"TensorList shape mismatch: "),(0,I.CnY)(t)})),this.idTensor=(0,I.iD$)(0),this.maxNumElements=a,(0,I.CnY)(this.idTensor)}copy(){return new It([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));bt(t,this.elementShape,"TensorList shape mismatch: ");const a=vt(this.elementShape,this.tensors,t);return(0,I.lub)((()=>{const t=this.tensors.map((t=>(0,I.XLQ)(t,a)));return(0,I.knu)(t,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=vt(this.elementShape,this.tensors,t),a=this.tensors.pop();return a.kept=!1,bt(a.shape,t,"TensorList shape mismatch: "),(0,I.XLQ)(a,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(bt(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,I.CnY)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(t));if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error("TensorListResize input size ".concat(t," is greater maxNumElement ").concat(this.maxNumElements,"."));const e=new It([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)e.tensors[n]=this.tensors[n];return e}getItem(t,e,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(t<0||t>this.tensors.length)throw new Error("Trying to access element ".concat(t," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[t])throw new Error("element at index ".concat(t," is null."));bt(this.tensors[t].shape,e,"TensorList shape mismatch: ");const a=vt(this.elementShape,this.tensors,e);return(0,I.XLQ)(this.tensors[t],a)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error("Trying to set element ".concat(t," in a list with max ").concat(this.maxNumElements," elements."));bt(this.elementShape,e.shape,"TensorList shape mismatch: "),(0,I.CnY)(e),null!=this.tensors[t]&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));bt(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const a=vt(this.elementShape,this.tensors,n);return 0===t.length?(0,I.XeE)([],[0].concat(a)):(0,I.lub)((()=>{const e=t.map((t=>(0,I.XLQ)(this.tensors[t],a)));return(0,I.knu)(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(t));bt(this.elementShape,e,"TensorList shape mismatch: ");const n=vt(this.elementShape,this.tensors,e);return 0===this.size()?(0,I.XeE)([],[0].concat(n)):(0,I.lub)((()=>{const t=this.tensors.map((t=>(0,I.XLQ)(t,n)));return(0,I.zoF)(t,0)}))}}const St=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const a=E("thenBranch",t,e,n),s=E("elseBranch",t,e,n),r=E("cond",t,e,n),o=E("args",t,e,n);return(await r.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=E("body",t,e,n),s=E("cond",t,e,n),r=E("args",t,e,n),o=await n.functionMap[s].executeFunctionAsync(r,n.tensorArrayMap,n.tensorListMap),i=r.map((t=>t.id));let c=await o[0].data();o.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||t.dispose()}));let l=r;for(;c[0];){const t=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map((t=>t.id));t.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const r=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await r[0].data(),r.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return l}case"LoopCond":return[M(E("pred",t,e,n))];case"Switch":{const a=E("pred",t,e,n);let s=E("data",t,e,n);return s.kept||(s=M(s)),(await a.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const a=t.inputNames.find((t=>void 0!==_(t,e,n)));if(a){return[M(_(a,e,n))]}return}case"Enter":{const a=E("frameName",t,e,n),s=E("tensor",t,e,n);return n.enterFrame(a),[M(s)]}case"Exit":{const a=E("tensor",t,e,n);return n.exitFrame(),[M(a)]}case"NextIteration":{const a=E("tensor",t,e,n);return n.nextIteration(),[M(a)]}case"TensorArrayV3":{const a=E("size",t,e,n),s=E("dtype",t,e,n),r=E("elementShape",t,e,n),o=E("dynamicSize",t,e,n),i=E("clearAfterRead",t,e,n),c=E("identicalElementShapes",t,e,n),l=E("name",t,e,n),u=new kt(l,s,a,r,c,o,i);return n.addTensorArray(u),[u.idTensor,(0,I.iD$)(1)]}case"TensorArrayWriteV3":{const a=E("tensorArrayId",t,e,n),s=E("index",t,e,n),r=E("tensor",t,e,n),o=n.getTensorArray(a.id);return o.write(s,r),[o.idTensor]}case"TensorArrayReadV3":{const a=E("tensorArrayId",t,e,n),s=E("index",t,e,n);return[n.getTensorArray(a.id).read(s)]}case"TensorArrayGatherV3":{const a=E("tensorArrayId",t,e,n),s=E("indices",t,e,n),r=E("dtype",t,e,n);return[n.getTensorArray(a.id).gather(s,r)]}case"TensorArrayScatterV3":{const a=E("tensorArrayId",t,e,n),s=E("indices",t,e,n),r=E("tensor",t,e,n),o=n.getTensorArray(a.id);return o.scatter(s,r),[o.idTensor]}case"TensorArrayConcatV3":{const a=E("tensorArrayId",t,e,n),s=n.getTensorArray(a.id),r=E("dtype",t,e,n);return[s.concat(r)]}case"TensorArraySplitV3":{const a=E("tensorArrayId",t,e,n),s=E("tensor",t,e,n),r=E("lengths",t,e,n),o=n.getTensorArray(a.id);return o.split(r,s),[o.idTensor]}case"TensorArraySizeV3":{const a=E("tensorArrayId",t,e,n),s=n.getTensorArray(a.id);return[(0,I.iD$)(s.size(),"int32")]}case"TensorArrayCloseV3":{const a=E("tensorArrayId",t,e,n),s=n.getTensorArray(a.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const a=E("tensorListId",t,e,n),s=E("index",t,e,n),r=E("tensor",t,e,n),o=n.getTensorList(a.id);return o.setItem(s,r),[o.idTensor]}case"TensorListGetItem":{const a=E("tensorListId",t,e,n),s=E("index",t,e,n),r=E("elementShape",t,e,n),o=E("elementDType",t,e,n);return[n.getTensorList(a.id).getItem(s,r,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=E("indices",t,e,n),s=function(t,e,n,a){if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const s=Math.max(...e);if(null!=a&&-1!==a&&s>=a)throw new Error("Max index must be < array size (".concat(s,"  vs. ").concat(a,")"));const r=new It([],n,t.dtype,a),o=(0,I.HHK)(t,0);return e.forEach(((t,e)=>{r.setItem(t,o[e])})),r}(E("tensor",t,e,n),a,E("elementShape",t,e,n),E("numElements",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=E("elementShape",t,e,n),s=E("elementDType",t,e,n);let r;r="TensorListReserve"===t.op?"numElements":"maxNumElements";const o=E(r,t,e,n),i=function(t,e,n,a){return new It([],t,e,a)}(a,s,0,"TensorListReserve"===t.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=E("tensorListId",t,e,n),s=E("indices",t,e,n),r=E("elementShape",t,e,n),o=E("elementDType",t,e,n);return[n.getTensorList(a.id).gather(s,o,r)]}case"TensorListStack":{const a=E("tensorListId",t,e,n),s=E("elementShape",t,e,n),r=E("elementDType",t,e,n),o=E("numElements",t,e,n);return[n.getTensorList(a.id).stack(s,r,o)]}case"TensorListFromTensor":{const a=function(t,e,n){const a=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(t.shape));if(t.dtype!==n)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(n));bt(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=(0,I.HHK)(t);return new It(s,e,a)}(E("tensor",t,e,n),E("elementShape",t,e,n),E("elementDType",t,e,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=E("tensorListId",t,e,n),s=n.getTensorList(a.id),r=E("dtype",t,e,n),o=E("elementShape",t,e,n);return[s.concat(r,o)]}case"TensorListPushBack":{const a=E("tensorListId",t,e,n),s=E("tensor",t,e,n),r=n.getTensorList(a.id);return r.pushBack(s),[r.idTensor]}case"TensorListPopBack":{const a=E("tensorListId",t,e,n),s=E("elementShape",t,e,n),r=E("elementDType",t,e,n);return[n.getTensorList(a.id).popBack(s,r)]}case"TensorListSplit":{const a=E("tensor",t,e,n),s=E("elementShape",t,e,n),r=function(t,e,n){let a=0;const s=e.map((t=>(a+=t,a)));if(a!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(t.shape));const r=wt(t.shape.slice(1),n),o=0===a?0:t.size/a,i=(0,I.lub)((()=>{const n=[];t=(0,I.XLQ)(t,[1,a,o]);for(let a=0;a<e.length;++a){const i=[0,0===a?0:s[a-1],0],c=[1,e[a],o];n[a]=(0,I.XLQ)((0,I.tPi)(t,i,c),r)}return t.dispose(),n})),c=new It([],n,t.dtype,e.length);for(let l=0;l<i.length;l++)c.setItem(l,i[l]);return c}(a,E("lengths",t,e,n),s);return n.addTensorList(r),[r.idTensor]}case"TensorListLength":{const a=E("tensorListId",t,e,n),s=n.getTensorList(a.id);return[(0,I.iD$)(s.size(),"int32")]}case"TensorListResize":{const a=E("tensorListId",t,e,n),s=E("size",t,e,n),r=n.getTensorList(a.id).resize(s);return n.addTensorList(r),[r.idTensor]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}};function Nt(t,e,n){const[a,s]=E("fusedOps",t,e,n),r="biasadd"===a,o=!r,i="prelu"===s,c="fusedbatchnorm"===a,l=E("numArgs",t,e,n);if(r){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&r&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=E("strides",t,e,n),h=F(t,e,n),d=E("dataFormat",t,e,n).toUpperCase(),p=E("dilations",t,e,n);let[f,m]=E("args",t,e,n);o&&(m=f,f=void 0);return{stride:u,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:E("leakyreluAlpha",t,e,n)}}function Tt(t,e,n){return{boxes:E("boxes",t,e,n),scores:E("scores",t,e,n),maxOutputSize:E("maxOutputSize",t,e,n),iouThreshold:E("iouThreshold",t,e,n),scoreThreshold:E("scoreThreshold",t,e,n),softNmsSigma:E("softNmsSigma",t,e,n)}}var Ct=n(7067);class Et{get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=(0,I.iD$)(0),this.tensorMap=new Map,(0,I.CnY)(this.handle)}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ct.i(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),(0,I.lub)((()=>{const t=(0,I.HHK)(e),a=n.length,s=t.length;I.D5U.assert(a===s,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(s," ")+"elements."));for(let e=0;e<a;e++){const a=n[e],s=t[e];(0,I.CnY)(s),this.tensorMap.set(a,s)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return(0,I.lub)((()=>{const t=[];for(let a=0;a<n.length;a++){const s=n[a],r=this.findWithDefault(s,e);t.push(r)}return(0,I.knu)(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(t.dtype));if(e.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(e.dtype))}}function _t(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:I.lub;const r=((t,e,n)=>{switch(t.category){case"arithmetic":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(E("a",t,e,n),E("b",t,e,n))];case"AddN":return[a.addN(E("tensors",t,e,n))];case"FloorMod":case"Mod":return[a.mod(E("a",t,e,n),E("b",t,e,n))];case"Mul":return[a.mul(E("a",t,e,n),E("b",t,e,n))];case"RealDiv":case"Div":return[a.div(E("a",t,e,n),E("b",t,e,n))];case"DivNoNan":return[a.divNoNan(E("a",t,e,n),E("b",t,e,n))];case"FloorDiv":return[a.floorDiv(E("a",t,e,n),E("b",t,e,n))];case"Sub":return[a.sub(E("a",t,e,n),E("b",t,e,n))];case"Minimum":return[a.minimum(E("a",t,e,n),E("b",t,e,n))];case"Maximum":return[a.maximum(E("a",t,e,n),E("b",t,e,n))];case"Pow":return[a.pow(E("a",t,e,n),E("b",t,e,n))];case"SquaredDifference":return[a.squaredDifference(E("a",t,e,n),E("b",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"basic_math":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"Abs":case"ComplexAbs":return[a.abs(E("x",t,e,n))];case"Acos":return[a.acos(E("x",t,e,n))];case"Acosh":return[a.acosh(E("x",t,e,n))];case"Asin":return[a.asin(E("x",t,e,n))];case"Asinh":return[a.asinh(E("x",t,e,n))];case"Atan":return[a.atan(E("x",t,e,n))];case"Atan2":return[a.atan2(E("x",t,e,n),E("y",t,e,n))];case"Atanh":return[a.atanh(E("x",t,e,n))];case"Ceil":return[a.ceil(E("x",t,e,n))];case"Complex":return[a.complex(E("real",t,e,n),E("imag",t,e,n))];case"Cos":return[a.cos(E("x",t,e,n))];case"Cosh":return[a.cosh(E("x",t,e,n))];case"Elu":return[a.elu(E("x",t,e,n))];case"Erf":return[a.erf(E("x",t,e,n))];case"Exp":return[a.exp(E("x",t,e,n))];case"Expm1":return[a.expm1(E("x",t,e,n))];case"Floor":return[a.floor(E("x",t,e,n))];case"Log":return[a.log(E("x",t,e,n))];case"Log1p":return[a.log1p(E("x",t,e,n))];case"Imag":return[a.imag(E("x",t,e,n))];case"Neg":return[a.neg(E("x",t,e,n))];case"Reciprocal":return[a.reciprocal(E("x",t,e,n))];case"Real":return[a.real(E("x",t,e,n))];case"Relu":return[a.relu(E("x",t,e,n))];case"Round":return[a.round(E("x",t,e,n))];case"Selu":return[a.selu(E("x",t,e,n))];case"Sigmoid":return[a.sigmoid(E("x",t,e,n))];case"Sin":return[a.sin(E("x",t,e,n))];case"Sign":return[a.sign(E("x",t,e,n))];case"Sinh":return[a.sinh(E("x",t,e,n))];case"Softplus":return[a.softplus(E("x",t,e,n))];case"Sqrt":return[a.sqrt(E("x",t,e,n))];case"Square":return[a.square(E("x",t,e,n))];case"Tanh":return[a.tanh(E("x",t,e,n))];case"Tan":return[a.tan(E("x",t,e,n))];case"ClipByValue":return[a.clipByValue(E("x",t,e,n),E("clipValueMin",t,e,n),E("clipValueMax",t,e,n))];case"Relu6":return[a.relu6(E("x",t,e,n))];case"Rsqrt":return[a.rsqrt(_(t.inputNames[0],e,n))];case"LeakyRelu":return[a.leakyRelu(E("x",t,e,n),E("alpha",t,e,n))];case"Prelu":return[a.prelu(E("x",t,e,n),E("alpha",t,e,n))];case"IsNan":return[a.isNaN(_(t.inputNames[0],e,n))];case"IsInf":return[a.isInf(_(t.inputNames[0],e,n))];case"IsFinite":return[a.isFinite(_(t.inputNames[0],e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"control":return St(t,e,n);case"convolution":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"Conv1D":{const s=E("stride",t,e,n),r=E("pad",t,e,n),o=E("dataFormat",t,e,n).toUpperCase(),i=E("dilation",t,e,n);return[a.conv1d(E("x",t,e,n),E("filter",t,e,n),s,r,o,i)]}case"Conv2D":{const s=E("strides",t,e,n),r=F(t,e,n),o=E("dataFormat",t,e,n).toUpperCase(),i=E("dilations",t,e,n);return[a.conv2d(E("x",t,e,n),E("filter",t,e,n),[s[1],s[2]],r,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:r,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:h}=Nt(t,e,n);return[a.fused.conv2d({x:E("x",t,e,n),filter:E("filter",t,e,n),strides:[s[1],s[2]],pad:r,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:r,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:h}=Nt(t,e,n);return[a.fused.depthwiseConv2d({x:E("x",t,e,n),filter:E("filter",t,e,n),strides:[s[1],s[2]],pad:r,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=E("outputShape",t,e,n),r=E("strides",t,e,n),o=F(t,e,n);return[a.conv2dTranspose(E("x",t,e,n),E("filter",t,e,n),s,[r[1],r[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=E("strides",t,e,n),r=F(t,e,n),o=E("dilations",t,e,n),i=E("dataFormat",t,e,n).toUpperCase();return[a.depthwiseConv2d(E("input",t,e,n),E("filter",t,e,n),[s[1],s[2]],r,i,[o[1],o[2]])]}case"Conv3D":{const s=E("strides",t,e,n),r=E("pad",t,e,n),o=E("dataFormat",t,e,n).toUpperCase(),i=E("dilations",t,e,n);return[a.conv3d(E("x",t,e,n),E("filter",t,e,n),[s[1],s[2],s[3]],r,o,[i[1],i[2],i[3]])]}case"AvgPool":{const s=E("strides",t,e,n),r=E("pad",t,e,n),o=E("kernelSize",t,e,n);return[a.avgPool(E("x",t,e,n),[o[1],o[2]],[s[1],s[2]],r)]}case"MaxPool":{const s=E("strides",t,e,n),r=E("pad",t,e,n),o=E("kernelSize",t,e,n);return[a.maxPool(E("x",t,e,n),[o[1],o[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{const s=E("strides",t,e,n),r=E("pad",t,e,n),o=E("kernelSize",t,e,n),i=E("includeBatchInIndex",t,e,n),{result:c,indexes:l}=a.maxPoolWithArgmax(E("x",t,e,n),[o[1],o[2]],[s[1],s[2]],r,i);return[c,l]}case"AvgPool3D":{const s=E("strides",t,e,n),r=E("pad",t,e,n),o=E("kernelSize",t,e,n);return[a.avgPool3d(E("x",t,e,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{const s=E("strides",t,e,n),r=E("pad",t,e,n),o=E("kernelSize",t,e,n);return[a.maxPool3d(E("x",t,e,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{const s=E("strides",t,e,n),r=E("pad",t,e,n),o=E("dilations",t,e,n),i=s[1],c=s[2],l=o[1],u=o[2];return[a.dilation2d(E("x",t,e,n),E("filter",t,e,n),[i,c],r,[l,u],"NHWC")]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"creation":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"Fill":{const s=E("shape",t,e,n),r=E("dtype",t,e,n),o=E("value",t,e,n);return[a.fill(s,o,r)]}case"LinSpace":{const s=E("start",t,e,n),r=E("stop",t,e,n),o=E("num",t,e,n);return[a.linspace(s,r,o)]}case"Multinomial":{const s=E("logits",t,e,n),r=E("numSamples",t,e,n),o=E("seed",t,e,n);return[a.multinomial(s,r,o)]}case"OneHot":{const s=E("indices",t,e,n),r=E("depth",t,e,n),o=E("onValue",t,e,n),i=E("offValue",t,e,n),c=E("dtype",t,e,n);return[a.oneHot(s,r,o,i,c)]}case"Ones":return[a.ones(E("shape",t,e,n),E("dtype",t,e,n))];case"OnesLike":return[a.onesLike(E("x",t,e,n))];case"RandomStandardNormal":return[a.randomStandardNormal(E("shape",t,e,n),E("dtype",t,e,n),E("seed",t,e,n))];case"RandomUniform":return[a.randomUniform(E("shape",t,e,n),E("minval",t,e,n),E("maxval",t,e,n),E("dtype",t,e,n))];case"RandomUniformInt":return[a.randomUniformInt(E("shape",t,e,n),E("minval",t,e,n),E("maxval",t,e,n),E("seed",t,e,n))];case"Range":{const s=E("start",t,e,n),r=E("stop",t,e,n),o=E("step",t,e,n);return[a.range(s,r,o,E("dtype",t,e,n))]}case"TruncatedNormal":{const s=E("shape",t,e,n),r=E("mean",t,e,n),o=E("stdDev",t,e,n),i=E("seed",t,e,n);return[a.truncatedNormal(s,r,o,E("dtype",t,e,n),i)]}case"Zeros":return[a.zeros(E("shape",t,e,n),E("dtype",t,e,n))];case"ZerosLike":return[a.zerosLike(E("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"dynamic":return async function(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:k;switch(t.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=Tt(t,e,n),u=await s.image.nonMaxSuppressionWithScoreAsync(a,r,o,i,c,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Tt(t,e,n),l=E("padToMaxOutputSize",t,e,n),u=await s.image.nonMaxSuppressionPaddedAsync(a,r,o,i,c,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Tt(t,e,n);return[await s.image.nonMaxSuppressionAsync(a,r,o,i,c)]}case"Where":{const a=s.cast(E("condition",t,e,n),"bool"),r=[await s.whereAsync(a)];return a.dispose(),r}case"ListDiff":return s.setdiff1dAsync(E("x",t,e,n),E("y",t,e,n));default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n);case"evaluation":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"LowerBound":{const s=E("sortedSequence",t,e,n),r=E("values",t,e,n);return[a.lowerBound(s,r)]}case"TopKV2":{const s=E("x",t,e,n),r=E("k",t,e,n),o=E("sorted",t,e,n),i=a.topk(s,r,o);return[i.values,i.indices]}case"UpperBound":{const s=E("sortedSequence",t,e,n),r=E("values",t,e,n);return[a.upperBound(s,r)]}case"Unique":{const s=E("x",t,e,n),r=a.unique(s);return[r.values,r.indices]}case"UniqueV2":{const s=E("x",t,e,n),r=E("axis",t,e,n),o=a.unique(s,r);return[o.values,o.indices]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"image":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"ResizeBilinear":{const s=E("images",t,e,n),r=E("size",t,e,n),o=E("alignCorners",t,e,n),i=E("halfPixelCenters",t,e,n);return[a.image.resizeBilinear(s,[r[0],r[1]],o,i)]}case"ResizeNearestNeighbor":{const s=E("images",t,e,n),r=E("size",t,e,n),o=E("alignCorners",t,e,n),i=E("halfPixelCenters",t,e,n);return[a.image.resizeNearestNeighbor(s,[r[0],r[1]],o,i)]}case"CropAndResize":{const s=E("image",t,e,n),r=E("boxes",t,e,n),o=E("boxInd",t,e,n),i=E("cropSize",t,e,n),c=E("method",t,e,n),l=E("extrapolationValue",t,e,n);return[a.image.cropAndResize(s,r,o,i,c,l)]}case"ImageProjectiveTransformV3":{const s=E("images",t,e,n),r=E("transforms",t,e,n),o=E("outputShape",t,e,n),i=E("fillValue",t,e,n),c=E("interpolation",t,e,n),l=E("fillMode",t,e,n);return[a.image.transform(s,r,c.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"graph":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const s=E("default",t,e,n);return[_(t.name,e,n)||s];case"Placeholder":return[_(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[M(E("x",t,e,n))];case"IdentityN":return E("x",t,e,n).map((t=>M(t)));case"Shape":return[a.tensor1d(E("x",t,e,n).shape,"int32")];case"ShapeN":return E("x",t,e,n).map((t=>a.tensor1d(t.shape)));case"Size":return[a.scalar(E("x",t,e,n).size,"int32")];case"Rank":return[a.scalar(E("x",t,e,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const r=E("x",t,e,n),o=E("data",t,e,n),i=E("message",t,e,n),c=E("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let t=0;t<o.length;t++)console.log(Array.prototype.slice.call(o[t].dataSync()).slice(0,c));return[r];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"logical":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"Equal":return[a.equal(E("a",t,e,n),E("b",t,e,n))];case"NotEqual":return[a.notEqual(E("a",t,e,n),E("b",t,e,n))];case"Greater":return[a.greater(E("a",t,e,n),E("b",t,e,n))];case"GreaterEqual":return[a.greaterEqual(E("a",t,e,n),E("b",t,e,n))];case"Less":return[a.less(E("a",t,e,n),E("b",t,e,n))];case"LessEqual":return[a.lessEqual(E("a",t,e,n),E("b",t,e,n))];case"LogicalAnd":return[a.logicalAnd(E("a",t,e,n),E("b",t,e,n))];case"LogicalNot":return[a.logicalNot(E("a",t,e,n))];case"LogicalOr":return[a.logicalOr(E("a",t,e,n),E("b",t,e,n))];case"Select":case"SelectV2":return[a.where(E("condition",t,e,n),E("a",t,e,n),E("b",t,e,n))];case"BitwiseAnd":return[a.bitwiseAnd(E("a",t,e,n),E("b",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"matrices":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(E("a",t,e,n),E("b",t,e,n),E("transposeA",t,e,n),E("transposeB",t,e,n))];case"Einsum":return[a.einsum(E("equation",t,e,n),...E("tensors",t,e,n))];case"Transpose":return[a.transpose(E("x",t,e,n),E("perm",t,e,n))];case"_FusedMatMul":const[s,r]=E("fusedOps",t,e,n),o="biasadd"===s,i="prelu"===r,c=E("numArgs",t,e,n),l=E("leakyreluAlpha",t,e,n);if(o){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,h]=E("args",t,e,n);return[a.fused.matMul({a:E("a",t,e,n),b:E("b",t,e,n),transposeA:E("transposeA",t,e,n),transposeB:E("transposeB",t,e,n),bias:u,activation:r,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[a.linalg.bandPart(E("a",t,e,n),E("numLower",t,e,n),E("numUpper",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"normalization":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"EuclideanNorm":return[a.euclideanNorm(E("x",t,e,n),E("axis",t,e,n),E("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(E("x",t,e,n),E("mean",t,e,n),E("variance",t,e,n),E("offset",t,e,n),E("scale",t,e,n),E("epsilon",t,e,n))];case"LRN":return[a.localResponseNormalization(E("x",t,e,n),E("radius",t,e,n),E("bias",t,e,n),E("alpha",t,e,n),E("beta",t,e,n))];case"Softmax":return[a.softmax(E("x",t,e,n))];case"LogSoftmax":return[a.logSoftmax(E("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"ragged":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:r}=a.raggedGather(E("paramsNestedSplits",t,e,n),E("paramsDenseValues",t,e,n),E("indices",t,e,n),E("outputRaggedRank",t,e,n));return s.concat(r)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:r}=a.raggedRange(E("starts",t,e,n),E("limits",t,e,n),E("splits",t,e,n));return[s,r]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(E("shape",t,e,n),E("values",t,e,n),E("defaultValue",t,e,n),E("rowPartitionTensors",t,e,n),E("rowPartitionTypes",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"reduction":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"Max":{const s=E("axis",t,e,n),r=E("keepDims",t,e,n);return[a.max(E("x",t,e,n),s,r)]}case"Mean":{const s=E("axis",t,e,n),r=E("keepDims",t,e,n);return[a.mean(E("x",t,e,n),s,r)]}case"Min":{const s=E("axis",t,e,n),r=E("keepDims",t,e,n);return[a.min(E("x",t,e,n),s,r)]}case"Sum":{const s=E("axis",t,e,n),r=E("keepDims",t,e,n);return[a.sum(E("x",t,e,n),s,r)]}case"All":{const s=E("axis",t,e,n),r=E("keepDims",t,e,n);return[a.all(E("x",t,e,n),s,r)]}case"Any":{const s=E("axis",t,e,n),r=E("keepDims",t,e,n);return[a.any(E("x",t,e,n),s,r)]}case"ArgMax":{const s=E("axis",t,e,n);return[a.argMax(E("x",t,e,n),s)]}case"ArgMin":{const s=E("axis",t,e,n);return[a.argMin(E("x",t,e,n),s)]}case"Prod":{const s=E("axis",t,e,n),r=E("keepDims",t,e,n);return[a.prod(E("x",t,e,n),s,r)]}case"Cumprod":{const s=E("axis",t,e,n),r=E("exclusive",t,e,n),o=E("reverse",t,e,n);return[a.cumprod(E("x",t,e,n),s,r,o)]}case"Cumsum":{const s=E("axis",t,e,n),r=E("exclusive",t,e,n),o=E("reverse",t,e,n);return[a.cumsum(E("x",t,e,n),s,r,o)]}case"Bincount":const s=E("x",t,e,n),r=E("weights",t,e,n),o=E("size",t,e,n);return[a.bincount(s,r,o)];case"DenseBincount":{const s=E("x",t,e,n),r=E("weights",t,e,n),o=E("size",t,e,n),i=E("binaryOutput",t,e,n);return[a.denseBincount(s,r,o,i)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"slice_join":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"ConcatV2":case"Concat":{const s=E("n",t,e,n),r=E("axis",t,e,n);let o=E("tensors",t,e,n);return o=o.slice(0,s),[a.concat(o,r)]}case"Gather":{const s=E("x",t,e,n),r=E("indices",t,e,n);return[a.gather(s,a.cast(r,"int32"),0)]}case"GatherV2":{const s=E("axis",t,e,n),r=E("batchDims",t,e,n),o=E("x",t,e,n),i=E("indices",t,e,n);return[a.gather(o,a.cast(i,"int32"),s,r)]}case"Reverse":{const s=E("dims",t,e,n),r=[];for(let t=0;t<s.length;t++)s[t]&&r.push(t);const o=E("x",t,e,n);return[a.reverse(o,r)]}case"ReverseV2":{const s=E("axis",t,e,n),r=E("x",t,e,n);return[a.reverse(r,s)]}case"Slice":{const s=E("begin",t,e,n),r=E("size",t,e,n);return[a.slice(E("x",t,e,n),s,r)]}case"StridedSlice":{const s=E("begin",t,e,n),r=E("end",t,e,n),o=E("strides",t,e,n),i=E("beginMask",t,e,n),c=E("endMask",t,e,n),l=E("ellipsisMask",t,e,n),u=E("newAxisMask",t,e,n),h=E("shrinkAxisMask",t,e,n),d=E("x",t,e,n);return[a.stridedSlice(d,s,r,o,i,c,l,u,h)]}case"Pack":return(0,I.lub)((()=>{const s=E("axis",t,e,n),r=E("tensors",t,e,n),o=r[0].shape,i=a.squeeze(r[0]).shape,c=r.map((t=>{const e=I.D5U.arraysEqual(t.shape,o);if(!e&&!I.D5U.arraysEqual(a.squeeze(t).shape,i))throw new Error("the input tensors shape does not match");return e?t:a.reshape(t,o)}));return[a.stack(c,s)]}));case"Unpack":{const s=E("axis",t,e,n),r=E("tensor",t,e,n);return a.unstack(r,s)}case"Tile":{const s=E("reps",t,e,n);return[a.tile(E("x",t,e,n),s)]}case"Split":case"SplitV":{const s=E("axis",t,e,n),r=E("numOrSizeSplits",t,e,n),o=E("x",t,e,n);return a.split(o,r,s)}case"ScatterNd":{const s=E("indices",t,e,n),r=E("values",t,e,n),o=E("shape",t,e,n);return[a.scatterND(s,r,o)]}case"GatherNd":{const s=E("x",t,e,n),r=E("indices",t,e,n);return[a.gatherND(s,r)]}case"SparseToDense":{const s=E("sparseIndices",t,e,n),r=E("outputShape",t,e,n),o=E("sparseValues",t,e,n),i=E("defaultValue",t,e,n);return[a.sparseToDense(s,o,r,o.dtype===i.dtype?i:a.cast(i,o.dtype))]}case"TensorScatterUpdate":{const s=E("indices",t,e,n),r=E("values",t,e,n),o=E("tensor",t,e,n);return[a.tensorScatterUpdate(o,s,r)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"sparse":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:r,emptyRowIndicator:o,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(E("indices",t,e,n),E("values",t,e,n),E("denseShape",t,e,n),E("defaultValue",t,e,n));return[s,r,o,i]}case"SparseReshape":{const{outputIndices:s,outputShape:r}=a.sparse.sparseReshape(E("inputIndices",t,e,n),E("inputShape",t,e,n),E("newShape",t,e,n));return[s,r]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(E("data",t,e,n),E("indices",t,e,n),E("segmentIds",t,e,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(E("data",t,e,n),E("indices",t,e,n),E("segmentIds",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"spectral":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"FFT":return[a.fft(E("x",t,e,n))];case"IFFT":return[a.ifft(E("x",t,e,n))];case"RFFT":return[a.rfft(E("x",t,e,n))];case"IRFFT":return[a.irfft(E("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"string":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(E("input",t,e,n),E("pattern",t,e,n),E("rewrite",t,e,n),E("replaceGlobal",t,e,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:r}=a.string.stringNGrams(E("data",t,e,n),E("dataSplits",t,e,n),E("separator",t,e,n),E("nGramWidths",t,e,n),E("leftPad",t,e,n),E("rightPad",t,e,n),E("padWidth",t,e,n),E("preserveShortSequences",t,e,n));return[s,r]}case"StringSplit":{const{indices:s,values:r,shape:o}=a.string.stringSplit(E("input",t,e,n),E("delimiter",t,e,n),E("skipEmpty",t,e,n));return[s,r,o]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(E("input",t,e,n),E("numBuckets",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"transformation":return s((()=>function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(t.op){case"Cast":return[a.cast(E("x",t,e,n),E("dtype",t,e,n))];case"ExpandDims":{const s=E("axis",t,e,n);return[a.expandDims(E("x",t,e,n),s)]}case"Squeeze":{const s=E("axis",t,e,n);return[a.squeeze(E("x",t,e,n),s)]}case"Reshape":return[a.reshape(E("x",t,e,n),E("shape",t,e,n))];case"EnsureShape":return[a.ensureShape(E("x",t,e,n),E("shape",t,e,n))];case"MirrorPad":return[a.mirrorPad(E("x",t,e,n),E("padding",t,e,n),E("mode",t,e,n))];case"PadV2":case"Pad":return[a.pad(E("x",t,e,n),E("padding",t,e,n),E("constantValue",t,e,n))];case"SpaceToBatchND":{const s=E("blockShape",t,e,n),r=E("paddings",t,e,n);return[a.spaceToBatchND(E("x",t,e,n),s,r)]}case"BatchToSpaceND":{const s=E("blockShape",t,e,n),r=E("crops",t,e,n);return[a.batchToSpaceND(E("x",t,e,n),s,r)]}case"DepthToSpace":{const s=E("blockSize",t,e,n),r=E("dataFormat",t,e,n).toUpperCase();return[a.depthToSpace(E("x",t,e,n),s,r)]}case"BroadcastTo":return[a.broadcastTo(E("x",t,e,n),E("shape",t,e,n))];case"BroadcastArgs":return[a.broadcastArgs(E("s0",t,e,n),E("s1",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,n)));case"hash_table":return(async(t,e,n,a)=>{switch(t.op){case"HashTable":case"HashTableV2":{const s=a.getHashTableHandleByName(t.name);if(null!=s)return[s];{const s=E("keyDType",t,e,n),r=E("valueDType",t,e,n),o=new Et(s,r);return a.addHashTable(t.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=E("tableHandle",t,e,n,a),r=E("keys",t,e,n),o=E("values",t,e,n),i=a.getHashTableById(s.id);return[await i.import(r,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=E("tableHandle",t,e,n,a),r=E("keys",t,e,n),o=E("defaultValue",t,e,n),i=a.getHashTableById(s.id);return[await i.find(r,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=E("tableHandle",t,e,n,a);return[a.getHashTableById(s.id).tensorSize()]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n,a);case"custom":const r=C(t.op);if(r&&r.customExecutor)return r.customExecutor(new gt(t,e,n));throw TypeError("Custom op ".concat(t.op," is not registered."));default:throw TypeError("Unknown op '".concat(t.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(t,e,n);return I.D5U.isPromise(r)?r.then((t=>[].concat(t))):[].concat(r)}class At{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0;this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":"".concat(t.frameName,"-").concat(t.iterationId))).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function Dt(t,e,n,a){const s=new Set,r=[];let o=null,i=null;const c=new Set,l=new Set(Object.keys(t).map((t=>O(t)[0])));a=a||[];const u=new Set(a.map((t=>O(t.name)[0]))),h=[...e];for(;h.length>0;){const t=h.pop();(Lt(t)||zt(t)||Ut(t))&&null==o&&(o=t,i=o.children.map((t=>t.name)).filter((t=>s.has(t)))),s.add(t.name),null==n[t.name]&&(l.has(t.name)||u.has(t.name)||(0!==t.inputs.length?t.inputs.forEach((t=>{c.has(t.name)||(c.add(t.name),h.push(t))})):r.push(t.name)))}return{inputs:t,outputs:e,usedNodes:s,missingInputs:r,dynamicNode:o,syncInputs:i}}function Rt(t,e){const{usedNodes:n,inputs:a}=e,s=Object.keys(a).map((t=>O(t)[0])).map((e=>t.nodes[e])),r=t.initNodes||[],o=t=>n.has("string"===typeof t?t:t.name);function i(t){return[...new Map(t.map((t=>[t.name,t]))).values()]}const c=i([...s,...t.weights,...r]).filter(o),l=i([...c,...Object.values(t.nodes)]).filter(o),u=new Map(l.map((t=>[t.name,t]))),h={};for(const m of l){h[m.name]=h[m.name]||0;for(const t of m.children)o(t)||(h[t.name]=Number.POSITIVE_INFINITY),h[t.name]=(h[t.name]||0)+1}const d=Object.entries(h).filter((t=>{let[,e]=t;return 0===e})).map((t=>{let[e]=t;return e})),p=[...d];for(;d.length>0;){const t=d.pop(),e=u.get(t);for(const n of e.children.filter(o))0===--h[n.name]&&(p.push(n.name),d.push(n.name))}const f=function(t,e){const n=new Map(t.map((t=>[t.name,t]))),a=e.map((t=>t.name)),s=new Set(a);for(;a.length>0;){const t=a.pop(),e=n.get(t);for(const r of e.children)n.has(r.name)&&!s.has(r.name)&&(s.add(r.name),a.push(r.name))}const r=t.filter((t=>s.has(t.name)));return r}(p.map((t=>u.get(t))),c);return function(t,e){const n=new Map(t.map(((t,e)=>[t.name,e]))),a=new Set(e.map((t=>t.name))),s=t=>a.has("string"===typeof t?t:t.name),r=new Set(t.map((t=>t.name))),o=t=>r.has("string"===typeof t?t:t.name);for(const i of t){for(const t of i.children.filter(o)){if(!n.has(t.name))throw new Ot("Child ".concat(t.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(t.name))throw new Ot("Node ".concat(i.name," is scheduled to run after its child ").concat(t.name,"."))}if(!s(i))for(const t of i.inputs){if(!n.has(t.name))throw new Ot("Input ".concat(t.name," of node ").concat(i.name," is unreachable."));if(n.get(t.name)>n.get(i.name))throw new Ot("Node ".concat(i.name," is scheduled to run before its input ").concat(t.name,"."))}}}(f,c),f}class Ot extends Error{constructor(t){super("NodesExecutionOrderError: ".concat(t))}}const Ft=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Mt=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Bt=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Lt(t){return Ft.has(t.op)}function zt(t){return Mt.has(t.op)}function Ut(t){return Bt.has(t.op)}class Pt{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?"".concat(e,":").concat(t.defaultOutput):e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new Pt(t.functions[e],this)}))}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),a=e.map((t=>t.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(t,e){const n=Dt(t,e,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:s,syncInputs:r}=n;if(null!=s)throw new Error("This execution contains the node '".concat(s.name,"', which has ")+"the dynamic op '".concat(s.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(r,"]"));if(a.length>0){const n=e.map((t=>t.name)),s=Object.keys(t);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(s,"]. Missing the following inputs: [").concat(a,"]"))}const o=Rt(this.graph,n),i=function(t){const e=new Map(t.map(((t,e)=>[t.name,e]))),n=Number.MAX_SAFE_INTEGER,a=t.map(((t,e)=>Lt(t)?n:e)),s=t=>{const n=a[e.get(t.name)];return null==n?-1:n},r=t.map(((t,e)=>t.children.map(s).reduce(((t,e)=>Math.max(t,e)),a[e]))),o=new Map;for(let i=0;i<t.length;++i){const e=r[i];if(e===n)continue;const a=t[i],s=t[e];o.has(s.name)||o.set(s.name,[]),o.get(s.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(t){if(null==t)return null;const e=t.clone();return(0,I.CnY)(e),e}cloneTensorList(t){if(!t)return null;return t.map((t=>this.cloneAndKeepTensor(t)))}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map((t=>{let[e,n]=t;return[e,this.cloneTensorList(n)]})))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const a=n.map((t=>this.graph.nodes[O(t)[0]])),s=e.map((t=>O(t)[0])),r=new Set(s);let o=s.map((t=>this.graph.nodes[t]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(a,o);let c=this.compiledMap.get(i);null==c&&(c=this.compile(t,o),this.compiledMap.set(i,c));try{this.keepIntermediateTensors=(0,I.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const l={},u={};return(0,I.lub)((()=>{const n=new At(this.weightMap,l,u,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach((e=>{const[s,r]=O(e,n),o=[];o[r]=t[e],a[s]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(o))}));const s=this.getFrozenTensorIds(a),{orderedNodes:o,nodeLiveUntilMap:i}=c;for(const t of o){if(a[t.name])continue;const e=_t(t,a,n,this._resourceManager);if(I.D5U.isPromise(e))throw new Error("The execution of the op '".concat(t.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[t.name]=e,this.keepIntermediateTensors&&(this.clonedTensorsMap[t.name]=this.cloneTensorList(e)),this.checkTensorForDisposalWithNodeLiveUntilInfo(t,a,n,s,r,i.get(t.name))}return null==this.parent&&n.dispose(s),e.map((t=>_(t,a,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,a,s,r,o){if(!Lt(e)&&!r.has(t)){for(const a of n[t])null!=a&&(o[a.id]=(o[a.id]||0)+e.children.length);for(const t of e.inputs){if(Lt(t))continue;const e=A(t.name,n,a);if(null!=e)for(const t of e){if(!t||t.kept||s.has(t.id))continue;const e=o[t.id];1===e?(t.dispose(),delete o[t.id]):null!=e&&o[t.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,n,a,s,r){function o(t){return Lt(t)||s.has(t.name)}if(!Lt(t)&&null!=r)for(const i of r){if(o(i))continue;const t=A(i.name,e,n);for(const e of t)!e||e.kept||a.has(e.id)||e.dispose()}}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((t=>{for(const e of t)e&&!e.isDisposed&&e.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=(0,I.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const r=new At(this.weightMap,a,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(t,r,e,n),i=e.map((t=>_(t,o,r))),c=i.map((t=>t.id)),l=Object.keys(t).map((e=>t[e].id)),u=new Set([...c,...l,...this.weightIds]);return Object.values(o).forEach((t=>{t.forEach((t=>{!t||t.isDisposed||u.has(t.id)||t.dispose()}))})),null==this.parent&&r.dispose(u),i}async executeFunctionAsync(t,e,n){const a=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(a,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,a){const s=Object.keys(t),r=s.map((t=>this.graph.nodes[O(t)[0]])),o=n.map((t=>O(t)[0])),i=new Set(o);let c=o.map((t=>this.graph.nodes[t]));0===c.length&&(c=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:h,syncInputs:d}=Dt(t,c,this.weightMap,this._initNodes),p=[...r,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,a]=O(e),s=[];s[a]=t[e],f[n]=s}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const t=this.processStack(r,p,e,f,y,g,i,m,l);await Promise.all(t)}null!=h||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=c.filter((t=>!Lt(t)&&!_(t.name,f,e))).map((t=>t.name));if(b.length>0){let t="";throw null!=h&&(t="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(d,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(s,"]. Consider providing the following inputs: ")+"[".concat(u,"]. ").concat(t))}return f}processStack(t,e,n,a,s,r,o,i,c){const l=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let u="";if("Enter"===t.node.op&&E("isConstant",t.node,a,n)&&([u]=D(t.node.name,n)),null==a[t.node.name]){const h=_t(t.node,a,n,this._resourceManager);u||([u]=D(t.node.name,n));const d=n.currentContext;I.D5U.isPromise(h)?l.push(h.then((l=>(a[u]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(l)),n.currentContext=d,this.checkTensorForDisposal(u,t.node,a,n,r,o,i),this.processChildNodes(t.node,e,n,a,s,c),l)))):(a[u]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(h)),this.checkTensorForDisposal(u,t.node,a,n,r,o,i),this.processChildNodes(t.node,e,n,a,s,c))}else this.processChildNodes(t.node,e,n,a,s,c)}return l}processChildNodes(t,e,n,a,s,r){t.children.forEach((t=>{const[o]=D(t.name,n);!s[o]&&r.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!_(t,a,n)))&&(s[o]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!_(t,a,n)))&&(s[o]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[a]=O(e),s=this.graph.nodes[a];if(s.attrParams.shape&&s.attrParams.shape.value){const t=s.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e));I.D5U.assert(e,(()=>"The shape of dict['".concat(s.name,"'] provided in ")+"model.execute(dict) must be [".concat(t,"], but was ")+"[".concat(n.shape,"]")))}s.attrParams.dtype&&s.attrParams.dtype.value&&I.D5U.assert(n.dtype===s.attrParams.dtype.value,(()=>"The dtype of dict['".concat(s.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(s.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(t){var e,n;const a={};for(const s in t){const r=null===(n=null===(e=this._signature)||void 0===e?void 0:e.inputs)||void 0===n?void 0:n[s];null!=r?a[r.name]=t[s]:a[s]=t[s]}return a}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=O(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(e,"] that are not part of graph"))}mapOutputs(t){return t.map((t=>{var e,n;const a=null===(n=null===(e=this._signature)||void 0===e?void 0:e.outputs)||void 0===n?void 0:n[t];return null!=a?a.name:t}),{})}checkOutputs(t){t.forEach((t=>{const[e]=O(t);if(!this.graph.nodes[e])throw new Error("The output '".concat(t,"' is not found in the graph"))}))}}class Vt{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}var Wt=n(1434);const Gt="?tfjs-format=file",Ht="model.json";class jt{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:I.io;this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=n,null==e&&(this.loadOptions={}),this.resourceManager=new Vt}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error("Found more than one (".concat(e.length,") load handlers for ")+"URL '".concat([t],"'"));this.handler=e[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return I.D5U.isPromise(t)?t.then((t=>null==t.getWeightStream?this.loadSync(t):this.loadStreaming(t))):this.loadSync(t)}loadSync(t){const e=this.io.decodeWeights(t.weightData,t.weightSpecs);return this.loadWithWeightMap(t,e)}async loadStreaming(t){if(null==t.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const e=await(0,Wt.r)(t.getWeightStream(),t.weightSpecs);return this.loadWithWeightMap(t,e)}loadWithWeightMap(t,e){this.artifacts=t;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const t=this.artifacts.userDefinedMetadata;null!=t.signature&&(a=t.signature),null!=t.structuredOutputKeys&&(this.structuredOutputKeys=t.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new Pt(et.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(e),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=et.Instance.transformGraph(t.modelInitializer);this.initializer=new Pt(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}async save(t,e){if("string"===typeof t){const e=this.io.getSaveHandlers(t);if(0===e.length)throw new Error("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new Error("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}addStructuredOutputNames(t){if(this.structuredOutputKeys){const e=t instanceof I.esB?[t]:t,n={};return e.forEach(((t,e)=>n[this.structuredOutputKeys[e]]=t)),n}return t}predict(t,e){const n=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(t,e){const n=await this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(t){var e;if(!(t instanceof I.esB)&&!Array.isArray(t)){const n=null===(e=this.signature)||void 0===e?void 0:e.inputs;if(null!=n)for(const e in n){const a=n[e];null!=a.resourceId&&(t[e]=this.resourceIdToCapturedInput[a.resourceId])}return t}t=Array.isArray(t)?t:[t];const n=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(t.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((e,n)=>{var s,r,o;const i=null===(o=null===(r=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===r?void 0:r[n])||void 0===o?void 0:o.resourceId;return e[n]=null!=i?this.resourceIdToCapturedInput[i]:t[a++],e}),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){const e=this.initializerSignature.outputs,n=Object.keys(e);for(let a=0;a<n.length;a++){const s=e[n[a]];this.resourceIdToCapturedInput[s.resourceId]=t[a]}}}execute(t,e){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,I.B90)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Xt(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:I.io;if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&"string"===typeof t&&(t=function(t){t.endsWith("/")||(t+="/");return"".concat(t).concat(Ht).concat(Gt)}(t));const a=new jt(t,e,n);return await a.load(),a}const qt="4.15.0"},4679:(t,e,n)=>{"use strict";n.d(e,{JL:()=>a,Zu:()=>s});class a{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class s{refCount(t){return r("refCount")}incRef(t){return r("incRef")}timerAvailable(){return!0}time(t){return r("time")}read(t){return r("read")}readSync(t){return r("readSync")}readToGPU(t,e){return r("readToGPU")}numDataIds(){return r("numDataIds")}disposeData(t,e){return r("disposeData")}write(t,e,n){return r("write")}move(t,e,n,a,s){return r("move")}createTensorFromGPUData(t,e,n){return r("createTensorFromGPUData")}memory(){return r("memory")}floatPrecision(){return r("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return r("dispose")}}function r(t){throw new Error("'".concat(t,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},745:(t,e,n)=>{"use strict";function a(t,e,n){const a=function(t,e,n){return function(t,e,n){let a=0,s=t.length,r=0,o=!1;for(;a<s;){r=a+(s-a>>>1);const i=n(e,t[r]);i>0?a=r+1:(s=r,o=!i)}return o?a:-a-1}(t,e,n||s)}(t,e,n),r=a<0?-(a+1):a;t.splice(r,0,e)}function s(t,e){return t>e?1:t<e?-1:0}function r(t,e,n,a,s){return c(t,e,n,a,s,0)}function o(t,e,n,a,s,r){return c(t,e,n,a,s,0,!1,r,!0)}function i(t,e,n,a,s,r){return c(t,e,n,a,s,r,!0)}function c(t,e,n,s,r,o){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],d=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const p=[];for(let a=0;a<e.length;a++)e[a]>r&&p.push({score:e[a],boxIndex:a,suppressBeginIndex:0});p.sort(h);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&p.length>0;){const e=p.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=e;if(n<r)break;let c=!1;for(let a=m.length-1;a>=i;--a){const n=l(t,o,m[a]);if(n>=s){c=!0;break}if(e.score=e.score*u(s,f,n),e.score<=r)break}e.suppressBeginIndex=m.length,c||(e.score===n?(m.push(o),g.push(e.score)):e.score>r&&a(p,e,h))}const y=m.length,b=n-y;c&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return i&&(x.selectedScores=g),d&&(x.validOutputs=y),x}function l(t,e,n){const a=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),r=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(s[0],s[2]),u=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-r)*(c-o),f=(h-l)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(r,l),g=Math.max(o,u),y=Math.min(i,h),b=Math.min(c,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function u(t,e,n){const a=Math.exp(e*n*n);return n<=t?a:0}function h(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}n.d(e,{GP:()=>r,qP:()=>o,pA:()=>i})},4189:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var a=n(7039);function s(t,e){const n=[];for(let a=0;a<e.length;a++)e[a]&&n.push(a);const s=(0,a.f)(t,"int32"),r=(0,a.f)([n.length,t.length],"int32");for(let a=0;a<n.length;a++){const e=s.indexToLoc(n[a]),o=a*t.length;r.values.set(e,o)}return r.toTensor()}},318:(t,e,n)=>{"use strict";n.d(e,{BV:()=>v,wv:()=>x});var a=n(4679),s=n(5050),r=n(6581),o=n(2145),i=n(8864),c=n(7269),l=n(115),u=n(6147);class h{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new p)}profileKernel(t,e,n){let a;const r=()=>{a=n()};let o;const i=l.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(r);else{r();for(const t of a)t.dataSync();o=Promise.resolve({kernelMs:l.now()-i})}if((0,s.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let s=0;s<a.length;s++){const e=a[s];e.data().then((n=>{d(n,e.dtype,t)}))}return{kernelName:t,outputs:a,inputs:e,timeMs:o.then((t=>t.kernelMs)),extraInfo:o.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:a,inputs:s,extraInfo:r}=t;n.forEach((t=>{Promise.all([t.data(),a,r]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function d(t,e,n){if("float32"!==e)return!1;for(let a=0;a<t.length;a++){const e=t[a];if(isNaN(e)||!isFinite(e))return console.warn("Found ".concat(e," in the result of '").concat(n,"'")),!0}return!1}class p{logKernelProfile(t,e,n,a,s,r){const o="number"===typeof a?u.oj("".concat(a,"ms"),9):a.error,i=u.oj(t,25),c=e.rank,l=e.size,h=u.oj(e.shape.toString(),14);let d="";for(const u in s){const t=s[u];if(null!=t){const n=t.shape||e.shape,a=n.length;d+="".concat(u,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(h,"\t%c").concat(l,"\t%c").concat(d,"\t%c").concat(r),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(4376),m=n(9064);function g(t){return null!=t.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class b{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error("The highest priority backend '".concat(t,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return t in this.registryFactory?(c.Z("".concat(t," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error("Backend name '".concat(t,"' not found in registry"));if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new h(this.backendInstance),!0}setupRegisteredKernels(){(0,i.tr)(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){(0,i.tr)(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error("Cannot initialize backend ".concat(t,", no registration found."));try{const n=e.factory();if(!n||n instanceof a.Zu||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,a=n.then((n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,c.Z("Initialization of backend ".concat(t," failed")),c.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return c.Z("Initialization of backend ".concat(t," failed")),c.Z(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error("".concat(t," backend not found in registry"));this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:a,asyncInit:s}=this.initializeBackend(n);if(s||a)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),a=n.backend,s=this.readSync(e),r=a.refCount(e);a.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,r),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,a=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=t}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(a){throw e(),a}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(t){const e=v.runKernel(o.iJz,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t},n={dtype:"float32"};return v.runKernel(o.RFZ,e,n)}})),[],{}),e}runKernel(t,e,n){null==this.backendName&&this.backend;if(!(null!=(0,i.pI)(t,this.backendName)))throw new Error("Kernel '".concat(t,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const a=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const r=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-e-s-r;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(t,"'"))}runKernelFunc(t){let e,n=[];const a=this.isTapeOn(),s=this.state.numBytes,r=this.state.numTensors;let o,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(t)){const{kernelName:e,inputs:s,attrs:r}=t;null==this.backendName&&this.backend;const l=(0,i.pI)(e,this.backendName);u.hu(null!=l,(()=>"Cannot find registered kernel '".concat(e,"' for backend '").concat(this.backendName,"'"))),o=()=>{const t=this.backend.numDataIds();c=l.kernelFunc({inputs:s,attrs:r,backend:this.backend});const o=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,o);const i=o.map((t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t)));if(a){const t=this.getTensorsForGradient(e,s,i);n=this.saveTensorsForBackwardMode(t)}return i}}else{const{forwardFunc:e}=t,s=t=>{a&&(n=t.map((t=>this.keep(this.clone(t)))))};o=()=>{const t=this.backend.numDataIds();c=this.tidy((()=>e(this.backend,s)));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:h,attrs:d}=t,p=g(t)?null:t.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,h,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs):e=o()})),a&&this.addTapeNode(l,h,e,p,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-r,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((t=>null!=h[t]?h[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?e:e[0]}saveTensorsForBackwardMode(t){const e=t.map((t=>this.keep(this.clone(t))));return e}getTensorsForGradient(t,e,n){const a=(0,i.uk)(t);if(null!=a){const t=a.inputsToSave||[],s=a.outputsToSave||[];let r;a.saveAllInputs?(u.hu(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),r=Object.keys(e).map((t=>e[t]))):r=t.map((t=>e[t]));const o=n.filter(((t,e)=>s[e]));return r.concat(o)}return[]}makeTensor(t,e,n,a){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let s=t;"string"===n&&u.HD(t[0])&&(s=t.map((t=>l.encodeString(t))));const r=a.write(s,e,n),o=new f.es(e,n,r,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const t=this.state.tensorInfo.get(r),e=(0,u.Ub)(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,a){const s={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,a)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:a,dtype:s}=t,r=new f.es(a,s,n,this.nextTensorId());return this.trackTensor(r,e),r}makeVariable(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==t.dtype&&(t=t.cast(a));const s=new f._w(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error("Variable with name ".concat(s.name," was already registered"));return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*u.bT(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof f._w||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*u.bT(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,a,s,r){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},c=(0,i.uk)(t);null!=c&&(a=c.gradFunc),null!=a&&(o.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],a=u.wT(t.size,t.dtype);return this.makeTensor(a,t.shape,t.dtype)}return t})),a(t.length>1?t:t[0],s,r))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=(0,m.getTensorsInContainer)(t),n=new Set(e.map((t=>t.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const t=this.state.activeScope.track[s];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==a.id||this.track(t)}))}gradients(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(u.hu(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));u.hu(s instanceof f.es,(()=>"The result y returned by f() must be a tensor."));const r=function(t,e,n){const a={},s={};for(let c=0;c<e.length;c++)a[e[c].id]=!0;for(let c=0;c<t.length;c++){const n=t[c],r=n.inputs;for(const t in r){const o=r[t];let i=!1;for(let t=0;t<e.length;t++)if(a[o.id]){n.outputs.forEach((t=>a[t.id]=!0)),i=!0,s[n.id]=!0;break}if(i)break}}const r={};r[n.id]=!0;const o={};for(let c=t.length-1;c>=0;c--){const e=t[c],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(r[e.outputs[t].id]){for(const t in n)r[n[t].id]=!0,o[e.id]=!0;break}}const i=[];for(let c=0;c<t.length;c++){const e=t[c];if(s[e.id]&&o[e.id]){const t={};for(const s in e.inputs){const n=e.inputs[s];a[n.id]&&(t[s]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,i.push(n)}}return i}(this.state.activeTape,e,s);if(!a&&0===r.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=(0,u.p8)((0,u.NA)(t),"float32");return v.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,a){for(let s=e.length-1;s>=0;s--){const r=e[s],o=[];if(r.outputs.forEach((e=>{const n=t[e.id];null!=n?o.push(n):o.push(null)})),null==r.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(r.kernelName,"."));const i=r.gradient(o);for(const e in r.inputs){if(!(e in i))throw new Error("Cannot backprop through input ".concat(e,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const s=n((()=>i[e]()));if("float32"!==s.dtype)throw new Error("Error in gradient for op ".concat(r.kernelName,". The gradient of input ")+"".concat(e," must have 'float32' dtype, but has '").concat(s.dtype,"'"));const o=r.inputs[e];if(!u.cO(s.shape,o.shape))throw new Error("Error in gradient for op ".concat(r.kernelName,". The gradient of input ")+"'".concat(e,"' has shape '").concat(s.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==t[o.id])t[o.id]=s;else{const e=t[o.id];t[o.id]=a(e,s),e.dispose()}}}}(t,r,(t=>this.tidy(t)),w);const a=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:a}}))}customGrad(t){var e=this;return u.hu(u.mf(t),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),s=0;s<n;s++)a[s]=arguments[s];let r;u.hu(a.every((t=>t instanceof f.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((t,e)=>{o[e]=t}));return e.runKernelFunc({forwardFunc:(e,n)=>(r=t(...a,n),u.hu(r.value instanceof f.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.hu(u.mf(r.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),r.value),backwardsFunc:(t,e)=>{const n=r.gradFunc(t,e),s=Array.isArray(n)?n:[n];u.hu(s.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.hu(s.every((t=>t instanceof f.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((t,e)=>{o[e]=()=>t})),o},inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=(0,l.now)(),n=await this.backend.time(t);return n.wallMs=(0,l.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const t=(0,r.D)();if(null==t._tfengine){const e=new s.qA(t);t._tfengine=new b(e)}return(0,s.iG)(t._tfengine.ENV),(0,f.Vi)((()=>t._tfengine)),t._tfengine}b.nextTensorId=0,b.nextVariableId=0;const v=x();function w(t,e){const n={a:t,b:e};return v.runKernel(o.mm_,n)}},5050:(t,e,n)=>{"use strict";n.d(e,{OB:()=>i,iG:()=>l,qA:()=>r});var a=n(6147);const s="tfjsflags";class r{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(t,"."))),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Setting feature override from URL ".concat(t,": ").concat(e,".")),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if((0,a.tI)(e))throw new Error("Flag ".concat(t," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error("Cannot set flag ".concat(t," as it has not been registered."));this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error("Cannot evaluate flag '".concat(t,"': no evaluation function found."));return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);if(s in t){t[s].split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){const n=e.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:e}(0,n)}))}}}function o(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(t){for(var n=arguments.length,a=new Array(n>1?n-1:0),s=1;s<n;s++)a[s-1]=arguments[s];return function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,a[0],a[1]),a.join("=")})),e}function i(){return c}let c=null;function l(t){c=t}},6581:(t,e,n)=>{"use strict";let a;function s(){if(null==a){let t;if("undefined"!==typeof window)t=window;else if("undefined"!==typeof n.g)t=n.g;else if("undefined"!==typeof process)t=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function r(t,e){const n=function(){const t=s();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const a=e();return n.set(t,a),n.get(t)}}n.d(e,{D:()=>s,R:()=>r})},5875:(t,e,n)=>{"use strict";n.d(e,{B9:()=>u,Cn:()=>h,N_:()=>d,SR:()=>i,jq:()=>p,lu:()=>l,sq:()=>c,y3:()=>f});var a=n(318),s=n(5050),r=n(4376),o=n(9064);function i(){return a.BV}function c(){return a.BV.memory()}function l(t,e){return a.BV.tidy(t,e)}function u(t){(0,o.getTensorsInContainer)(t).forEach((t=>t.dispose()))}function h(t){return a.BV.keep(t)}function d(){return a.BV.backendName}function p(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return a.BV.registerBackend(t,e,n)}function f(){return a.BV.backend}(0,r.FZ)((function(t){(0,s.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},6450:(t,e,n)=>{"use strict";n.d(e,{cb:()=>i,pn:()=>o});var a=n(318),s=n(4376),r=n(6147);function o(t,e){r.hu(r.mf(t),(()=>"The f passed in variableGrads(f) must be a function")),r.hu(null==e||Array.isArray(e)&&e.every((t=>t instanceof s._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in a.BV.registeredVariables)e.push(a.BV.registeredVariables[t])}const o=n?e.filter((t=>!t.trainable)):null,i=e.length;e=e.filter((t=>t.trainable)),r.hu(e.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable."));const{value:c,grads:l}=a.BV.gradients(t,e,null,!0);r.hu(l.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),r.hu(0===c.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor")));const u={};return e.forEach(((t,e)=>{null!=l[e]&&(u[t.name]=l[e])})),null!=o&&o.forEach((t=>u[t.name]=null)),{value:c,grads:u}}function i(t){return a.BV.customGrad(t)}},8149:(t,e,n)=>{"use strict";n.d(e,{SYM:()=>ce.SYM,VGw:()=>ce.VGw,SpW:()=>ce.SpW,mm_:()=>ce.mm_,Xze:()=>ce.Xze,oT6:()=>ce.oT6,IKK:()=>ce.IKK,sJF:()=>ce.sJF,aJk:()=>ce.aJk,M2y:()=>ce.M2y,qw7:()=>ce.qw7,jMg:()=>ce.jMg,QCc:()=>ce.QCc,Oyi:()=>ce.Oyi,JhU:()=>ce.JhU,_k9:()=>ce._k9,IMb:()=>ce.IMb,ROF:()=>ce.ROF,XLW:()=>ce.XLW,zws:()=>ce.zws,zvY:()=>ce.zvY,hCO:()=>ce.hCO,eEB:()=>ce.eEB,RFZ:()=>ce.RFZ,gJX:()=>ce.gJX,xnO:()=>ce.xnO,Zz9:()=>ce.Zz9,yj2:()=>ce.yj2,Eh3:()=>ce.Eh3,mhS:()=>ce.mhS,wUP:()=>ce.wUP,wm:()=>ce.wm,x12:()=>ce.x12,o2y:()=>ce.o2y,ik2:()=>ce.ik2,mc4:()=>ce.mc4,TR1:()=>ce.TR1,VcC:()=>ce.VcC,Byc:()=>ce.Byc,iHb:()=>ce.iHb,JLz:()=>Hn.JL,QRR:()=>ce.QRR,T0n:()=>ce.T0n,cie:()=>ce.cie,sL$:()=>ce.sL$,y7R:()=>ce.y7R,$w:()=>ce.$w,p4S:()=>ce.p4S,Vn9:()=>ce.Vn9,ekb:()=>ce.ekb,hGc:()=>ce.hGc,$g6:()=>ce.$g6,SX0:()=>ce.SX0,HEU:()=>ce.HEU,hdR:()=>ce.hdR,Omj:()=>ce.Omj,NEP:()=>ce.NEP,YFo:()=>ce.YFo,Y0y:()=>ce.Y0y,vwp:()=>ce.vwp,deh:()=>ce.deh,Uyb:()=>ce.Uyb,OR:()=>ce.OR,jeX:()=>ce.jeX,eBW:()=>ce.eBW,sHE:()=>ce.sHE,_V0:()=>ce._V0,luS:()=>ce.luS,q1x:()=>ce.q1x,qi_:()=>ce.qi_,iZT:()=>ce.iZT,Acj:()=>ce.Acj,Qg5:()=>ce.Qg5,iJz:()=>ce.iJz,J_u:()=>ce.J_u,avt:()=>ce.avt,iWB:()=>ce.iWB,r7n:()=>ce.r7n,Zuw:()=>Hn.Zu,eZ0:()=>ce.eZ0,Hhh:()=>ce.Hhh,J$2:()=>ce.J$2,vtC:()=>ce.vtC,CAk:()=>ce.CAk,e7N:()=>ce.e7N,ZbH:()=>ce.ZbH,kU:()=>ce.kU,PYm:()=>ce.PYm,VfG:()=>ce.VfG,MZg:()=>ce.MZg,YoZ:()=>ce.YoZ,mTV:()=>ce.mTV,OAf:()=>ce.OAf,OU7:()=>ce.OU7,OV7:()=>ce.OV7,vFR:()=>ce.vFR,BMI:()=>ce.BMI,q2K:()=>ce.q2K,c17:()=>ce.c17,q8u:()=>ce.q8u,jQs:()=>ce.jQs,Vbg:()=>ce.Vbg,NZg:()=>ce.NZg,wYn:()=>ce.wYn,kuV:()=>ce.kuV,uv1:()=>ce.uv1,cye:()=>ce.cye,W0H:()=>ce.W0H,yQU:()=>ce.yQU,we_:()=>ce.we_,qWM:()=>ce.qWM,gaJ:()=>Tt,QiL:()=>ce.QiL,lyA:()=>ce.lyA,pe_:()=>ce.pe_,o0g:()=>ce.o0g,DlI:()=>ce.DlI,dDz:()=>ce.dDz,CQl:()=>ce.CQl,BiW:()=>ce.BiW,e6w:()=>ce.e6w,xJR:()=>ce.xJR,oHH:()=>ce.oHH,$HU:()=>ce.$HU,qkr:()=>ce.qkr,SbG:()=>ce.SbG,HZH:()=>ce.HZH,_Yw:()=>ce._Yw,zbQ:()=>ce.zbQ,dpD:()=>ce.dpD,Hmb:()=>ce.Hmb,mKl:()=>ce.mKl,b9H:()=>ce.b9H,e07:()=>ce.e07,bV0:()=>ce.bV0,xQA:()=>ce.xQA,nr8:()=>ce.nr8,PhF:()=>ce.PhF,oFR:()=>ce.oFR,a5O:()=>ce.a5O,i5y:()=>ce.i5y,RQH:()=>ce.RQH,wYB:()=>ce.wYB,p2w:()=>ce.p2w,Gcp:()=>ce.Gcp,MRv:()=>ce.MRv,TQc:()=>ce.TQc,O3z:()=>ce.O3z,nhH:()=>ce.nhH,w3H:()=>ce.w3H,ZjV:()=>ce.ZjV,D2d:()=>ce.D2d,L8s:()=>ce.L8s,FKq:()=>ce.FKq,bK0:()=>ce.bK0,_tC:()=>ce._tC,e0R:()=>ce.e0R,h8e:()=>ce.h8e,jQk:()=>ce.jQk,_JP:()=>ce._JP,s1s:()=>ce.s1s,XkS:()=>ce.XkS,Tr8:()=>ce.Tr8,GBy:()=>ce.GBy,sEM:()=>ce.sEM,MIZ:()=>ce.MIZ,esB:()=>lt.es,YDk:()=>lt.YD,SIB:()=>ce.SIB,n9L:()=>ce.n9L,cWu:()=>ce.cWu,wx7:()=>ce.wx7,G3Y:()=>ce.G3Y,kpP:()=>ce.kpP,ToN:()=>ce.ToN,Qvg:()=>ce.Qvg,RuY:()=>ce.RuY,usg:()=>ce.usg,WnP:()=>Ce.WnP,IHx:()=>Ce.IHx,$6P:()=>Ce.$6P,YjB:()=>Ce.YjB,NqF:()=>Ce.NqF,wS1:()=>Ce.wS1,uR5:()=>Ce.uR5,y3$:()=>ht.y3,backend_util:()=>c,Dxk:()=>Ce.Dxk,JY5:()=>Ce.JY5,p3b:()=>Ce.p3b,UFq:()=>Ce.UFq,Jyw:()=>ie,Xhn:()=>o,f3b:()=>Ce.f3b,pju:()=>Ce.pju,iUl:()=>Ce.iUl,d9v:()=>Ce.d9v,zoF:()=>Ce.zoF,gME:()=>Ce.gME,Izb:()=>Ce.Izb,MNy:()=>Ce.MNy,ZaL:()=>Ce.ZaL,PAt:()=>Ce.PAt,Tek:()=>Ce.Tek,bc:()=>Ce.bc,pdZ:()=>Ce.pdZ,$QV:()=>Ce.$QV,ppE:()=>Ce.ppE,B10:()=>Ce.B10,C2$:()=>a,B90:()=>ht.B9,hiC:()=>Ce.hiC,rvX:()=>Ce.rvX,pyx:()=>Ce.pyx,SRH:()=>ht.SR,OBj:()=>m.OB,DgJ:()=>Ce.DgJ,Qqt:()=>Ce.Qqt,dt4:()=>Ce.dt4,iyy:()=>Ce.iyy,hlL:()=>Ce.hlL,GWj:()=>Ce.GWj,imm:()=>Ce.imm,Iqj:()=>Ce.Iqj,N_N:()=>ht.N_,pjt:()=>Ce.pjt,brS:()=>Ce.brS,image:()=>Ce.BHj,io:()=>r,CnY:()=>ht.Cn,GDt:()=>l,hi7:()=>Ce.hi7,$r2:()=>Ce.$r2,cM7:()=>Ce.cM7,Krr:()=>Ce.Krr,CmS:()=>Ce.CmS,l_t:()=>Ce.l_t,HvI:()=>Ce.HvI,OI3:()=>Ce.OI3,Fp7:()=>Ce.Fp7,_sB:()=>Ce._sB,YQQ:()=>Ce.YQQ,gWQ:()=>Ce.gWQ,J69:()=>Ce.J69,sq6:()=>ht.sq,VV$:()=>Ce.VV$,LTh:()=>Ce.LTh,Gi7:()=>Ce.Gi7,dC7:()=>Ce.dC7,W76:()=>Ce.W76,glt:()=>Ae,Quu:()=>Ce.Quu,lfX:()=>Ce.lfX,iUs:()=>Ce.iUs,JpU:()=>Ce.JpU,vku:()=>Ce.vku,AL3:()=>Ce.AL3,nGf:()=>Ce.nGf,LGj:()=>Ce.LGj,w6H:()=>Ce.w6H,jqO:()=>ht.jq,wCN:()=>le.wC,UYe:()=>Ce.UYe,XLQ:()=>Ce.XLQ,GYS:()=>Ce.GYS,iD$:()=>Ce.iD$,U8D:()=>Ce.U8D,U_I:()=>Ce.U_I,m7h:()=>s,XD2:()=>Ce.XD2,tPi:()=>Ce.tPi,jZU:()=>Ce.jZU,SmN:()=>Ce.SmN,CnO:()=>Ce.CnO,p0P:()=>Ce.p0P,kuN:()=>ke,XAC:()=>Ce.XAC,Wvh:()=>Ce.Wvh,Vl2:()=>Ce.Vl2,_b3:()=>Ce._b3,L9e:()=>Ce.L9e,knu:()=>Ce.knu,luU:()=>Ce.luU,Smz:()=>Ce.Smz,z4k:()=>Te.z4,AEp:()=>Ce.AEp,XeE:()=>Ce.XeE,RRF:()=>Ce.RRF,odF:()=>Ce.odF,piX:()=>Ie,lub:()=>ht.lu,Gg6:()=>Ce.Gg6,p_j:()=>Ee,p4s:()=>Ce.p4s,Xu6:()=>Ce.Xu6,HHK:()=>Ce.HHK,x8V:()=>Te.x8,D5U:()=>Se,VD$:()=>Ce.VD$,jTM:()=>Ne,arb:()=>Ce.arb,lls:()=>Ce.lls,P84:()=>Ce.P84});var a={};n.r(a),n.d(a,{isBrowser:()=>f,isMobile:()=>p,mockIsMobile:()=>d});var s={};n.r(s),n.d(s,{Serializable:()=>kt,SerializationMap:()=>It,getRegisteredName:()=>Nt,registerClass:()=>St});var r={};n.r(r),n.d(r,{CompositeArrayBuffer:()=>I.w,browserFiles:()=>Gt,browserHTTPRequest:()=>$t,concatenateArrayBuffers:()=>y.JY,copyModel:()=>J,decodeWeights:()=>y.dI,decodeWeightsStream:()=>y.r,encodeWeights:()=>y.yz,fromMemory:()=>ae,fromMemorySync:()=>se,getLoadHandlers:()=>k,getModelArtifactsForJSON:()=>y.jN,getModelArtifactsForJSONSync:()=>y.ji,getModelArtifactsInfoForJSON:()=>y.Q,getSaveHandlers:()=>w,getWeightSpecs:()=>y.hu,http:()=>Jt,isHTTPScheme:()=>Yt,listModels:()=>Y,loadWeights:()=>qt,moveModel:()=>$,registerLoadRouter:()=>v,registerSaveRouter:()=>x,removeModel:()=>Q,weightsLoaderFactory:()=>Kt,withSaveHandler:()=>re,withSaveHandlerSync:()=>oe});var o={};n.r(o),n.d(o,{draw:()=>ve,fromPixels:()=>we,fromPixelsAsync:()=>ye,toPixels:()=>xe});var i={};n.r(i),n.d(i,{collectGatherOpShapeInfo:()=>Un,computeOutShape:()=>zn,segOpComputeOptimalWindowSize:()=>Ln});var c={};n.r(c),n.d(c,{ERF_A1:()=>$e,ERF_A2:()=>tn,ERF_A3:()=>en,ERF_A4:()=>nn,ERF_A5:()=>an,ERF_P:()=>Je,PARALLELIZE_THRESHOLD:()=>Ve,RowPartitionType:()=>Fe,SELU_SCALE:()=>Qe.$,SELU_SCALEALPHA:()=>Qe.y,applyActivation:()=>Be.QH,assertAndGetBroadcastShape:()=>ie.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>De.lB,assertParamsConsistent:()=>Re,assignToTypedArray:()=>hn,axesAreInnerMostDims:()=>De.YB,calculateShapes:()=>Ye.SU,checkEinsumDimSizes:()=>vn,checkPadOnDimRoundingMode:()=>Me.m,combineLocations:()=>De.Vh,combineRaggedTensorToTensorShapes:()=>Le,complexWithEvenIndex:()=>cn,complexWithOddIndex:()=>ln,computeConv2DInfo:()=>Me.Ix,computeConv3DInfo:()=>Me.jw,computeDefaultPad:()=>Me.aO,computeDilation2DInfo:()=>Me.Rf,computeOptimalWindowSize:()=>We,computeOutAndReduceShapes:()=>De.kz,computeOutShape:()=>Oe,computePool2DInfo:()=>Me.Xw,computePool3DInfo:()=>Me.pl,convertConv2DDataFormat:()=>Me.sl,decodeEinsumEquation:()=>bn,eitherStridesOrDilationsAreOne:()=>Me.jT,expandShapeToKeepDim:()=>De.rv,exponent:()=>pn,exponents:()=>dn,fromStringArrayToUint8:()=>Vn,fromUint8ToStringArray:()=>Pn,getAxesPermutation:()=>De.Q3,getBroadcastDims:()=>ie.getBroadcastDims,getComplexWithIndex:()=>un,getEinsumComputePath:()=>wn,getEinsumPermutation:()=>xn,getFusedBiasGradient:()=>Be.pf,getFusedDyActivation:()=>Be.Fr,getImageCenter:()=>Ge,getInnerMostAxes:()=>De.sY,getPermuted:()=>je,getRaggedRank:()=>Ue,getReductionAxes:()=>ie.getReductionAxes,getReshaped:()=>He,getReshapedPermuted:()=>Xe,getRowPartitionTypesHelper:()=>ze,getSliceBeginCoords:()=>qe,getSliceSize:()=>Ke,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Nn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Tn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Cn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>An,getSparseReshapeInputOutputMismatchErrorMessage:()=>Rn,getSparseReshapeInputOutputMultipleErrorMessage:()=>Dn,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>En,getSparseReshapeNegativeOutputDimErrorMessage:()=>_n,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Bn,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>On,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Fn,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Mn,getUndoAxesPermutation:()=>De.LJ,isIdentityPermutation:()=>kn,log:()=>sn.c,mergeRealAndImagArrays:()=>rn,prepareAndValidate:()=>Ze,prepareSplitSize:()=>Sn,segment_util:()=>i,shouldFuse:()=>Be.uy,slice_util:()=>ke,splitRealAndImagArrays:()=>on,stridesOrDilationsArePositive:()=>Me.U3,tupleValuesAreOne:()=>Me.I0,upcastType:()=>Te.x8,validateDefaultValueShape:()=>Pe,validateInput:()=>Ye.b0,validateUpdateShape:()=>Ye.l5,warn:()=>sn.Z});var l={};n.r(l),n.d(l,{GP:()=>Wn.GP,qP:()=>Wn.qP,pA:()=>Wn.pA,ZA:()=>Gn.Z});var u=n(318);let h;function d(t){h=t}function p(t){if(void 0!==h)return h;if(t||"undefined"!==typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!==typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function f(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var m=n(5050);const g=(0,m.OB)();g.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),g.registerFlag("IS_BROWSER",(()=>f())),g.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),g.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),g.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),g.registerFlag("PROD",(()=>!1)),g.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>g.getBool("DEBUG"))),g.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),g.registerFlag("IS_TEST",(()=>!1)),g.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>g.getBool("DEBUG"))),g.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),g.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),g.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var y=n(1434);class b{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==b.instance&&(b.instance=new b),b.instance}static registerSaveRouter(t){b.getInstance().saveRouters.push(t)}static registerLoadRouter(t){b.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return b.getHandlers(t,"save")}static getLoadHandlers(t,e){return b.getHandlers(t,"load",e)}static getHandlers(t,e,n){const a=[];return("load"===e?b.getInstance().loadRouters:b.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&a.push(s)})),a}}const x=t=>b.registerSaveRouter(t),v=t=>b.registerLoadRouter(t),w=t=>b.getSaveHandlers(t),k=(t,e)=>b.getLoadHandlers(t,e);var I=n(5714);const S="tensorflowjs",N="models_store",T="model_info_store";function C(){if(!(0,m.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function E(t){const e=t.result;e.createObjectStore(N,{keyPath:"modelPath"}),e.createObjectStore(T,{keyPath:"modelPath"})}class _{constructor(t){if(this.indexedDB=C(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const a=this.indexedDB.open(S,1);a.onupgradeneeded=()=>E(a),a.onsuccess=()=>{const s=a.result;if(null==e){const e=s.transaction(N,"readonly"),a=e.objectStore(N).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));t(a.result.modelArtifacts)},a.onerror=t=>(s.close(),n(a.error)),e.oncomplete=()=>s.close()}else{e.weightData=I.w.join(e.weightData);const a=(0,y.Q)(e),o=s.transaction(T,"readwrite");let i,c,l=o.objectStore(T);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(r){return n(r)}i.onsuccess=()=>{c=s.transaction(N,"readwrite");const i=c.objectStore(N);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a})}catch(r){return n(r)}u.onsuccess=()=>t({modelArtifactsInfo:a}),u.onerror=t=>{l=o.objectStore(T);const e=l.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(u.error)),e.onerror=t=>(s.close(),n(u.error))}},i.onerror=t=>(s.close(),n(i.error)),o.oncomplete=()=>{null==c?s.close():c.oncomplete=()=>s.close()}}},a.onerror=t=>n(a.error)}))}}_.URL_SCHEME="indexeddb://";const A=t=>{return(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(_.URL_SCHEME)?(e=t.slice(_.URL_SCHEME.length),new _(e)):null;var e};b.registerSaveRouter(A),b.registerLoadRouter(A);class D{constructor(){this.indexedDB=C()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(S,1);n.onupgradeneeded=()=>E(n),n.onsuccess=()=>{const a=n.result,s=a.transaction(T,"readonly"),r=s.objectStore(T).getAll();r.onsuccess=()=>{const e={};for(const t of r.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},r.onerror=t=>(a.close(),e(r.error)),s.oncomplete=()=>a.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(_.URL_SCHEME)?e.slice(_.URL_SCHEME.length):e,new Promise(((e,n)=>{const a=this.indexedDB.open(S,1);a.onupgradeneeded=()=>E(a),a.onsuccess=()=>{const s=a.result,r=s.transaction(T,"readwrite"),o=r.objectStore(T),i=o.get(t);let c;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error("Cannot find model with path '".concat(t,"' ")+"in IndexedDB."));{const a=o.delete(t),r=()=>{c=s.transaction(N,"readwrite");const a=c.objectStore(N).delete(t);a.onsuccess=()=>e(i.result.modelArtifactsInfo),a.onerror=t=>n(i.error)};a.onsuccess=r,a.onerror=t=>(r(),s.close(),n(i.error))}},i.onerror=t=>(s.close(),n(i.error)),r.oncomplete=()=>{null==c?s.close():c.oncomplete=()=>s.close()}},a.onerror=t=>n(a.error)}))}}var R=n(6147);const O="/",F="tensorflowjs_models",M="info",B="model_topology",L="weight_specs",z="weight_data",U="model_metadata";function P(t){return{info:[F,t,M].join(O),topology:[F,t,B].join(O),weightSpecs:[F,t,L].join(O),weightData:[F,t,z].join(O),modelMetadata:[F,t,U].join(O)}}function V(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function W(t){const e=t.split(O);if(e.length<3)throw new Error("Invalid key format: ".concat(t));return e.slice(1,e.length-1).join(O)}class G{constructor(t){if(!(0,m.OB)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=P(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),a=JSON.stringify(t.weightSpecs),s=(0,y.Q)(t),r=I.w.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,(0,y._n)(r));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,initializerSignature:null!=t.initializerSignature?t.initializerSignature:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:s}}catch(e){throw V(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(s.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(s.weightSpecsBytes,", ")+"weightDataBytes=".concat(s.weightDataBytes,"."))}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");e.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");e.weightSpecs=a;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(e.initializerSignature=t.initializerSignature),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const r=this.LS.getItem(this.keys.weightData);if(null==r)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return e.weightData=(0,y.n7)(r),e}}G.URL_SCHEME="localstorage://";const H=t=>{return(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(G.URL_SCHEME)?(e=t.slice(G.URL_SCHEME.length),new G(e)):null;var e};b.registerSaveRouter(H),b.registerLoadRouter(H);class j{constructor(){(0,R.hu)((0,m.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,R.hu)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=F+O,n=O+M;for(let a=0;a<this.LS.length;++a){const s=this.LS.key(a);if(s.startsWith(e)&&s.endsWith(n)){t[W(s)]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){var e;const n=P(t=(e=t).startsWith(G.URL_SCHEME)?e.slice(G.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(t,"'"));const a=JSON.parse(this.LS.getItem(n.info));return V(n),a}}const X="://";class q{constructor(){this.managers={}}static getInstance(){return null==q.instance&&(q.instance=new q),q.instance}static registerManager(t,e){(0,R.hu)(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith(X)&&(t=t.slice(0,t.indexOf(X))),(0,R.hu)(t.length>0,(()=>"scheme must not be an empty string."));const n=q.getInstance();(0,R.hu)(null==n.managers[t],(()=>"A model store manager is already registered for scheme '".concat(t,"'."))),n.managers[t]=e}static getManager(t){const e=q.getInstance().managers[t];if(null==e)throw new Error("Cannot find model manager for scheme '".concat(t,"'"));return e}static getSchemes(){return Object.keys(q.getInstance().managers)}}function K(t){if(-1===t.indexOf(X))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(q.getSchemes().join(",")));return{scheme:t.split(X)[0],path:t.split(X)[1]}}async function Z(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,R.hu)(t!==e,(()=>"Old path and new path are the same: '".concat(t,"'")));const a=b.getLoadHandlers(t);(0,R.hu)(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(t,"."))),(0,R.hu)(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(t,".")));const s=a[0],r=b.getSaveHandlers(e);(0,R.hu)(r.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(e,"."))),(0,R.hu)(r.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(e,".")));const o=r[0],i=K(t).scheme,c=K(t).path,l=i===K(t).scheme,u=await s.load();n&&l&&await q.getManager(i).removeModel(c);const h=await o.save(u);return n&&!l&&await q.getManager(i).removeModel(c),h.modelArtifactsInfo}async function Y(){const t=q.getSchemes(),e={};for(const n of t){const t=await q.getManager(n).listModels();for(const a in t){e[n+X+a]=t[a]}}return e}async function Q(t){const e=K(t);return q.getManager(e.scheme).removeModel(e.path)}async function J(t,e){return Z(t,e,!1)}async function $(t,e){return Z(t,e,!0)}var tt=n(1539);class et{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got ".concat(e));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){"undefined"!==typeof window&&(0,m.OB)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(t=>{if(t.source===window&&t.data.name===this.messageName){t.stopPropagation();(0,this.functionRefs[t.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(t,e)}isTypedArray(t){return(0,tt.j)(t)}}if((0,m.OB)().get("IS_BROWSER")){(0,m.OB)().setPlatform("browser",new et);try{q.registerManager(G.URL_SCHEME,new j)}catch(jn){}try{q.registerManager(_.URL_SCHEME,new D)}catch(jn){}}const nt=()=>n(5410);let at;class st{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=(0,m.OB)().global.fetch?(0,m.OB)().global.fetch(t,e):(null==at&&(at=nt()),at(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(e));return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}(0,m.OB)().get("IS_NODE")&&!(0,m.OB)().get("IS_BROWSER")&&(0,m.OB)().setPlatform("node",new st);var rt=n(7039),ot=n(9118),it=n(672),ct=n(4600),lt=n(4376);(0,u.wv)();const ut={buffer:rt.f,cast:ot.p,clone:it.d,print:ct.S};(0,lt.Vp)(ut);var ht=n(5875),dt=n(3312),pt=n(5750),ft=n(651),mt=n(6902),gt=n(7391),yt=n(7293),bt=n(6450),xt=n(7067);const vt=new Map,wt=new Map;class kt{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class It{constructor(){this.classNameMap={}}static getMap(){return null==It.instance&&(It.instance=new It),It.instance}static register(t){It.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function St(t,e,n){(0,R.hu)(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),(0,R.hu)("string"===typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),(0,R.hu)(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof e&&(e="Custom"),"undefined"===typeof n&&(n=t.className);const a=e+">"+n;return It.register(t),vt.set(a,t),wt.set(t,a),t}function Nt(t){return wt.has(t)?wt.get(t):t.className}class Tt extends kt{minimize(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return(0,ht.B9)(s),e?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return(0,bt.pn)(t,e)}dispose(){null!=this.iterations_&&(0,ht.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,xt.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Tt,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class Ct extends Tt{static get className(){return"Adadelta"}constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=u.BV.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=u.BV.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(e,"/accum_grad"),variable:(0,ht.lu)((()=>(0,yt.P)(a).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(e,"/accum_var"),variable:(0,ht.lu)((()=>(0,yt.P)(a).variable(false)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const r=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;(0,ht.lu)((()=>{const t=(0,dt.I)((0,ft.d)(r,this.rho),(0,ft.d)((0,gt.h)(s),1-this.rho)),e=(0,ft.d)((0,pt.h)((0,mt._)((0,dt.I)(o,this.epsilon)),(0,mt._)((0,dt.I)(r,this.epsilon))),s),n=(0,dt.I)((0,ft.d)(o,this.rho),(0,ft.d)((0,gt.h)(e),1-this.rho));r.assign(t),o.assign(n);const i=(0,dt.I)((0,ft.d)(e,-this.learningRate),a);a.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,ht.B9)(this.accumulatedGrads.map((t=>t.variable))),(0,ht.B9)(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}var Et=n(8582);class _t extends Tt{static get className(){return"Adagrad"}constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=u.BV.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:"".concat(e,"/accumulator"),variable:(0,ht.lu)((()=>(0,Et.h)(a.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const r=this.accumulatedGrads[n].variable;(0,ht.lu)((()=>{const t=(0,dt.I)(r,(0,gt.h)(s));r.assign(t);const e=(0,dt.I)((0,ft.d)((0,pt.h)(s,(0,mt._)((0,dt.I)(t,u.BV.backend.epsilon()))),-this.learningRate),a);a.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,ht.B9)(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}var At=n(4334),Dt=n(4774);class Rt extends Tt{static get className(){return"Adam"}constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,ht.lu)((()=>{this.accBeta1=(0,xt.i)(e).variable(),this.accBeta2=(0,xt.i)(n).variable()})),null==a&&(this.epsilon=u.BV.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);(0,ht.lu)((()=>{const n=(0,Dt.l)(1,this.accBeta1),a=(0,Dt.l)(1,this.accBeta2);e.forEach(((e,s)=>{const r=u.BV.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:"".concat(e,"/m"),variable:(0,ht.lu)((()=>(0,yt.P)(r).variable(false)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:"".concat(e,"/v"),variable:(0,ht.lu)((()=>(0,yt.P)(r).variable(false)))});const o=Array.isArray(t)?t[s].tensor:t[e];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,c=this.accumulatedSecondMoment[s].variable,l=(0,dt.I)((0,ft.d)(i,this.beta1),(0,ft.d)(o,1-this.beta1)),h=(0,dt.I)((0,ft.d)(c,this.beta2),(0,ft.d)((0,gt.h)(o),1-this.beta2)),d=(0,pt.h)(l,n),p=(0,pt.h)(h,a);i.assign(l),c.assign(h);const f=(0,dt.I)((0,ft.d)((0,pt.h)(d,(0,dt.I)((0,mt._)(p),this.epsilon)),-this.learningRate),r);r.assign(f)})),this.accBeta1.assign((0,ft.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,ft.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,ht.B9)(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&(0,ht.B9)(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),(0,ht.lu)((()=>{this.accBeta1.assign((0,At.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,At.s)(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}var Ot=n(7613),Ft=n(705);class Mt extends Tt{static get className(){return"Adamax"}constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=a,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,ht.lu)((()=>{this.iteration=(0,xt.i)(0).variable(),this.accBeta1=(0,xt.i)(e).variable()})),null==a&&(this.epsilon=u.BV.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);(0,ht.lu)((()=>{const n=(0,Dt.l)(1,this.accBeta1),a=(0,pt.h)(-this.learningRate,(0,dt.I)((0,ft.d)(this.iteration,this.decay),1));e.forEach(((e,s)=>{const r=u.BV.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:"".concat(e,"/m"),variable:(0,yt.P)(r).variable(false)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:"".concat(e,"/v"),variable:(0,yt.P)(r).variable(false)});const o=Array.isArray(t)?t[s].tensor:t[e];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,c=this.accumulatedWeightedInfNorm[s].variable,l=(0,dt.I)((0,ft.d)(i,this.beta1),(0,ft.d)(o,1-this.beta1)),h=(0,ft.d)(c,this.beta2),d=(0,Ot.W)(o),p=(0,Ft.g)(h,d);i.assign(l),c.assign(p);const f=(0,dt.I)((0,ft.d)((0,pt.h)(a,n),(0,pt.h)(l,(0,dt.I)(p,this.epsilon))),r);r.assign(f)})),this.iteration.assign((0,dt.I)(this.iteration,1)),this.accBeta1.assign((0,ft.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,ht.B9)(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&(0,ht.B9)(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}class Bt extends Tt{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=u.BV.registeredVariables[e];(0,ht.lu)((()=>{const t=(0,dt.I)((0,ft.d)(this.c,a),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=(0,ht.Cn)((0,xt.i)(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}class Lt extends Bt{static get className(){return"Momentum"}constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=(0,xt.i)(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=u.BV.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:"".concat(e,"/momentum"),variable:(0,ht.lu)((()=>(0,yt.P)(a).variable(t)))}}const s=this.accumulations[n].variable,r=Array.isArray(t)?t[n].tensor:t[e];null!=r&&(0,ht.lu)((()=>{let t;const e=(0,dt.I)((0,ft.d)(this.m,s),r);t=this.useNesterov?(0,dt.I)((0,ft.d)(this.c,(0,dt.I)(r,(0,ft.d)(e,this.m))),a):(0,dt.I)((0,ft.d)(this.c,e),a),s.assign(e),a.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,ht.B9)(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}class zt extends Tt{static get className(){return"RMSProp"}constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==a&&(this.epsilon=u.BV.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=u.BV.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(e,"/rms"),variable:(0,ht.lu)((()=>(0,yt.P)(a).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(e,"/momentum"),variable:(0,ht.lu)((()=>(0,yt.P)(a).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(e,"/mg"),variable:(0,ht.lu)((()=>(0,yt.P)(a).variable(s)))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,ht.lu)((()=>{const t=(0,dt.I)((0,ft.d)(o,this.decay),(0,ft.d)((0,gt.h)(r),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=(0,dt.I)((0,ft.d)(e,this.decay),(0,ft.d)(r,1-this.decay)),c=(0,pt.h)((0,ft.d)(r,this.learningRate),(0,mt._)((0,Dt.l)(t,(0,dt.I)((0,gt.h)(s),this.epsilon)))),l=(0,dt.I)((0,ft.d)(i,this.momentum),c);o.assign(t),e.assign(s),i.assign(l);const u=(0,Dt.l)(a,l);a.assign(u)}else{const t=(0,dt.I)((0,ft.d)(o,this.decay),(0,ft.d)((0,gt.h)(r),1-this.decay)),e=(0,dt.I)((0,ft.d)(i,this.momentum),(0,pt.h)((0,ft.d)(r,this.learningRate),(0,mt._)((0,dt.I)(t,this.epsilon))));o.assign(t),i.assign(e);const n=(0,Dt.l)(a,e);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,ht.B9)(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,ht.B9)(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&(0,ht.B9)(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}const Ut=[Ct,_t,Rt,Mt,Lt,zt,Bt];function Pt(t){return new Promise((t=>setTimeout(t))).then(t)}class Vt{constructor(t){if(!(0,m.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Vt.URL_SCHEME)&&(t=t.slice(Vt.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=I.w.join(t.weightData),n=window.URL.createObjectURL(new Blob([e],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const e=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],a=(0,y.Yd)(t,e),s=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await Pt((()=>r.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=n,await Pt((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,y.Q)(t)}}}}Vt.URL_SCHEME="downloads://";class Wt{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(t));this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise(((t,e)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),s=a.modelTopology;if(null==s)return void e(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void e(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void t({modelTopology:s});const r=(0,y.jN)(a,(t=>this.loadWeights(t)));t(r)},n.onerror=t=>e("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(t){const e=[],n=[];for(const r of t)e.push(...r.weights),n.push(...r.paths);const a=this.checkManifestAndWeightFiles(t),s=n.map((t=>this.loadWeightsFile(t,a[t])));return Promise.all(s).then((t=>[e,t]))}loadWeightsFile(t,e){return new Promise(((n,a)=>{const s=new FileReader;s.onload=t=>{const e=t.target.result;n(e)},s.onerror=e=>a("Failed to weights data from file of path '".concat(t,"'.")),s.readAsArrayBuffer(e)}))}checkManifestAndWeightFiles(t){const e=[],n=this.weightsFiles.map((t=>(0,y.EZ)(t.name))),a={};for(const s of t)s.paths.forEach((t=>{const s=(0,y.EZ)(t);if(-1!==e.indexOf(s))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(s,"'"));if(e.push(s),-1===n.indexOf(s))throw new Error("Weight file with basename '".concat(s,"' is not provided."));a[t]=this.weightsFiles[n.indexOf(s)]}));if(e.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(e.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function Gt(t){return new Wt(t)}function Ht(t,e,n,a){!function(t){(0,R.hu)(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){(0,R.hu)(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(t))),(0,R.hu)(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(e))),(0,R.hu)(e>=t,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(t," and endFraction ")+"".concat(e)))}(n=null==n?0:n,a=null==a?1:a);let s=0;return Promise.all(t.map((r=>(r.then((r=>{const o=n+ ++s/t.length*(a-n);return e(o),r})),r))))}b.registerSaveRouter((t=>(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Vt.URL_SCHEME)?function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Vt(t)}(t.slice(Vt.URL_SCHEME.length)):null));var jt=n(1988);async function Xt(t,e){null==e&&(e={});const n=null==e.fetchFunc?(0,m.OB)().platform.fetch:e.fetchFunc,a=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(a):await Ht(a,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await Ht(s,e.onProgress,.5,1)}async function qt(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Kt((t=>Xt(t,{requestInit:a})))(t,e,n)}function Kt(t){return async function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const s=e.map((()=>!1)),r={},o=null!=a?a.map((()=>!1)):[],i=[];if(e.forEach(((t,e)=>{let n=0;t.weights.forEach((t=>{const c="quantization"in t?t.quantization.dtype:t.dtype,l=jt.J[c]*R.NA(t.shape),u=()=>{s[e]=!0,null==r[e]&&(r[e]=[]),r[e].push({manifestEntry:t,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((e,n)=>{e===t.name&&(u(),o[n]=!0)})):u(),i.push(t.name),n+=l}))})),!o.every((t=>t))){const t=a.filter(((t,e)=>!o[e]));throw new Error("Could not find weights in manifest with names: "+"".concat(t.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=s.reduce(((t,e,n)=>(e&&t.push(n),t)),[]),l=[];c.forEach((t=>{e[t].paths.forEach((t=>{const e=n+(n.endsWith("/")?"":"/")+t;l.push(e)}))}));const u=await t(l),h={};let d=0;return c.forEach((t=>{const n=e[t].paths.length,a=new I.w(u.slice(d,d+n));r[t].forEach((t=>{const e=a.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=(0,y.dI)(e,[t.manifestEntry]);for(const a in n)h[a]=n[a]})),d+=n})),h}}class Zt{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?((0,R.hu)("function"===typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=(0,m.OB)().platform.fetch,(0,R.hu)(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&(0,R.hu)(2===t.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(t.length,")."))),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],a=(0,y.Yd)(t,n);if(e.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=t.weightData){const n=I.w.join(t.weightData);e.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:(0,y.Q)(t),responses:[s]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(s.status,"."))}async loadModelJSON(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(t.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let e;try{e=await t.json()}catch(s){let t="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,a=e.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const t=await this.loadModelJSON();return(0,y.jN)(t,(t=>this.loadWeights(t)))}async loadStream(){const t=await this.loadModelJSON(),e=await this.getWeightUrls(t.weightsManifest),n=(0,y.hu)(t.weightsManifest);return Object.assign(Object.assign({},t),{weightSpecs:n,getWeightStream:()=>function(t,e){var n;const a=null==e.fetchFunc?(0,m.OB)().platform.fetch:e.fetchFunc;let s,r=0;return null===(n=e.onProgress)||void 0===n||n.call(e,0),new ReadableStream({pull:async n=>{for(var o;r<t.length;){if(!s){const n=(await a(t[r],e.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:i,value:c}=await s.read();if(!i)return void n.enqueue(c);r++,s=void 0,null===(o=e.onProgress)||void 0===o||o.call(e,r/t.length)}n.close()}})}(e,this.loadOptions)})}async getWeightUrls(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),a=t.substring(0,e),s=n>e?t.substring(n):"";return[a+"/",s]}(e),s=this.weightPathPrefix||n,r=[],o=[];for(const i of t)for(const t of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):r.push(s+t+a);return this.weightUrlConverter&&r.push(...await Promise.all(o)),r}async loadWeights(t){const e=await this.getWeightUrls(t);return[(0,y.hu)(t),await Xt(e,this.loadOptions)]}}function Yt(t){return null!=t.match(Zt.URL_SCHEME_REGEX)}Zt.URL_SCHEME_REGEX=/^https?:\/\//;const Qt=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>Yt(t))):Yt(t),n)return Jt(t,e)}return null};function Jt(t,e){return new Zt(t,e)}function $t(t,e){return Jt(t,e)}b.registerSaveRouter(Qt),b.registerLoadRouter(Qt);class te{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class ee{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class ne{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function ae(t,e,n,a){return new ne(se(...arguments))}function se(t,e,n,a){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new te(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new te({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new te({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:a})}function re(t){return new ee(t)}function oe(t){return new ee(t)}var ie=n(5774),ce=n(2145),le=n(8864),ue=n(8354),he=n(8640),de=n(3123);let pe,fe=!1;function me(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,s=!1,r=!1,o=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)r=!0;else if(null!=t.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(t.constructor.name));i=!0}if(null!=(0,le.pI)(ce.eBW,u.BV.backendName)){const n={pixels:t},a={numChannels:e};return u.BV.runKernel(ce.eBW,n,a)}const[c,l]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let h,d;if(o)h=t.getContext("2d").getImageData(0,0,c,l).data;else if(a||n)h=t.data;else if(r||s||i){if(null==pe)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");pe=new OffscreenCanvas(1,1).getContext("2d")}else pe=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});pe.canvas.width=c,pe.canvas.height=l,pe.drawImage(t,0,0,c,l),h=pe.getImageData(0,0,c,l).data}if(4===e)d=new Int32Array(h);else{const t=c*l;d=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)d[n*e+t]=h[4*n+t]}const p=[l,c,e];return(0,de.w)(d,p,"int32")}function ge(t){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(t instanceof ImageBitmap)&&function(t){return null!=t&&0!==t.width&&0!==t.height}(t)&&!function(t){return null!=t&&t.data instanceof Uint8Array}(t)}async function ye(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,m.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&ge(t)){let e;try{e=await createImageBitmap(t,{premultiplyAlpha:"none"})}catch(a){e=null}n=null!=e&&e.width===t.width&&e.height===t.height?e:t}else n=t;return me(n,e)}function be(t){if(2!==t.rank&&3!==t.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(t.rank,"."));const e=2===t.rank?1:t.shape[2];if(e>4||2===e)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(e));if("float32"!==t.dtype&&"int32"!==t.dtype)throw new Error("Unsupported type for toPixels: ".concat(t.dtype,".")+" Please use float32 or int32 tensors.")}async function xe(t,e){let n=(0,ue._1)(t,"img","toPixels");if(!(t instanceof lt.es)){const t=n;n=(0,ot.p)(t,"int32"),t.dispose()}be(n);const[a,s]=n.shape.slice(0,2),r=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(s*a*4);for(let l=0;l<a*s;++l){const t=[0,0,0,255];for(let a=0;a<r;a++){const e=o[l*r+a];if("float32"===n.dtype){if(e<0||e>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(e,"."))}else if("int32"===n.dtype&&(e<0||e>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(e,"."));1===r?(t[0]=e*i,t[1]=e*i,t[2]=e*i):t[a]=e*i}const e=4*l;c[e+0]=Math.round(t[0]),c[e+1]=Math.round(t[1]),c[e+2]=Math.round(t[2]),c[e+3]=Math.round(t[3])}if(null!=e){if(!fe){null!=(0,le.pI)(ce.hGc,u.BV.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),fe=!0)}e.width=s,e.height=a;const t=e.getContext("2d"),n=new ImageData(c,s,a);t.putImageData(n,0,0)}return n!==t&&n.dispose(),c}function ve(t,e,n){let a=(0,ue._1)(t,"img","draw");if(!(t instanceof lt.es)){const t=a;a=(0,ot.p)(t,"int32"),t.dispose()}be(a),function(t){const e=(null===t||void 0===t?void 0:t.alpha)||1;if(e>1||e<0)throw new Error("Alpha value ".concat(e," is suppoed to be in range [0 - 1]."))}(null===n||void 0===n?void 0:n.imageOptions);const s={image:a},r={canvas:e,options:n};u.BV.runKernel(ce.hGc,s,r)}const we=(0,he.op)({fromPixels_:me});var ke=n(2875),Ie=n(9064),Se=n(115);const Ne="4.15.0";var Te=n(3525),Ce=n(4176);const Ee=class{static sgd(t){return new Bt(t)}static momentum(t,e){return new Lt(t,e,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(t){return new zt(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Rt(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Ct(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Mt(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(t){return new _t(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},_e="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:t=>t();function Ae(){return new Promise((t=>_e((()=>t()))))}var De=n(8473);function Re(t,e){const n=t[0].length;t.forEach(((t,e)=>{R.hu(t.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(e,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),R.hu(e>=0&&e<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=t[0];t.forEach(((t,s)=>{for(let r=0;r<n;r++)R.hu(r===e||t[r]===a[r],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(s,"] (").concat(t,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(s,".")))}))}function Oe(t,e){const n=t[0].slice();for(let a=1;a<t.length;a++)n[e]+=t[a][e];return n}var Fe,Me=n(9151),Be=n(5171);function Le(t,e,n){let a=new Array;if(null==n&&null==e)return a;if(null==e)for(;a.length<t+n.length;)a.push(-1);else a=e.slice();if(null==n)return a;if(t+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(e," are incompatible: rt input.rank = ").concat(t+n.length,", but shape.rank = ").concat(a.length));for(let s=1;s<n.length;++s){const r=n[s],o=a[a.length-n.length+s],i=a[o];if(r>=0)if(i>=0){if(i!==r)throw new Error("rt input.shape and shape=".concat(e," are incompatible: rt input.shape[").concat(s+t,"] = ").concat(r," but shape[").concat(s+t,"] = ").concat(i))}else a[o]=r}return a}function ze(t){const e={FIRST_DIM_SIZE:Fe.FIRST_DIM_SIZE,VALUE_ROWIDS:Fe.VALUE_ROWIDS,ROW_LENGTHS:Fe.ROW_LENGTHS,ROW_SPLITS:Fe.ROW_SPLITS,ROW_LIMITS:Fe.ROW_LIMITS,ROW_STARTS:Fe.ROW_STARTS},n=[];for(const a of t){if(!(a in e))break;n.push(e[a])}return n}function Ue(t){return 0===t.length?0:t[0]===Fe.FIRST_DIM_SIZE?t.length-1:t.length}function Pe(t,e){if(null==t||null==e)return;const n=t.length,a=e.length;if(n>=a)throw new Error("defaultValue.shape=".concat(t," and ragged tensor flatValues.shape=").concat(e,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let s=0;s<Math.min(n,a-1);++s){const n=t[s],a=e[s+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(t,", and ragged tensor input flatValues.shape=").concat(e," are incompatible: defaultValue.shape[").concat(s-t.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(s-t.length,"] = ").concat(a))}}!function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"}(Fe||(Fe={}));const Ve=30;function We(t){return t<=Ve?t:(0,R.jP)(t,Math.floor(Math.sqrt(t)))}function Ge(t,e,n){return[n*("number"===typeof t?t:t[0]),e*("number"===typeof t?t:t[1])]}function He(t,e,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let s=0;s<n;++s)a=a.concat([t[s+1]/e[s],e[s]]);a=a.concat(t.slice(n+1))}return a}function je(t,e){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(e);for(let a=e+1;a<t;++a)a<=2*e?(n.push(a),n.push(a-(e+1))):n.push(a)}else{const a=[],s=[];for(let n=1;n<t;++n)n>=2*e+1||n%2===1?s.push(n):a.push(n);n.push(...a),n.push(0),n.push(...s)}return n}function Xe(t,e,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const s=[];a?s.push(t[0]/n):s.push(t[0]*n);for(let r=1;r<t.length;++r)r<=e.length?a?s.push(e[r-1]*t[r]):s.push(t[r]/e[r-1]):s.push(t[r]);return s}function qe(t,e){const n=[0];for(let a=0;a<e;++a)n.push(t[a][0]);return n}function Ke(t,e,n){const a=t.slice(0,1);for(let s=0;s<n;++s)a.push(t[s+1]-e[s][0]-e[s][1]);return a}function Ze(t,e){const n=t.shape.length,a=e.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==e.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(e.shape[a-1]," vs. ").concat(n));if(0===(0,R.NA)(t.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(t.shape,"."));const s=e.shape,r=s[s.length-1];let o=1;for(let h=0;h<s.length-1;++h)o*=s[h];const i=t.shape,c=s.slice();c.pop();let l=1;for(let h=r;h<n;++h)l*=i[h],c.push(i[h]);const u=[...(0,R.e3)(t.shape).map((t=>t/l)),1].slice(0,r);return[c,o,l,u]}var Ye=n(8604),Qe=n(349);const Je=.3275911,$e=.254829592,tn=-.284496736,en=1.421413741,nn=-1.453152027,an=1.061405429;var sn=n(7269);function rn(t,e){if(t.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(t.length,", imag: ").concat(e.length,"."));const n=new Float32Array(2*t.length);for(let a=0;a<n.length;a+=2)n[a]=t[a/2],n[a+1]=e[a/2];return n}function on(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let a=0;a<t.length;a+=2)e[a/2]=t[a],n[a/2]=t[a+1];return{real:e,imag:n}}function cn(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),a=new Float32Array(e);for(let s=0;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],a[Math.floor(s/4)]=t[s+1];return{real:n,imag:a}}function ln(t){const e=Math.floor(t.length/4),n=new Float32Array(e),a=new Float32Array(e);for(let s=2;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],a[Math.floor(s/4)]=t[s+1];return{real:n,imag:a}}function un(t,e){return{real:t[2*e],imag:t[2*e+1]}}function hn(t,e,n,a){t[2*a]=e,t[2*a+1]=n}function dn(t,e){const n=new Float32Array(t/2),a=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const r=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(r),a[s]=Math.sin(r)}return{real:n,imag:a}}function pn(t,e,n){const a=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(a),imag:Math.sin(a)}}const fn="->",mn=/->/g,gn=",",yn="...";function bn(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(mn,"").length)/fn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(fn,'").'));const[a,s]=t.split(fn);(0,R.hu)(-1===a.indexOf(yn),(()=>'The ellipsis notation ("'.concat(yn,'") is not supported yet.')));const r=a.split(gn),o=r.length;if(e!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(e));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<s.length;++h){const t=s[h];if(!r.some((e=>-1!==e.indexOf(t))))throw new Error("Output subscripts contain the label ".concat(t," ")+"not present in the input subscripts.");-1===i.indexOf(t)&&i.push(t)}for(let h=0;h<a.length;++h){const t=a[h];-1===i.indexOf(t)&&t!==gn&&i.push(t)}const c=new Array(r.length);for(let h=0;h<o;++h){if(new Set(r[h].split("")).size!==r[h].length)throw new Error("Found duplicate axes in input component ".concat(r[h],". ")+"Support for duplicate axes in input is not implemented yet.");c[h]=[];for(let t=0;t<r[h].length;++t)c[h].push(i.indexOf(r[h][t]))}const l=i.length,u=[];for(let h=s.length;h<l;++h)u.push(h);return{allDims:i,summedDims:u,idDims:c}}function xn(t,e){let n=new Array(t);n.fill(-1);for(let s=0;s<e.length;++s)n[e[s]]=s;const a=[];for(let s=0;s<t;++s)-1===n[s]&&a.push(s);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:a}}function vn(t,e,n){const a=new Array(t);for(let s=0;s<n.length;++s){const t=n[s].shape;for(let n=0;n<e[s].length;++n)void 0===a[e[s][n]]?a[e[s][n]]=t[n]:(0,R.hu)(a[e[s][n]]===t[n],(()=>"Expected dimension ".concat(a[e[s][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(t),", ")+"but got dimension ".concat(t[n])))}}function wn(t,e){const n=t,a=[];let s=0;0===t.length&&n.push(-1),s=t.length+1;for(let o=0;o<s;++o)a.push([]);const r=[];for(let o=0;o<n.length;++o){const t=In(e,n[o]);for(const e of t)-1===r.indexOf(e)&&(a[o].push(e),r.push(e))}return{path:n,steps:a}}function kn(t){return t.every(((t,e)=>t===e))}function In(t,e){const n=[];for(let a=0;a<t.length;++a)0!==t[a].length&&-1===t[a].indexOf(e)&&-1!==e||n.push(a);return n}function Sn(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof e)(0,R.hu)(t.shape[n]%e===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(e).fill(t.shape[n]/e);else{const s=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);(0,R.hu)(s<=1,(()=>"There should be only one negative value in split array."));const r=e.indexOf(-1);if(-1!==r){const a=e.reduce(((t,e)=>e>0?t+e:t));e[r]=t.shape[n]-a}(0,R.hu)(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=e}return a}function Nn(t){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(t)}function Tn(t,e){return"indices(".concat(t,", 0) is invalid: ").concat(e," < 0")}function Cn(t,e,n){return"indices(".concat(t,", 0) is invalid: ").concat(e," >= ").concat(n)}function En(t,e){return"only one output dimension may be -1, not both ".concat(t," and ").concat(e)}function _n(t,e){return"size ".concat(t," must be non-negative, not ").concat(e)}function An(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Dn(t,e){const n=(0,R.NA)(t),a=(0,R.NA)(e);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(t," outputShape= ").concat(e)}function Rn(t,e){const n=(0,R.NA)(t),a=(0,R.NA)(e);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(t," outputShape=").concat(e)}function On(){return"segment ids must be >= 0"}function Fn(){return"segment ids are not increasing"}function Mn(t,e){return"Segment id ".concat(t," out of range [0, ").concat(e,"), possibly because segmentIds input is not sorted.")}function Bn(t,e,n){return"Bad: indices[".concat(t,"] == ").concat(e," out of range [0, ").concat(n,")")}function Ln(t,e){let n,a=!1;for(t<=Ve?(n=t,a=!0):n=(0,R.jP)(t,Math.floor(Math.sqrt(t)));!a;)n>e||n===t?a=!0:n=(0,R.jP)(t,n+1);return n}function zn(t,e,n){const a=[],s=t.length;for(let r=0;r<s;r++)r!==e?a.push(t[r]):a.push(n);return a}function Un(t,e,n,a){const s=e.shape.length,r=t.shape.length;if(0!==a&&(a<-s||a>s))throw new Error("Expect batchDims in the range of [-".concat(s,", ").concat(s,"], but got ").concat(a));if(a<0&&(a+=s),a>r)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(r,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let h=0;h<a;++h)if(t.shape[h]!==e.shape[h])throw new Error("x.shape[".concat(h,"]: ").concat(t.shape[h]," should be equal to indices.shape[").concat(h,"]: ").concat(e.shape[h],"."));const o=t.shape[n],i=[];let c=1,l=1,u=1;for(let h=0;h<a;++h)i.push(t.shape[h]),c*=t.shape[h];for(let h=a;h<n;h++)i.push(t.shape[h]),l*=t.shape[h];for(let h=a;h<s;h++)i.push(e.shape[h]);for(let h=n+1;h<r;h++)i.push(t.shape[h]),u*=t.shape[h];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function Pn(t){try{return t.map((t=>(0,Se.decodeString)(t)))}catch(jn){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(jn))}}function Vn(t){return t.map((t=>(0,Se.encodeString)(t)))}var Wn=n(745),Gn=n(4189),Hn=n(4679);!function(){for(const t of Ut)St(t)}()},5714:(t,e,n)=>{"use strict";n.d(e,{w:()=>s});var a=n(115);class s{static join(t){return new s(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,null==t)return;if(t instanceof Array||(t=[t]),0===(t=t.map((t=>a.isTypedArray(t)?t.buffer:t))).length)return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let n=0;n<t.length;n++){const a=t[n];n!==t.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=e+a.byteLength;this.shards.push({buffer:a,start:e,end:s}),e=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const n=this.findShardForByte(t);if(-1===n)throw new Error("Could not find start shard for byte ".concat(t));const a=new ArrayBuffer(e-t),s=new Uint8Array(a);let r=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=t+r-n.start,i=r,c=Math.min(e,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(s.set(l,i),r+=l.length,e<n.end)break}return a}findShardForByte(t){if(0===this.shards.length||t<0||t>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(e){return t<e.start?-1:t>=e.end?1:0}if(0===e(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(t,e){let n=0,a=t.length;for(;n<=a;){const s=Math.floor((a-n)/2)+n,r=e(t[s]);if(0===r)return s;r<0?a=s:n=s+1}return-1}(this.shards,e);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},1434:(t,e,n)=>{"use strict";n.d(e,{EZ:()=>S,JY:()=>I,Q:()=>E,Yd:()=>N,_n:()=>w,dI:()=>d,hu:()=>_,jN:()=>C,ji:()=>T,n7:()=>k,r:()=>y,yz:()=>h});var a=n(9253),s=n(2442),r=n(6147),o=n(1988),i=n(5714),c=n(5875),l=n(5050);const u=4;async function h(t,e){const n=[],a=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let r=0;r<s.length;++r){const o=s[r],i=Array.isArray(t)?t[r].tensor:t[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const t=new Promise((async t=>{const e=await i.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+u*e.length,a=new Uint8Array(n);let s=0;for(let r=0;r<e.length;r++){const t=e[r],n=new Uint8Array(new Uint32Array([t.length]).buffer);a.set(n,s),s+=u,a.set(t,s),s+=t.length}t(a)}));a.push(t)}else a.push(i.data());null!=e&&(c.group=e),n.push(c)}return{data:b(await Promise.all(a)),specs:n}}function d(t,e){const n=new i.w(t),a={};let s=0;for(const r of e){const t=p(r,((t,e)=>n.slice(s+t,s+e)));a[r.name]=m(r,n.slice(s,s+t)),s+=t}return a}function p(t,e){const n=(0,r.NA)(t.shape);let a;if("quantization"in t){const e=t.quantization;a=o.J[e.dtype]}else{if("string"===t.dtype){let t=0;for(let a=0;a<n;a++)t+=u+new Uint32Array(e(t,t+u))[0];return t}a=o.J[t.dtype]}return n*a}async function f(t,e){const n=(0,r.NA)(t.shape);let a;if("quantization"in t){const e=t.quantization;a=o.J[e.dtype]}else{if("string"===t.dtype){let t=0;for(let a=0;a<n;a++)t+=u+new Uint32Array(await e(t,t+u))[0];return t}a=o.J[t.dtype]}return n*a}function m(t,e){const n=t.name,i=t.dtype,c=t.shape,l=(0,r.NA)(c);let h,d=0;if("quantization"in t){const a=t.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error("Weight ".concat(t.name," with quantization ").concat(a.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==a.dtype)throw new Error("Weight ".concat(t.name," has unknown ")+"quantization dtype ".concat(a.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==i)throw new Error("Weight ".concat(t.name," is quantized with ").concat(a.dtype," ")+"which only supports weights of type float32 not ".concat(i,"."))}const s=o.J[a.dtype],r="uint8"===a.dtype?new Uint8Array(e):new Uint16Array(e);if("float32"===i)if("uint8"===a.dtype||"uint16"===a.dtype){h=new Float32Array(r.length);for(let t=0;t<r.length;t++){const e=r[t];h[t]=e*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type float32.");{const t=function(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0===(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return a=>{const s=new ArrayBuffer(4*a.length),r=new Uint32Array(s);for(let o=0;o<a.length;o++){const s=a[o],i=t[n[s>>10]+(1023&s)]+e[s>>10];r[o]=i}return new Float32Array(s)}}();h=t(r)}}else{if("int32"!==i)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i));if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type int32.");h=new Int32Array(r.length);for(let t=0;t<r.length;t++){const e=r[t];h[t]=Math.round(e*a.scale+a.min)}}d+=l*s}else if("string"===i){const n=(0,r.NA)(t.shape);h=[];for(let t=0;t<n;t++){const t=new Uint32Array(e.slice(d,d+u))[0];d+=u;const n=new Uint8Array(e.slice(d,d+t));h.push(n),d+=t}}else{const t=o.J[i];if("float32"===i)h=new Float32Array(e);else if("int32"===i)h=new Int32Array(e);else{if("bool"!==i){if("complex64"===i){h=new Float32Array(e);const t=new Float32Array(h.length/2),n=new Float32Array(h.length/2);for(let e=0;e<t.length;e++)t[e]=h[2*e],n[e]=h[2*e+1];const r=(0,s.X)(t,c,"float32"),o=(0,s.X)(n,c,"float32"),i=(0,a.P)(r,o);return r.dispose(),o.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i))}h=new Uint8Array(e)}d+=l*t}return(0,s.X)(h,c,i)}async function g(t,e,n){let a=new Uint8Array(e);for(;a.byteLength<n;){const{done:e,value:s}=await t.read();if(e&&null==s){const t=n-a.byteLength;throw new Error("Reader is done but ".concat(t," bytes are still expected"))}const r=new Uint8Array(a.length+s.byteLength);r.set(a,0),r.set(new Uint8Array(s),a.length),a=r}return a.buffer}async function y(t,e){const n={},a=t.getReader();let s=new ArrayBuffer(0);for(const o of e){const t=await f(o,(async(t,e)=>(s=await g(a,s,e),s.slice(t,e))));s=await g(a,s,t);const e=s.slice(0,t);s=s.slice(t);const i=m(o,e);if(n[o.name]=i,"webgpu"===(0,c.N_)()){const t=(0,c.y3)();"uploadToGPU"in t&&(0,r.NA)(i.shape)>=(0,l.OB)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&t.uploadToGPU(i.dataId)}}return n}function b(t){if(null===t)throw new Error("Invalid input value: ".concat(JSON.stringify(t)));let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(t.constructor.name))}));const a=new Uint8Array(e);let s=0;return n.forEach((t=>{a.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),a.buffer}const x="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function v(t){return x?Buffer.byteLength(t,"utf8"):new Blob([t]).size}function w(t){if(x)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let a=0,s=e.length;a<s;a++)n+=String.fromCharCode(e[a]);return btoa(n)}function k(t){if(x){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let a=0;a<e.length;++a)n.set([e.charCodeAt(a)],a);return n.buffer}function I(t){return i.w.join(t)}function S(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function N(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(n.initializerSignature=t.initializerSignature),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}function T(t,e,n){const a={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(a.trainingConfig=t.trainingConfig),null!=t.weightsManifest){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=e,a.weightData=n}return null!=t.signature&&(a.signature=t.signature),null!=t.userDefinedMetadata&&(a.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(a.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(a.initializerSignature=t.initializerSignature),a}async function C(t,e){let n,a;return null!=t.weightsManifest&&([n,a]=await e(t.weightsManifest)),T(t,n,a)}function E(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:v(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:v(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:new i.w(t.weightData).byteLength}}function _(t){const e=[];for(const n of t)e.push(...n.weights);return e}},1988:(t,e,n)=>{"use strict";n.d(e,{J:()=>a});const a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},2145:(t,e,n)=>{"use strict";n.d(e,{$HU:()=>fe,$g6:()=>et,$w:()=>Z,Acj:()=>bt,BMI:()=>zt,BiW:()=>he,Byc:()=>V,CAk:()=>Ct,CQl:()=>ue,D2d:()=>je,DlI:()=>ce,Eh3:()=>R,FKq:()=>Be,G3Y:()=>rn,GBy:()=>Le,Gcp:()=>Pe,HEU:()=>at,HZH:()=>ge,Hhh:()=>Bt,Hmb:()=>be,IKK:()=>l,IMb:()=>v,J$2:()=>Nt,J_u:()=>wt,JhU:()=>y,L8s:()=>Ue,Ly9:()=>N,M2y:()=>d,MIZ:()=>en,MRv:()=>Me,MZg:()=>Ot,NEP:()=>ot,NZg:()=>Zt,O3z:()=>Ve,OAf:()=>Vt,OR:()=>dt,OU7:()=>Wt,OV7:()=>Pt,Omj:()=>st,Oyi:()=>m,PYm:()=>Dt,PhF:()=>Ee,QCc:()=>g,QRR:()=>H,Qg5:()=>vt,QiL:()=>se,Qvg:()=>ln,RFZ:()=>C,ROF:()=>b,RQH:()=>De,RuY:()=>un,SIB:()=>Te,SX0:()=>nt,SYM:()=>a,SbG:()=>we,SpW:()=>r,T0n:()=>j,TQc:()=>ze,TR1:()=>P,ToN:()=>cn,Tr8:()=>$e,Uyb:()=>ht,VGw:()=>s,Vbg:()=>Kt,VcC:()=>G,VfG:()=>Rt,Vn9:()=>J,W0H:()=>ee,XLW:()=>w,XkS:()=>Je,Xze:()=>i,Y0y:()=>ct,YFo:()=>it,YoZ:()=>Lt,ZbH:()=>_t,ZjV:()=>He,Zz9:()=>A,_JP:()=>Ye,_V0:()=>mn,_Yw:()=>xe,_k9:()=>x,_tC:()=>Xe,a5O:()=>Fe,aJk:()=>h,avt:()=>kt,b9H:()=>pn,bK0:()=>qe,bV0:()=>Se,c17:()=>jt,cWu:()=>an,cie:()=>X,cye:()=>te,dDz:()=>le,deh:()=>ut,dpD:()=>ye,e07:()=>Ie,e0R:()=>Ke,e6w:()=>de,e7N:()=>Et,eBW:()=>dn,eEB:()=>T,eZ0:()=>Mt,ekb:()=>Q,gJX:()=>E,h8e:()=>hn,hCO:()=>S,hGc:()=>$,hdR:()=>rt,i5y:()=>Oe,iHb:()=>W,iJz:()=>xt,iWB:()=>It,iZT:()=>yt,ik2:()=>z,jMg:()=>f,jQk:()=>Ze,jQs:()=>qt,jeX:()=>pt,kU:()=>At,kpP:()=>on,kuV:()=>Qt,luS:()=>gn,lyA:()=>re,mKl:()=>ke,mTV:()=>Ut,mc4:()=>U,mhS:()=>O,mm_:()=>o,n9L:()=>nn,nhH:()=>We,nr8:()=>Ce,o0g:()=>ie,o2y:()=>L,oFR:()=>_e,oHH:()=>tt,oT6:()=>c,p2w:()=>Ae,p4S:()=>Y,pe_:()=>oe,q1x:()=>gt,q2K:()=>Ht,q8u:()=>Xt,qCd:()=>Ft,qWM:()=>ne,qi_:()=>mt,qkr:()=>me,qw7:()=>p,r7n:()=>St,s1s:()=>Qe,sEM:()=>tn,sHE:()=>ft,sJF:()=>u,sL$:()=>q,usg:()=>fn,uv1:()=>$t,vFR:()=>Gt,vtC:()=>Tt,vwp:()=>lt,w3H:()=>Ge,wUP:()=>F,wYB:()=>Re,wYn:()=>Yt,we_:()=>ae,wm:()=>M,wx7:()=>sn,x12:()=>B,xJR:()=>pe,xQA:()=>Ne,xnO:()=>_,y7R:()=>K,yQU:()=>Jt,yj2:()=>D,zbQ:()=>ve,zvY:()=>I,zws:()=>k});const a="Abs",s="Acos",r="Acosh",o="Add",i="AddN",c="All",l="Any",u="ArgMax",h="ArgMin",d="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",I="Bincount",S="BitwiseAnd",N="BroadcastTo",T="BroadcastArgs",C="Cast",E="Ceil",_="ClipByValue",A="Complex",D="ComplexAbs",R="Concat",O="Conv2D",F="Conv2DBackpropFilter",M="Conv2DBackpropInput",B="Conv3D",L="Conv3DBackpropFilterV2",z="Conv3DBackpropInputV2",U="Cos",P="Cosh",V="Cumprod",W="Cumsum",G="CropAndResize",H="DenseBincount",j="DepthToSpace",X="DepthwiseConv2dNative",q="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",Z="Diag",Y="Dilation2D",Q="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",$="Draw",tt="RealDiv",et="Einsum",nt="Elu",at="EluGrad",st="Erf",rt="Equal",ot="Exp",it="ExpandDims",ct="Expm1",lt="FFT",ut="Fill",ht="FlipLeftRight",dt="Floor",pt="FloorDiv",ft="FusedBatchNorm",mt="GatherV2",gt="GatherNd",yt="Greater",bt="GreaterEqual",xt="Identity",vt="IFFT",wt="Imag",kt="IsFinite",It="IsInf",St="IsNan",Nt="LeakyRelu",Tt="Less",Ct="LessEqual",Et="LinSpace",_t="Log",At="Log1p",Dt="LogicalAnd",Rt="LogicalNot",Ot="LogicalOr",Ft="LogSoftmax",Mt="LRN",Bt="LRNGrad",Lt="Max",zt="Maximum",Ut="MaxPool",Pt="MaxPoolGrad",Vt="MaxPool3D",Wt="MaxPool3DGrad",Gt="MaxPoolWithArgmax",Ht="Mean",jt="Min",Xt="Minimum",qt="MirrorPad",Kt="Mod",Zt="Multinomial",Yt="Multiply",Qt="Neg",Jt="NotEqual",$t="NonMaxSuppressionV3",te="NonMaxSuppressionV4",ee="NonMaxSuppressionV5",ne="OnesLike",ae="OneHot",se="Pack",re="PadV2",oe="Pow",ie="Prelu",ce="Prod",le="RaggedGather",ue="RaggedRange",he="RaggedTensorToTensor",de="Range",pe="Real",fe="Reciprocal",me="Relu",ge="Reshape",ye="ResizeNearestNeighbor",be="ResizeNearestNeighborGrad",xe="ResizeBilinear",ve="ResizeBilinearGrad",we="Relu6",ke="Reverse",Ie="Round",Se="Rsqrt",Ne="ScatterNd",Te="TensorScatterUpdate",Ce="SearchSorted",Ee="Select",_e="Selu",Ae="Slice",De="Sin",Re="Sinh",Oe="Sign",Fe="Sigmoid",Me="Softplus",Be="Sqrt",Le="Sum",ze="SpaceToBatchND",Ue="SplitV",Pe="Softmax",Ve="SparseFillEmptyRows",We="SparseReshape",Ge="SparseSegmentMean",He="SparseSegmentSum",je="SparseToDense",Xe="SquaredDifference",qe="Square",Ke="StaticRegexReplace",Ze="StridedSlice",Ye="StringNGrams",Qe="StringSplit",Je="StringToHashBucketFast",$e="Sub",tn="Tan",en="Tanh",nn="Tile",an="TopK",sn="Transform",rn="Transpose",on="Unique",cn="Unpack",ln="UnsortedSegmentSum",un="ZerosLike",hn="Step",dn="FromPixels",pn="RotateWithOffset",fn="_FusedMatMul",mn="FusedConv2D",gn="FusedDepthwiseConv2D"},8864:(t,e,n)=>{"use strict";n.d(e,{Li:()=>d,pI:()=>c,tr:()=>u,uk:()=>l,wC:()=>h});var a=n(5050),s=n(6581),r=n(7269);const o=(0,s.R)("kernelRegistry",(()=>new Map)),i=(0,s.R)("gradRegistry",(()=>new Map));function c(t,e){const n=p(t,e);return o.get(n)}function l(t){return i.get(t)}function u(t){const e=o.entries(),n=[];for(;;){const{done:a,value:s}=e.next();if(a)break;const[r,o]=s,[i]=r.split("_");i===t&&n.push(o)}return n}function h(t){const{kernelName:e,backendName:n}=t,a=p(e,n);o.has(a)&&r.Z("The kernel '".concat(e,"' for backend ")+"'".concat(n,"' is already registered")),o.set(a,t)}function d(t){const{kernelName:e}=t;i.has(e)&&(0,a.OB)().getBool("DEBUG")&&r.Z("Overriding the gradient for '".concat(e,"'")),i.set(e,t)}function p(t,e){return"".concat(e,"_").concat(t)}},7269:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s,c:()=>r});var a=n(5050);function s(){(0,a.OB)().getBool("IS_TEST")||(0,a.OB)().getBool("PROD")||console.warn(...arguments)}function r(){(0,a.OB)().getBool("IS_TEST")||(0,a.OB)().getBool("PROD")||console.log(...arguments)}},7613:(t,e,n)=>{"use strict";n.d(e,{W:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({abs_:function(t){const e=(0,r._1)(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return a.BV.runKernel(s.yj2,t)}{const t={x:e};return a.BV.runKernel(s.SYM,t)}}})},1719:(t,e,n)=>{"use strict";n.d(e,{K:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({acos_:function(t){const e={x:(0,r._1)(t,"x","acos")};return a.BV.runKernel(s.VGw,e)}})},4502:(t,e,n)=>{"use strict";n.d(e,{_:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({acosh_:function(t){const e={x:(0,r._1)(t,"x","acosh")};return a.BV.runKernel(s.SpW,e)}})},3312:(t,e,n)=>{"use strict";n.d(e,{I:()=>i});var a=n(318),s=n(2145),r=n(9064),o=n(8354);const i=(0,n(8640).op)({add_:function(t,e){let n=(0,o._1)(t,"a","add"),i=(0,o._1)(e,"b","add");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(s.mm_,c)}})},4108:(t,e,n)=>{"use strict";n.d(e,{$:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({all_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,r._1)(t,"x","all","bool")},i={axis:e,keepDims:n};return a.BV.runKernel(s.oT6,o,i)}})},8543:(t,e,n)=>{"use strict";n.d(e,{Y:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({any_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,r._1)(t,"x","any","bool")},i={axis:e,keepDims:n};return a.BV.runKernel(s.IKK,o,i)}})},9995:(t,e,n)=>{"use strict";n.d(e,{N:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({argMax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,r._1)(t,"x","argMax")},o={axis:e};return a.BV.runKernel(s.sJF,n,o)}})},5157:(t,e,n)=>{"use strict";n.d(e,{v:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({argMin_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,r._1)(t,"x","argMin")},o={axis:e};return a.BV.runKernel(s.aJk,n,o)}})},3053:(t,e,n)=>{"use strict";n.d(e,{Z:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({asin_:function(t){const e={x:(0,r._1)(t,"x","asin")};return a.BV.runKernel(s.M2y,e)}})},54:(t,e,n)=>{"use strict";n.d(e,{V:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({asinh_:function(t){const e={x:(0,r._1)(t,"x","asinh")};return a.BV.runKernel(s.qw7,e)}})},4778:(t,e,n)=>{"use strict";n.d(e,{z:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({atan_:function(t){const e={x:(0,r._1)(t,"x","atan")};return a.BV.runKernel(s.jMg,e)}})},2227:(t,e,n)=>{"use strict";n.d(e,{f:()=>i});var a=n(318),s=n(2145),r=n(9064),o=n(8354);const i=(0,n(8640).op)({atan2_:function(t,e){let n=(0,o._1)(t,"a","atan2"),i=(0,o._1)(e,"b","atan2");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(s.QCc,c)}})},7897:(t,e,n)=>{"use strict";n.d(e,{C:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({atanh_:function(t){const e={x:(0,r._1)(t,"x","atanh")};return a.BV.runKernel(s.Oyi,e)}})},9204:(t,e,n)=>{"use strict";n.d(e,{w:()=>h});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(9118),c=n(9151),l=n(8640),u=n(5561);const h=(0,l.op)({avgPool_:function(t,e,n,l,h){const d=(0,r._1)(t,"x","avgPool","float32");o.hu(c.jT(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let p=d,f=!1;3===d.rank&&(f=!0,p=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.hu(4===p.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(p.rank,"."))),c.m("avgPool",l,h);const m={x:p},g={filterSize:e,strides:n,pad:l,dimRoundingMode:h};let y=a.BV.runKernel(s.JhU,m,g);return y=(0,i.p)(y,d.dtype),f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},8473:(t,e,n)=>{"use strict";n.d(e,{LJ:()=>u,Q3:()=>l,Vh:()=>r,YB:()=>s,kz:()=>o,lB:()=>c,rv:()=>i,sY:()=>h});var a=n(6147);function s(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function r(t,e,n){const a=t.length+e.length,s=[];let r=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?s.push(t[r++]):s.push(e[o++]);return s}function o(t,e){const n=[],a=t.length;for(let s=0;s<a;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function i(t,e){return r(t,e.map((t=>1)),e)}function c(t,e,n){a.hu(s(e,n),(()=>"".concat(t," supports only inner-most axes for now. ")+"Got axes ".concat(e," and rank-").concat(n," input.")))}function l(t,e){if(s(t,e))return null;const n=[];for(let a=0;a<e;++a)-1===t.indexOf(a)&&n.push(a);return t.forEach((t=>n.push(t))),n}function u(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function h(t,e){const n=[];for(let a=e-t;a<e;++a)n.push(a);return n}},6994:(t,e,n)=>{"use strict";n.d(e,{E:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(6147);const i=(0,n(8640).op)({batchToSpaceND_:function(t,e,n){const i=(0,r._1)(t,"x","batchToSpaceND"),c=e.reduce(((t,e)=>t*e));o.hu(i.rank>=1+e.length,(()=>"input rank is ".concat(i.rank," but should be > than blockShape.length ").concat(e.length))),o.hu(n.length===e.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(e.length))),o.hu(i.shape[0]%c===0,(()=>"input tensor batch is ".concat(i.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(e.join(" * ")," === ").concat(c)));const l={x:i},u={blockShape:e,crops:n};return a.BV.runKernel(s.zws,l,u)}})},3700:(t,e,n)=>{"use strict";n.d(e,{t:()=>c});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(5561);const c=(0,n(8640).op)({batchNorm_:function(t,e,n,c,l,u){null==u&&(u=.001);const h=(0,r._1)(t,"x","batchNorm"),d=(0,r._1)(e,"mean","batchNorm"),p=(0,r._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,r._1)(l,"scale","batchNorm")),null!=c&&(m=(0,r._1)(c,"offset","batchNorm")),o.hu(d.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.hu(null==m||d.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.hu(null==f||d.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(t){let e;return e=0===t.rank||1===t.rank?(0,i.X)(t,[1,1,1,t.size]):2===t.rank?(0,i.X)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(h),scale:f,offset:m,mean:d,variance:p},y={varianceEpsilon:u},b=a.BV.runKernel(s.sHE,g,y);return(0,i.X)(b,h.shape)}})},9742:(t,e,n)=>{"use strict";n.d(e,{U:()=>u});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(672),c=n(8640),l=n(5561);const u=(0,c.op)({broadcastTo_:function(t,e){let n=(0,r._1)(t,"broadcastTo","x");const c=n.shape;if((0,o.Mu)(e),e.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(e.length," < input.rank=").concat(n.rank,"."));if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=(0,l.X)(n,t)}const u=n.shape,h=Array.from(e);for(let a=e.length-1;a>=0;a--)if(u[a]===e[a])h[a]=1;else if(1!==n.shape[a])throw new Error("broadcastTo(): [".concat(c,"] cannot be broadcast to [").concat(e,"]."));if(0===h.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return(0,i.d)(n);const d={x:n},p={reps:h};return a.BV.runKernel(s.n9L,d,p)}})},5774:(t,e,n)=>{"use strict";function a(t,e){const n=t.length,a=[];for(let s=0;s<n;s++){const r=n-1-s,o=t[r]||1;(e[e.length-1-s]||1)>1&&1===o&&a.unshift(r)}return a}function s(t,e){const n=[];for(let a=0;a<e.length;a++){const s=t[t.length-a-1],r=e.length-a-1,o=e[r];(null==s||1===s&&o>1)&&n.unshift(r)}return n}function r(t,e){const n=Math.max(t.length,e.length),a=new Array(n);for(let s=0;s<n;s++){let r=t[t.length-s-1];null==r&&(r=1);let o=e[e.length-s-1];if(null==o&&(o=1),1===r)a[n-s-1]=o;else if(1===o)a[n-s-1]=r;else{if(r!==o){const n="Operands could not be broadcast together with shapes "+"".concat(t," and ").concat(e,".");throw Error(n)}a[n-s-1]=r}}return a}n.r(e),n.d(e,{assertAndGetBroadcastShape:()=>r,getBroadcastDims:()=>a,getReductionAxes:()=>s})},7039:(t,e,n)=>{"use strict";n.d(e,{f:()=>r});var a=n(4376),s=n(6147);function r(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return e=e||"float32",s.Mu(t),new a.YD(t,e,n)}},9118:(t,e,n)=>{"use strict";n.d(e,{p:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(6147);const i=(0,n(8640).op)({cast_:function(t,e){const n=(0,r._1)(t,"x","cast");if(!o.LP(e))throw new Error("Failed to cast to unknown dtype ".concat(e));if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:e};return a.BV.runKernel(s.RFZ,i,c)}})},1396:(t,e,n)=>{"use strict";n.d(e,{m:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({ceil_:function(t){const e={x:(0,r._1)(t,"x","ceil","float32")};return a.BV.runKernel(s.gJX,e)}})},9836:(t,e,n)=>{"use strict";n.d(e,{i:()=>c});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(8582);const c=(0,n(8640).op)({clipByValue_:function(t,e,n){const c=(0,r._1)(t,"x","clipByValue");if(o.hu(e<=n,(()=>"Error in clip: min (".concat(e,") must be ")+"less than or equal to max (".concat(n,")."))),e===n)return(0,i.h)(c.shape,e,c.dtype);const l={x:c},u={clipValueMin:e,clipValueMax:n};return a.BV.runKernel(s.xnO,l,u)}})},672:(t,e,n)=>{"use strict";n.d(e,{d:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({clone_:function(t){const e={x:(0,r._1)(t,"x","clone","string_or_numeric")};return a.BV.runKernel(s.iJz,e)}})},9253:(t,e,n)=>{"use strict";n.d(e,{P:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(6147);const i=(0,n(8640).op)({complex_:function(t,e){const n=(0,r._1)(t,"real","complex"),i=(0,r._1)(e,"imag","complex");o.k5(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return a.BV.runKernel(s.Zz9,c)}})},4933:(t,e,n)=>{"use strict";n.d(e,{z:()=>c});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(672);const c=(0,n(8640).op)({concat_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,o.hu)(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,r.sI)(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(t.dtype,". "))})),1===n.length)return(0,i.d)(n[0]);const c=n,l={axis:e};return a.BV.runKernel(s.Eh3,c,l)}})},4918:(t,e,n)=>{"use strict";n.d(e,{P:()=>l});var a=n(8354),s=n(6147),r=n(3457),o=n(9151),i=n(8640),c=n(5561);const l=(0,i.op)({conv1d_:function(t,e,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,h=arguments.length>6?arguments[6]:void 0;const d=(0,a._1)(t,"x","conv1d"),p=(0,a._1)(e,"filter","conv1d");let f=d,m=!1;2===d.rank&&(m=!0,f=(0,c.X)(d,[1,d.shape[0],d.shape[1]])),s.hu(3===f.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,"."))),s.hu(3===p.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(p.rank,"."))),o.m("conv1d",i,h),s.hu(f.shape[2]===p.shape[1],(()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(p.shape[1],"."))),s.hu(o.jT(n,u),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(u,"'"))),s.hu(o.U3(u),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),s.hu(o.U3(n),(()=>"Error in conv1D: Stride should be larger than 0.")),s.hu("NWC"===l,(()=>"Error in conv1d: got dataFormat of ".concat(l," but only NWC is currently supported.")));const g=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),y=(0,c.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,u],v=(0,r.T)(y,g,b,i,"NHWC",x,h);return m?(0,c.X)(v,[v.shape[2],v.shape[3]]):(0,c.X)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},3457:(t,e,n)=>{"use strict";n.d(e,{T:()=>u});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(9151),c=n(8640),l=n(5561);const u=(0,c.op)({conv2d_:function(t,e,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6?arguments[6]:void 0;const p=(0,r._1)(t,"x","conv2d","float32"),f=(0,r._1)(e,"filter","conv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.hu(4===m.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(m.rank,"."))),o.hu(4===f.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,"."))),i.m("conv2d",c,d);const y="NHWC"===u?m.shape[3]:m.shape[1];o.hu(y===f.shape[2],(()=>"Error in conv2d: depth of input (".concat(y,") must match ")+"input depth for filter ".concat(f.shape[2],"."))),o.hu(i.jT(n,h),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(h,"'"))),o.hu(i.U3(h),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),o.hu(i.U3(n),(()=>"Error in conv2D: Strides should be larger than 0."));const b={x:m,filter:f},x={strides:n,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d},v=a.BV.runKernel(s.mhS,b,x);return g?(0,l.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},8744:(t,e,n)=>{"use strict";n.d(e,{p:()=>l});var a=n(318),s=n(2145),r=n(6147),o=n(9151),i=n(8640),c=n(5561);const l=(0,i.op)({conv2DBackpropFilter_:function(t,e,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",h=arguments.length>6?arguments[6]:void 0,d=t;3===t.rank&&(d=(0,c.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p=e;3===p.rank&&(p=(0,c.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),r.hu(4===d.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(d.shape,"."))),r.hu(4===p.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(p.shape,"."))),r.hu(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const f="NHWC"===u?d.shape[3]:d.shape[1],m="NHWC"===u?p.shape[3]:p.shape[1];r.hu(f===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(f,") must ")+"match input depth in filter (".concat(n[2],"."))),r.hu(m===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(m,") must ")+"match output depth for filter (".concat(n[3],")."))),o.m("conv2dDerFilter",l,h);const g={x:d,dy:p},y={strides:i,pad:l,dataFormat:u,dimRoundingMode:h,filterShape:n};return a.BV.runKernel(s.wUP,g,y)}})},1045:(t,e,n)=>{"use strict";n.d(e,{_:()=>l});var a=n(318),s=n(2145),r=n(6147),o=n(9151),i=n(8640),c=n(5561);const l=(0,i.op)({conv2DBackpropInput_:function(t,e,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",h=arguments.length>6?arguments[6]:void 0;r.hu(t.length===e.rank,(()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")));let d=t,p=e,f=!1;3===e.rank&&(f=!0,p=(0,c.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),d=[1,t[0],t[1],t[2]]),r.hu(4===d.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(d.length,"."))),r.hu(4===p.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(p.rank))),r.hu(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const m="NHWC"===u?d[3]:d[1],g="NHWC"===u?p.shape[3]:p.shape[1];r.hu(m===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(m,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),r.hu(g===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(g,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),o.m("conv2dDerInput",l,h);const y={dy:p,filter:n},b={strides:i,pad:l,dataFormat:u,dimRoundingMode:h,inputShape:d},x=a.BV.runKernel(s.wm,y,b);return f?(0,c.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},1732:(t,e,n)=>{"use strict";n.d(e,{b:()=>r});var a=n(8354),s=n(1045);const r=(0,n(8640).op)({conv2dTranspose_:function(t,e,n,r,o,i){const c=(0,a._1)(t,"x","conv2dTranspose"),l=(0,a._1)(e,"filter","conv2dTranspose");return(0,s._)(n,c,l,r,o,"NHWC",i)}})},1873:(t,e,n)=>{"use strict";n.d(e,{_:()=>c});var a=n(318),s=n(2145),r=n(6147),o=n(8640),i=n(5561);const c=(0,o.op)({conv3DBackpropInput_:function(t,e,n,o,c){r.hu(t.length===e.rank,(()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")));let l=t,u=e,h=!1;4===e.rank&&(h=!0,u=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),l=[1,t[0],t[1],t[2],t[3]]);const d=l[4],p=u.shape[4];r.hu(5===l.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(l.length,"."))),r.hu(5===u.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(u.rank))),r.hu(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),r.hu(d===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(d,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),r.hu(p===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(p,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const f={dy:u,filter:n},m={pad:c,strides:o,inputShape:l},g=a.BV.runKernel(s.ik2,f,m);return h?(0,i.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},9151:(t,e,n)=>{"use strict";n.d(e,{I0:()=>f,Ix:()=>i,Rf:()=>s,U3:()=>g,Xw:()=>r,aO:()=>l,jT:()=>m,jw:()=>c,m:()=>b,pl:()=>o,sl:()=>y});var a=n(6147);function s(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",r=arguments.length>5?arguments[5]:void 0;return i(t,[...e,t[3]],n,r,a,null,null,y(s))}function r(t,e,n,a,s,r){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,l]=u(e);let h;if("channelsLast"===o)h=[c,l,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));h=[c,l,t[1],t[1]]}return i(t,h,n,a,s,r,!1,o)}function o(t,e,n,a,s,r){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,l,u]=h(e);let d,p;if("NDHWC"===o)p="channelsLast",d=[i,l,u,t[4],t[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));p="channelsFirst",d=[i,l,u,t[1],t[1]]}return c(t,d,n,a,s,!1,p,r)}function i(t,e,n,a,s,r){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,h,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[c,h,f,m]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,m,h,f]=t}const[g,y,,b]=e,[x,v]=u(n),[w,k]=u(a),I=d(g,w),S=d(y,k),{padInfo:N,outHeight:T,outWidth:C}=function(t,e,n,a,s,r,o,i,c){let u,h,d;if("number"===typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,a,s){null==a&&(a=l(t,e,n));const r=t[0],o=t[1],i=p((r-e+2*a)/n+1,s),c=p((o-e+2*a)/n+1,s);return[i,c]}([e,n],r,a,t,i);h=s[0],d=s[1]}else if("same"===t){h=Math.ceil(e/a),d=Math.ceil(n/s);const t=Math.max(0,(h-1)*a+r-e),i=Math.max(0,(d-1)*s+o-n),c=Math.floor(t/2),l=t-c,p=Math.floor(i/2);u={top:c,bottom:l,left:p,right:i-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-r+1)/a),d=Math.ceil((n-o+1)/s);else{if("object"!==typeof t)throw Error("Unknown padding parameter: ".concat(t));{const l="channelsLast"===c?t[1][0]:t[2][0],f="channelsLast"===c?t[1][1]:t[2][1],m="channelsLast"===c?t[2][0]:t[3][0],g="channelsLast"===c?t[2][1]:t[3][1];u={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=p((e-r+l+f)/a+1,i),d=p((n-o+m+g)/s+1,i)}}return{padInfo:u,outHeight:h,outWidth:d}}(s,h,f,x,v,I,S,r,i),E=o?b*m:b;let _;return"channelsFirst"===i?_=[c,E,T,C]:"channelsLast"===i&&(_=[c,T,C,E]),{batchSize:c,dataFormat:i,inHeight:h,inWidth:f,inChannels:m,outHeight:T,outWidth:C,outChannels:E,padInfo:N,strideHeight:x,strideWidth:v,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationHeight:w,dilationWidth:k,inShape:t,outShape:_,filterShape:e}}function c(t,e,n,a,s){let r=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,u,f,m,g]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,g,u,f,m]=t}const[y,b,x,,v]=e,[w,k,I]=h(n),[S,N,T]=h(a),C=d(y,S),E=d(b,N),_=d(x,T),{padInfo:A,outDepth:D,outHeight:R,outWidth:O}=function(t,e,n,a,s,r,o,i,c,u,h){let d,f,m,g;"valid"===t&&(t=0);if("number"===typeof t){d={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const y=function(t,e,n,a,s,r){null==s&&(s=l(t,e[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)t[i]+2*s>=e[i]&&(o[i]=p((t[i]-e[i]+2*s)/a[i]+1,r));return o}([e,n,a,1],[i,c,u],1,[s,r,o],t,h);f=y[0],m=y[1],g=y[2]}else{if("same"!==t)throw Error("Unknown padding parameter: ".concat(t));{f=Math.ceil(e/s),m=Math.ceil(n/r),g=Math.ceil(a/o);const t=(f-1)*s+i-e,l=(m-1)*r+c-n,h=(g-1)*o+u-a,p=Math.floor(t/2),y=t-p,b=Math.floor(l/2),x=l-b,v=Math.floor(h/2);d={top:b,bottom:x,left:v,right:h-v,front:p,back:y,type:"SAME"}}}return{padInfo:d,outDepth:f,outHeight:m,outWidth:g}}(s,u,f,m,w,k,I,C,E,_,i),F=r?v*g:v;let M;return"channelsFirst"===o?M=[c,F,D,R,O]:"channelsLast"===o&&(M=[c,D,R,O,F]),{batchSize:c,dataFormat:o,inDepth:u,inHeight:f,inWidth:m,inChannels:g,outDepth:D,outHeight:R,outWidth:O,outChannels:F,padInfo:A,strideDepth:w,strideHeight:k,strideWidth:I,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:_,dilationDepth:S,dilationHeight:N,dilationWidth:T,inShape:t,outShape:M,filterShape:e}}function l(t,e,n){const a=d(e,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((t[0]*(n-1)-n+a)/2)}function u(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function h(t){return"number"===typeof t?[t,t,t]:t}function d(t,e){return e<=1?t:t+(t-1)*(e-1)}function p(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode ".concat(e))}}function f(t){const[e,n,a]=u(t);return 1===e&&1===n&&1===a}function m(t,e){return f(t)||f(e)}function g(t){return u(t).every((t=>t>0))}function y(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(t))}function b(t,e,n){if(null!=n){if("string"===typeof e)throw Error("Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,"."));if("number"===typeof e)a.hu(a.GN(e),(()=>"Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,".")));else{if("object"!==typeof e)throw Error("Error in ".concat(t,": Unknown padding parameter: ").concat(e));e.forEach((e=>{e.forEach((e=>{a.hu(a.GN(e),(()=>"Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,".")))}))}))}}}},1227:(t,e,n)=>{"use strict";n.d(e,{m:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({cos_:function(t){const e={x:(0,r._1)(t,"x","cos","float32")};return a.BV.runKernel(s.mc4,e)}})},6679:(t,e,n)=>{"use strict";n.d(e,{f:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({cosh_:function(t){const e={x:(0,r._1)(t,"x","cosh","float32")};return a.BV.runKernel(s.TR1,e)}})},9457:(t,e,n)=>{"use strict";n.d(e,{$:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({cumprod_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,r._1)(t,"x","cumprod")},c={axis:e,exclusive:n,reverse:o};return a.BV.runKernel(s.Byc,i,c)}})},8862:(t,e,n)=>{"use strict";n.d(e,{z:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({cumsum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,r._1)(t,"x","cumsum")},c={axis:e,exclusive:n,reverse:o};return a.BV.runKernel(s.iHb,i,c)}})},1878:(t,e,n)=>{"use strict";n.d(e,{n:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(6147);const i=(0,n(8640).op)({depthToSpace_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const i=(0,r._1)(t,"x","depthToSpace","float32"),c="NHWC"===n?i.shape[1]:i.shape[2],l="NHWC"===n?i.shape[2]:i.shape[3],u="NHWC"===n?i.shape[3]:i.shape[1];o.hu(e>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(e))),o.hu(c*e>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(e,"  for depthToSpace with input shape\n    ").concat(i.shape))),o.hu(l*e>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(l," and ").concat(e," for depthToSpace with input shape\n        ").concat(i.shape))),o.hu(u%(e*e)===0,(()=>"Dimension size must be evenly divisible by ".concat(e*e," but is ").concat(u," for depthToSpace with input shape ").concat(i.shape)));const h={x:i},d={blockSize:e,dataFormat:n};return a.BV.runKernel(s.T0n,h,d)}})},1147:(t,e,n)=>{"use strict";n.d(e,{B:()=>u});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(9151),c=n(8640),l=n(5561);const u=(0,c.op)({depthwiseConv2d_:function(t,e,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6?arguments[6]:void 0;const p=(0,r._1)(t,"x","depthwiseConv2d","float32"),f=(0,r._1)(e,"filter","depthwiseConv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.hu(4===m.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,"."))),o.hu(4===f.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")));const y="NHWC"===u?m.shape[3]:m.shape[1];o.hu(y===f.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(y,") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],"."))),i.m("depthwiseConv2d",c,d);const b={x:m,filter:f},x={strides:n,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d},v=a.BV.runKernel(s.cie,b,x);return g?(0,l.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},288:(t,e,n)=>{"use strict";n.d(e,{z:()=>i});var a=n(318),s=n(2145),r=n(8640),o=n(5561);const i=(0,r.op)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=t;3===t.rank&&(u=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let h=e;3===h.rank&&(h=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={x:u,dy:h},p={strides:r,pad:i,dimRoundingMode:l,dilations:c,filterShape:n};return a.BV.runKernel(s.sL$,d,p)}})},6939:(t,e,n)=>{"use strict";n.d(e,{v:()=>i});var a=n(318),s=n(2145),r=n(8640),o=n(5561);const i=(0,r.op)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=e,h=!1;3===e.rank&&(h=!0,u=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={dy:u,filter:n},p={strides:r,pad:i,dimRoundingMode:l,dilations:c,inputShape:t},f=a.BV.runKernel(s.y7R,d,p);return h?(0,o.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},7580:(t,e,n)=>{"use strict";n.d(e,{W:()=>l});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(8640),c=n(5561);const l=(0,i.op)({dilation2d_:function(t,e,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const h=(0,r._1)(t,"x","dilation2d"),d=(0,r._1)(e,"filter","dilation2d");o.hu(3===h.rank||4===h.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(h.rank,"."))),o.hu(3===d.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(d.rank,"."))),o.hu("NHWC"===u,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(u)));let p=h,f=!1;3===h.rank&&(p=(0,c.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),f=!0),o.hu(p.shape[3]===d.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(p.shape[3]," vs ").concat(d.shape[2])));const m={x:p,filter:d},g={strides:n,pad:i,dilations:l},y=a.BV.runKernel(s.p4S,m,g);return f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},5750:(t,e,n)=>{"use strict";n.d(e,{h:()=>c});var a=n(318),s=n(2145),r=n(9064),o=n(8354),i=n(7145);const c=(0,n(8640).op)({div_:function(t,e){let n=(0,o._1)(t,"a","div"),c=(0,o._1)(e,"b","div");if([n,c]=(0,r.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return(0,i.q)(n,c);const l={a:n,b:c};return a.BV.runKernel(s.oHH,l,{})}})},5923:(t,e,n)=>{"use strict";n.d(e,{N:()=>u});var a=n(9064),s=n(8354),r=n(5750),o=n(3254),i=n(8640),c=n(329),l=n(7293);const u=(0,i.op)({divNoNan_:function(t,e){let n=(0,s._1)(t,"a","div"),i=(0,s._1)(e,"b","div");[n,i]=(0,a.makeTypesMatch)(n,i);const u=(0,r.h)(n,i),h=(0,l.P)(u),d=(0,o.D)(i,h);return(0,c.a)(d,h,u)}})},5043:(t,e,n)=>{"use strict";n.d(e,{A:()=>c});var a=n(8354),s=n(6147),r=n(7221),o=n(8640),i=n(5561);const c=(0,o.op)({dot_:function(t,e){const n=(0,a._1)(t,"t1","dot"),o=(0,a._1)(e,"t2","dot");s.hu((1===n.rank||2===n.rank)&&(1===o.rank||2===o.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(o.rank,".")));const c=1===n.rank?n.size:n.shape[1],l=1===o.rank?o.size:o.shape[0];if(s.hu(c===l,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(c," and ").concat(l,"."))),1===n.rank&&1===o.rank){const t=(0,i.X)(n,[1,-1]),e=(0,i.X)(o,[-1,1]),a=(0,r.O)(t,e);return(0,i.X)(a,[])}if(1===n.rank&&2===o.rank){const t=(0,i.X)(n,[1,-1]),e=(0,i.X)(o,[o.shape[0],o.shape[1]]),a=(0,r.O)(t,e);return(0,i.X)(a,[a.size])}if(2===n.rank&&1===o.rank){const t=(0,i.X)(o,[-1,1]),e=(0,r.O)(n,t);return(0,i.X)(e,[e.size])}{const t=(0,i.X)(o,[o.shape[0],o.shape[1]]);return(0,r.O)(n,t)}}})},2353:(t,e,n)=>{"use strict";n.d(e,{p:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({elu_:function(t){const e={x:(0,r._1)(t,"x","elu","float32")};return a.BV.runKernel(s.SX0,e)}})},3254:(t,e,n)=>{"use strict";n.d(e,{D:()=>c});var a=n(318),s=n(2145),r=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({equal_:function(t,e){let n=(0,o._1)(t,"a","equal","string_or_numeric"),c=(0,o._1)(e,"b","equal","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(s.hdR,l)}})},3891:(t,e,n)=>{"use strict";n.d(e,{q:()=>c});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(9118);const c=(0,n(8640).op)({erf_:function(t){let e=(0,r._1)(t,"x","erf");o.hu("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=(0,i.p)(e,"float32"));const n={x:e};return a.BV.runKernel(s.Omj,n)}})},3313:(t,e,n)=>{"use strict";n.d(e,{d:()=>s});var a=n(6662);const s=(0,n(8640).op)({euclideanNorm_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,a.K)(t,"euclidean",e,n)}})},411:(t,e,n)=>{"use strict";n.d(e,{Q:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({exp_:function(t){const e={x:(0,r._1)(t,"x","exp")};return a.BV.runKernel(s.NEP,e)}})},2975:(t,e,n)=>{"use strict";n.d(e,{d:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(6147);const i=(0,n(8640).op)({expandDims_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,r._1)(t,"x","expandDims","string_or_numeric");o.hu(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},c={dim:e};return a.BV.runKernel(s.YFo,i,c)}})},8865:(t,e,n)=>{"use strict";n.d(e,{t:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({expm1_:function(t){const e={x:(0,r._1)(t,"x","expm1")};return a.BV.runKernel(s.Y0y,e)}})},8582:(t,e,n)=>{"use strict";n.d(e,{h:()=>o});var a=n(318),s=n(2145),r=n(6147);function o(t,e,n){(0,r.Mu)(t);const o={shape:t,value:e,dtype:n=n||(0,r.D2)(e)};return a.BV.runKernel(s.deh,{},o)}},2628:(t,e,n)=>{"use strict";n.d(e,{G:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({floor_:function(t){const e={x:(0,r._1)(t,"x","floor","float32")};return a.BV.runKernel(s.OR,e)}})},7145:(t,e,n)=>{"use strict";n.d(e,{q:()=>i});var a=n(318),s=n(2145),r=n(9064),o=n(8354);const i=(0,n(8640).op)({floorDiv_:function(t,e){let n=(0,o._1)(t,"a","floorDiv"),i=(0,o._1)(e,"b","floorDiv");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(s.jeX,c)}})},5171:(t,e,n)=>{"use strict";n.d(e,{Fr:()=>f,QH:()=>g,pf:()=>m,uy:()=>y});var a=n(5774),s=n(2353),r=n(9546),o=n(651),i=n(6859),c=n(7539),l=n(5900),u=n(5561),h=n(7643),d=n(4031),p=n(227);function f(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return(0,o.d)(t,(0,d.N)(e));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function m(t,e){let n=e;const s=a.getReductionAxes(t.shape,e.shape);return s.length>0&&(n=(0,p.S)(n,s)),(0,u.X)(n,t.shape)}function g(t,e,n,a){if("linear"===e)return t;if("relu"===e)return(0,c.U)(t);if("elu"===e)return(0,s.p)(t);if("relu6"===e)return(0,l.b)(t);if("prelu"===e)return(0,i.A)(t,n);if("leakyrelu"===e)return(0,r.h)(t,a);if("sigmoid"===e)return(0,h.X)(t);throw new Error("Unknown fused activation ".concat(e,"."))}const y=(t,e)=>!(t>0)||"linear"===e},9498:(t,e,n)=>{"use strict";n.d(e,{I:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({gather_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i={x:(0,r._1)(t,"x","gather"),indices:(0,r._1)(e,"indices","gather","int32")},c={axis:n,batchDims:o};return a.BV.runKernel(s.qi_,i,c)}})},5014:(t,e,n)=>{"use strict";n.d(e,{p:()=>c});var a=n(318),s=n(2145),r=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({greater_:function(t,e){let n=(0,o._1)(t,"a","greater","string_or_numeric"),c=(0,o._1)(e,"b","greater","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(s.iZT,l)}})},8327:(t,e,n)=>{"use strict";n.d(e,{b:()=>c});var a=n(318),s=n(2145),r=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({greaterEqual_:function(t,e){let n=(0,o._1)(t,"a","greaterEqual","string_or_numeric"),c=(0,o._1)(e,"b","greaterEqual","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(s.Acj,l)}})},6996:(t,e,n)=>{"use strict";n.d(e,{a:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({imag_:function(t){const e={input:(0,r._1)(t,"input","imag")};return a.BV.runKernel(s.J_u,e)}})},464:(t,e,n)=>{"use strict";n.d(e,{I:()=>l});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(8640),c=n(5561);const l=(0,i.op)({resizeBilinear_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,r._1)(t,"images","resizeBilinear");o.hu(3===l.rank||4===l.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),o.hu(2===e.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(e,"."))),o.hu(!1===i||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let u=l,h=!1;3===l.rank&&(h=!0,u=(0,c.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=e,d={images:u},p={alignCorners:n,halfPixelCenters:i,size:e},f=a.BV.runKernel(s._Yw,d,p);return h?(0,c.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},8600:(t,e,n)=>{"use strict";n.d(e,{j:()=>l});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(8640),c=n(5561);const l=(0,i.op)({resizeNearestNeighbor_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,r._1)(t,"images","resizeNearestNeighbor");o.hu(3===l.rank||4===l.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),o.hu(2===e.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(e,"."))),o.hu("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o.hu(!1===i||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let u=l,h=!1;3===l.rank&&(h=!0,u=(0,c.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=e,d={images:u},p={alignCorners:n,halfPixelCenters:i,size:e},f=a.BV.runKernel(s.dpD,d,p);return h?(0,c.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},300:(t,e,n)=>{"use strict";n.d(e,{x:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({isFinite_:function(t){const e={x:(0,r._1)(t,"x","isFinite")};return a.BV.runKernel(s.avt,e)}})},4652:(t,e,n)=>{"use strict";n.d(e,{U:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({isInf_:function(t){const e={x:(0,r._1)(t,"x","isInf")};return a.BV.runKernel(s.iWB,e)}})},7005:(t,e,n)=>{"use strict";n.d(e,{i:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({isNaN_:function(t){const e={x:(0,r._1)(t,"x","isNaN")};return a.BV.runKernel(s.r7n,e)}})},9546:(t,e,n)=>{"use strict";n.d(e,{h:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({leakyRelu_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:(0,r._1)(t,"x","leakyRelu")},o={alpha:e};return a.BV.runKernel(s.J$2,n,o)}})},4920:(t,e,n)=>{"use strict";n.d(e,{d:()=>c});var a=n(318),s=n(2145),r=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({less_:function(t,e){let n=(0,o._1)(t,"a","less","string_or_numeric"),c=(0,o._1)(e,"b","less","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(s.vtC,l)}})},2642:(t,e,n)=>{"use strict";n.d(e,{z:()=>c});var a=n(318),s=n(2145),r=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({lessEqual_:function(t,e){let n=(0,o._1)(t,"a","lessEqual","string_or_numeric"),c=(0,o._1)(e,"b","lessEqual","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(s.CAk,l)}})},936:(t,e,n)=>{"use strict";n.d(e,{G:()=>l});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(8640),c=n(5561);const l=(0,i.op)({localResponseNormalization_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const u=(0,r._1)(t,"x","localResponseNormalization");o.hu(4===u.rank||3===u.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(u.rank,"."))),o.hu(o.GN(e),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(e,".")));let h=u,d=!1;3===u.rank&&(d=!0,h=(0,c.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const p={x:h},f={depthRadius:e,bias:n,alpha:i,beta:l},m=a.BV.runKernel(s.eZ0,p,f);return d?(0,c.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},378:(t,e,n)=>{"use strict";n.d(e,{c:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({log_:function(t){const e={x:(0,r._1)(t,"x","log","float32")};return a.BV.runKernel(s.ZbH,e)}})},5341:(t,e,n)=>{"use strict";n.d(e,{K:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({log1p_:function(t){const e={x:(0,r._1)(t,"x","log1p")};return a.BV.runKernel(s.kU,e)}})},5113:(t,e,n)=>{"use strict";n.d(e,{e:()=>u});var a=n(6450),s=n(8354),r=n(651),o=n(4362),i=n(8640),c=n(7643),l=n(4626);const u=(0,i.op)({logSigmoid_:function(t){const e=(0,s._1)(t,"x","logSigmoid");return(0,a.cb)((t=>({value:(0,o.W)((0,l.W)((0,o.W)(t))),gradFunc:e=>(0,r.d)(e,(0,c.X)((0,o.W)(t)))})))(e)}})},4561:(t,e,n)=>{"use strict";n.d(e,{C:()=>p});var a=n(6450),s=n(8354),r=n(9118),o=n(411),i=n(378),c=n(6176),l=n(651),u=n(8640),h=n(4774),d=n(227);const p=(0,u.op)({logSoftmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,s._1)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(e));return(0,a.cb)(((t,n)=>{const a=(0,c.F)(t,e,!0),s=(0,h.l)(t,a),u=(0,h.l)((0,r.p)(s,"float32"),(0,i.c)((0,d.S)((0,o.Q)(s),e,!0)));n([u]);return{value:u,gradFunc:(t,n)=>{const[a]=n,s=(0,o.Q)(a);return(0,h.l)(t,(0,l.d)((0,d.S)(t,e,!0),s))}}}))(n)}})},5530:(t,e,n)=>{"use strict";n.d(e,{l:()=>f});var a=n(8354),s=n(6147),r=n(3312),o=n(8473),i=n(411),c=n(378),l=n(6176),u=n(8640),h=n(5561),d=n(4774),p=n(227);const f=(0,u.op)({logSumExp_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const u=(0,a._1)(t,"x","logSumExp"),f=(0,s.EC)(e,u.shape),m=(0,l.F)(u,f,!0),g=(0,d.l)(u,m),y=(0,i.Q)(g),b=(0,p.S)(y,f),x=(0,c.c)(b),v=(0,r.I)((0,h.X)(m,x.shape),x);if(n){const t=(0,o.rv)(v.shape,f);return(0,h.X)(v,t)}return v}})},2177:(t,e,n)=>{"use strict";n.d(e,{H:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(5774);const i=(0,n(8640).op)({logicalAnd_:function(t,e){const n=(0,r._1)(t,"a","logicalAnd","bool"),i=(0,r._1)(e,"b","logicalAnd","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.BV.runKernel(s.PYm,c)}})},875:(t,e,n)=>{"use strict";n.d(e,{h:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({logicalNot_:function(t){const e={x:(0,r._1)(t,"x","logicalNot","bool")};return a.BV.runKernel(s.VfG,e)}})},5117:(t,e,n)=>{"use strict";n.d(e,{K:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(5774);const i=(0,n(8640).op)({logicalOr_:function(t,e){const n=(0,r._1)(t,"a","logicalOr","bool"),i=(0,r._1)(e,"b","logicalOr","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.BV.runKernel(s.MZg,c)}})},1712:(t,e,n)=>{"use strict";n.d(e,{e:()=>c});var a=n(8354),s=n(5774),r=n(2177),o=n(875),i=n(5117);const c=(0,n(8640).op)({logicalXor_:function(t,e){const n=(0,a._1)(t,"a","logicalXor","bool"),c=(0,a._1)(e,"b","logicalXor","bool");return(0,s.assertAndGetBroadcastShape)(n.shape,c.shape),(0,r.H)((0,i.K)(t,e),(0,o.h)((0,r.H)(t,e)))}})},7221:(t,e,n)=>{"use strict";n.d(e,{O:()=>i});var a=n(318),s=n(2145),r=n(9064),o=n(8354);const i=(0,n(8640).op)({matMul_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=(0,o._1)(t,"a","matMul"),l=(0,o._1)(e,"b","matMul");[c,l]=(0,r.makeTypesMatch)(c,l);const u={a:c,b:l},h={transposeA:n,transposeB:i};return a.BV.runKernel(s.XLW,u,h)}})},6176:(t,e,n)=>{"use strict";n.d(e,{F:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({max_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,r._1)(t,"x","max")},i={reductionIndices:e,keepDims:n};return a.BV.runKernel(s.YoZ,o,i)}})},5777:(t,e,n)=>{"use strict";n.d(e,{_:()=>u});var a=n(318),s=n(2145),r=n(8354),o=n(6147),i=n(9151),c=n(8640),l=n(5561);const u=(0,c.op)({maxPool_:function(t,e,n,c,u){const h=(0,r._1)(t,"x","maxPool");let d=h,p=!1;3===h.rank&&(p=!0,d=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.hu(4===d.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(d.rank,"."))),o.hu(i.jT(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),i.m("maxPool",c,u);const f={x:d},m={filterSize:e,strides:n,pad:c,dimRoundingMode:u},g=a.BV.runKernel(s.mTV,f,m);return p?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},705:(t,e,n)=>{"use strict";n.d(e,{g:()=>l});var a=n(318),s=n(2145),r=n(9064),o=n(8354),i=n(5774),c=n(9118);const l=(0,n(8640).op)({maximum_:function(t,e){let n=(0,o._1)(t,"a","maximum"),l=(0,o._1)(e,"b","maximum");[n,l]=(0,r.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.p)(n,"int32"),l=(0,c.p)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.BV.runKernel(s.BMI,u)}})},6568:(t,e,n)=>{"use strict";n.d(e,{J:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({mean_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,r._1)(t,"x","mean")},i={axis:e,keepDims:n};return a.BV.runKernel(s.q2K,o,i)}})},7891:(t,e,n)=>{"use strict";n.d(e,{V:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({min_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,r._1)(t,"x","min")},i={axis:e,keepDims:n};return a.BV.runKernel(s.c17,o,i)}})},2273:(t,e,n)=>{"use strict";n.d(e,{L:()=>l});var a=n(318),s=n(2145),r=n(9064),o=n(8354),i=n(5774),c=n(9118);const l=(0,n(8640).op)({minimum_:function(t,e){let n=(0,o._1)(t,"a","minimum"),l=(0,o._1)(e,"b","minimum");[n,l]=(0,r.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.p)(n,"int32"),l=(0,c.p)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.BV.runKernel(s.q8u,u)}})},9719:(t,e,n)=>{"use strict";n.d(e,{V:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(6147);const i=(0,n(8640).op)({mirrorPad_:function(t,e,n){o.hu("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const i=(0,r._1)(t,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.hu(e.length===i.rank,(()=>"Padding doesn't match input. Must be ".concat(i.rank,". ")+"Got ".concat(e.length,".")));const c="reflect"===n?1:0;for(let a=0;a<i.rank;a++)o.hu(2===e[a].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),o.hu(e[a][0]>=0&&e[a][0]<=i.shape[a]-c&&e[a][1]>=0&&e[a][1]<=i.shape[a]-c,(()=>"Padding in dimension ".concat(a," cannot be greater than or equal ")+"to ".concat(i.shape[a]-c," or less than 0 for input of ")+"shape ".concat(i.shape)));const l={paddings:e,mode:n},u={x:i};return a.BV.runKernel(s.jQs,u,l)}})},4645:(t,e,n)=>{"use strict";n.d(e,{w:()=>i});var a=n(318),s=n(2145),r=n(9064),o=n(8354);const i=(0,n(8640).op)({mod_:function(t,e){let n=(0,o._1)(t,"a","mod"),i=(0,o._1)(e,"b","mod");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(s.Vbg,c)}})},651:(t,e,n)=>{"use strict";n.d(e,{d:()=>i});var a=n(318),s=n(2145),r=n(9064),o=n(8354);const i=(0,n(8640).op)({mul_:function(t,e){let n=(0,o._1)(t,"a","mul"),i=(0,o._1)(e,"b","mul");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(s.wYn,c)}})},4362:(t,e,n)=>{"use strict";n.d(e,{W:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({neg_:function(t){const e={x:(0,r._1)(t,"x","neg")};return a.BV.runKernel(s.kuV,e)}})},6662:(t,e,n)=>{"use strict";n.d(e,{K:()=>y});var a=n(8354),s=n(6147),r=n(7613),o=n(8473),i=n(6176),c=n(7891),l=n(8640),u=n(4334),h=n(5561),d=n(7067),p=n(6902),f=n(7391),m=n(227);function g(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===t.rank)return(0,r.W)(t);if(1!==t.rank&&null===n)return g((0,h.X)(t,[-1]),e,n);if(1===t.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===e)return(0,m.S)((0,r.W)(t),n);if(e===1/0)return(0,i.F)((0,r.W)(t),n);if(e===-1/0)return(0,c.V)((0,r.W)(t),n);if("euclidean"===e||2===e)return(0,p._)((0,m.S)((0,u.s)((0,r.W)(t),(0,d.i)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}if(Array.isArray(n)&&2===n.length){if(1===e)return(0,i.F)((0,m.S)((0,r.W)(t),n[0]),n[1]-1);if(e===1/0)return(0,i.F)((0,m.S)((0,r.W)(t),n[1]),n[0]);if(e===-1/0)return(0,c.V)((0,m.S)((0,r.W)(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return(0,p._)((0,m.S)((0,f.h)(t),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}throw new Error("Error in norm: invalid axis: ".concat(n))}const y=(0,l.op)({norm_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=g(t=(0,a._1)(t,"x","norm"),e,n);let c=i.shape;if(r){const e=(0,s.EC)(n,t.shape);c=o.rv(i.shape,e)}return(0,h.X)(i,c)}})},5549:(t,e,n)=>{"use strict";n.d(e,{Q:()=>c});var a=n(318),s=n(2145),r=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({notEqual_:function(t,e){let n=(0,o._1)(t,"a","notEqual","string_or_numeric"),c=(0,o._1)(e,"b","notEqual","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(s.yQU,l)}})},4326:(t,e,n)=>{"use strict";n.d(e,{l:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({oneHot_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(e));const c={indices:(0,r._1)(t,"indices","oneHot","int32")},l={dtype:i,depth:e,onValue:n,offValue:o};return a.BV.runKernel(s.we_,c,l)}})},6100:(t,e,n)=>{"use strict";n.d(e,{i:()=>i});var a=n(318),s=n(6147),r=n(9253),o=n(7742);function i(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,s.Mu)(t),"complex64"===e){const e=i(t,"float32"),n=(0,o.l)(t,"float32");return(0,r.P)(e,n)}const n=(0,s.p8)((0,s.NA)(t),e);return a.BV.makeTensor(n,t,e)}},773:(t,e,n)=>{"use strict";n.d(e,{J:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({onesLike_:function(t){const e={x:(0,r._1)(t,"x","onesLike")};return a.BV.runKernel(s.qWM,e)}})},8640:(t,e,n)=>{"use strict";n.d(e,{op:()=>o,z:()=>r});var a=n(318),s=n(6147);const r="__op";function o(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(e.length," keys."));let n=e[0];const o=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=r;const i=function(){a.BV.startScope(n);try{const t=o(...arguments);return(0,s.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),a.BV.endScope(t),t}catch(t){throw a.BV.endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},4176:(t,e,n)=>{"use strict";n.d(e,{zvA:()=>d.z,WnP:()=>s.W,Khb:()=>r.K,__u:()=>o._,IHx:()=>i.I,QBD:()=>p,$6P:()=>f.$,YjB:()=>m.Y,NqF:()=>g.N,vHJ:()=>y.v,ZRM:()=>b.Z,VfV:()=>x.V,z4N:()=>v.z,fvJ:()=>w.f,C80:()=>k.C,wS1:()=>I.w,uR5:()=>C,zEQ:()=>F,tgs:()=>B.t,Dxk:()=>L,JY5:()=>z,p3b:()=>U,E4h:()=>M.E,yE8:()=>P,ycw:()=>V,anm:()=>na,XsQ:()=>W,UFq:()=>G.U,f3b:()=>H.f,pju:()=>S.p,mDi:()=>j.m,iUl:()=>X.i,d9v:()=>q.d,PYB:()=>K.P,zoF:()=>E.z,gME:()=>Z,Izb:()=>Y,MNy:()=>Q,ZaL:()=>J,PAt:()=>$.P,Tek:()=>tt.T,bc:()=>et.b,pdZ:()=>nt,$QV:()=>st,mCk:()=>rt.m,f9Y:()=>ot.f,mew:()=>da,$Gn:()=>it.$,zbp:()=>ct.z,ppE:()=>lt,nTT:()=>ut.n,B10:()=>ht.B,Ka3:()=>dt,WmZ:()=>pt.W,hiC:()=>ft.h,NTj:()=>mt.N,AKD:()=>gt.A,rvX:()=>ua,WYO:()=>yt,pyx:()=>bt.p,GRh:()=>ha,EDe:()=>xt,DgJ:()=>vt.D,qNN:()=>wt.q,d2q:()=>kt.d,Qqt:()=>It.Q,dt4:()=>St.d,t$B:()=>Nt.t,iyy:()=>Ct,kp_:()=>wn.k,hlL:()=>Et.h,GWj:()=>_t.G,qPi:()=>At.q,imm:()=>a,Iqj:()=>Dt.I,dbB:()=>la,pjt:()=>Rt.p,brS:()=>Ot.b,Sxn:()=>kn.S,asL:()=>Ft.a,BHj:()=>gs,V3u:()=>pa,wx0:()=>In.w,xVT:()=>Mt.x,UWc:()=>Bt.U,i2d:()=>Lt.i,hi7:()=>zt.h,d9m:()=>Ut.d,zN1:()=>Pt.z,$r2:()=>ys,SX3:()=>Vt,G9k:()=>Wt.G,cM7:()=>Gt.c,Krr:()=>Ht.K,e_t:()=>jt.e,CmS:()=>Xt.C,l_t:()=>qt.l,HvI:()=>Kt.H,hJK:()=>Zt.h,K5V:()=>Yt.K,egP:()=>Qt.e,MB5:()=>bs,eab:()=>te,OI3:()=>_.O,Fp7:()=>ee.F,_sB:()=>ne._,YQQ:()=>ae,Ip$:()=>se,gWQ:()=>re.g,J69:()=>oe.J,ry_:()=>le,VV$:()=>ue.V,LTh:()=>he.L,VdP:()=>de.V,wQq:()=>pe.w,Gi7:()=>ye,p_:()=>oa,dC7:()=>A.d,rq4:()=>be,SJ_:()=>xe,W76:()=>ve.W,KOy:()=>sa.K,Quu:()=>we.Q,lfX:()=>ke.l,iUs:()=>ie.i,JpU:()=>Ie.J,op:()=>d.op,N2O:()=>Se,vku:()=>Ne.v,pNR:()=>Te,koy:()=>Ce,t1L:()=>Ee,lGY:()=>_e,d_R:()=>Ae.d,sQ3:()=>De.s,AL3:()=>Re.A,S0v:()=>Oe.S,WVs:()=>Fe.W,$gW:()=>Me,VT$:()=>Be,N89:()=>Le,TN_:()=>ze,wzB:()=>Ge,nGf:()=>He,ruB:()=>je,LGj:()=>Xe,pe5:()=>qe,w6H:()=>Ke,kwC:()=>Ze.k,M25:()=>Ye.M,UYe:()=>Qe.U,btT:()=>Je.b,XLQ:()=>T.X,GYS:()=>$e.G,SDf:()=>tn,diP:()=>en,sx7:()=>nn,mG2:()=>an,QEs:()=>Sn.Q,NMM:()=>sn.N,bp0:()=>rn.b,iD$:()=>on.i,snQ:()=>ia,zcT:()=>$t,U8D:()=>cn.U,U_I:()=>ln.U,ODp:()=>un,XD2:()=>D.X,Xxe:()=>hn.X,tdS:()=>ms,O$l:()=>dn.O,R_K:()=>pn.R,tPi:()=>R.t,jZU:()=>fn,SmN:()=>mn,CnO:()=>gn,p0P:()=>yn,XAC:()=>bn.X,Wvh:()=>xn.W,fBT:()=>vn.f,rVs:()=>xs,ers:()=>ca,uN7:()=>fs,Vl2:()=>Nn.V,_b3:()=>Tn._,h62:()=>me.h,$i:()=>Cn.$,L9e:()=>En.L,knu:()=>_n.k,Nbs:()=>An.N,NXj:()=>Dn.N,Z_8:()=>vs,luU:()=>ge.l,Smz:()=>Rn.S,ORZ:()=>On.O,AEp:()=>O.A,XeE:()=>Fn.X,RRF:()=>Bn,odF:()=>Ln,wOQ:()=>zn.w,yXz:()=>Un,Bfx:()=>Pn,xZs:()=>Vn,Pg0:()=>Gn,Gg6:()=>Tt.G,hg7:()=>Hn.h,p4s:()=>aa.p,Xu6:()=>jn,Two:()=>Xn.T,pUJ:()=>qn.p,HHK:()=>Kn.H,GaM:()=>Zn,VD$:()=>Yn,arb:()=>Qn.a,itS:()=>$n,lls:()=>ta.l,P84:()=>ea.P});var a={};n.r(a),n.d(a,{conv2d:()=>xa,depthwiseConv2d:()=>ka,matMul:()=>Ia});var s=n(7613),r=n(1719),o=n(4502),i=n(3312),c=n(318),l=n(2145),u=n(8354),h=n(6147),d=n(8640);const p=(0,d.op)({addN_:function(t){h.hu(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),h.hu(t.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(t.length)));const e=t.map(((t,e)=>(0,u._1)(t,"tensors".concat(e),"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!h.cO(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=e;return c.BV.runKernel(l.Xze,a)}});var f=n(4108),m=n(8543),g=n(9995),y=n(5157),b=n(3053),x=n(54),v=n(4778),w=n(2227),k=n(7897),I=n(9204),S=n(9118),N=n(9151),T=n(5561);const C=(0,d.op)({avgPool3d_:function(t,e,n,a,s){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,u._1)(t,"x","avgPool3d","float32");let i=o,d=!1;4===o.rank&&(d=!0,i=(0,T.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),h.hu(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),h.hu("NDHWC"===r,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(r))),h.hu("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),(0,N.m)("avgPool3d",a,s);const p={x:i},f={filterSize:e,strides:n,pad:a,dimRoundingMode:s,dataFormat:r};let m=c.BV.runKernel(l._k9,p,f);return m=(0,S.p)(m,i.dtype),d?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var E=n(4933),_=n(7221),A=n(651),D=n(7643),R=n(9238),O=n(1744);const F=(0,d.op)({basicLSTMCell_:function(t,e,n,a,s,r){const o=(0,u._1)(t,"forgetBias","basicLSTMCell"),c=(0,u._1)(e,"lstmKernel","basicLSTMCell"),l=(0,u._1)(n,"lstmBias","basicLSTMCell"),h=(0,u._1)(a,"data","basicLSTMCell"),d=(0,u._1)(s,"c","basicLSTMCell"),p=(0,u._1)(r,"h","basicLSTMCell"),f=(0,E.z)([h,p],1),m=(0,_.O)(f,c),g=(0,i.I)(m,l),y=g.shape[0],b=g.shape[1]/4,x=[y,b],v=(0,R.t)(g,[0,0],x),w=(0,R.t)(g,[0,b],x),k=(0,R.t)(g,[0,2*b],x),I=(0,R.t)(g,[0,3*b],x),S=(0,i.I)((0,A.d)((0,D.X)(v),(0,O.A)(w)),(0,A.d)(d,(0,D.X)((0,i.I)(o,k))));return[S,(0,A.d)((0,O.A)(S),(0,D.X)(I))]}});var M=n(6994),B=n(3700);const L=(0,d.op)({batchNorm2d_:function(t,e,n,a,s,r){const o=(0,u._1)(t,"x","batchNorm"),i=(0,u._1)(e,"mean","batchNorm"),c=(0,u._1)(n,"variance","batchNorm");let l,d;return null!=s&&(l=(0,u._1)(s,"scale","batchNorm")),null!=a&&(d=(0,u._1)(a,"offset","batchNorm")),h.hu(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),h.hu(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),h.hu(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&h.hu(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=d&&h.hu(2===d.rank||1===d.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(d.rank,"."))),(0,B.t)(o,i,c,d,l,r)}});const z=(0,d.op)({batchNorm3d_:function(t,e,n,a,s,r){const o=(0,u._1)(t,"x","batchNorm"),i=(0,u._1)(e,"mean","batchNorm"),c=(0,u._1)(n,"variance","batchNorm");let l,d;return null!=s&&(l=(0,u._1)(s,"scale","batchNorm")),null!=a&&(d=(0,u._1)(a,"offset","batchNorm")),h.hu(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),h.hu(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),h.hu(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&h.hu(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=d&&h.hu(3===d.rank||1===d.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(d.rank,"."))),(0,B.t)(o,i,c,d,l,r)}});const U=(0,d.op)({batchNorm4d_:function(t,e,n,a,s,r){const o=(0,u._1)(t,"x","batchNorm"),i=(0,u._1)(e,"mean","batchNorm"),c=(0,u._1)(n,"variance","batchNorm");let l,d;return null!=s&&(l=(0,u._1)(s,"scale","batchNorm")),null!=a&&(d=(0,u._1)(a,"offset","batchNorm")),h.hu(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),h.hu(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),h.hu(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&h.hu(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=d&&h.hu(4===d.rank||1===d.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(d.rank,"."))),(0,B.t)(o,i,c,d,l,r)}});const P=(0,d.op)({bincount_:function(t,e,n){const a=(0,u._1)(t,"x","bincount"),s=(0,u._1)(e,"weights","bincount");h.hu("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),h.hu(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),h.hu(s.size===a.size||0===s.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(s.shape,".")));const r={x:a,weights:s},o={size:n};return c.BV.runKernel(l.zvY,r,o)}});const V=(0,d.op)({bitwiseAnd_:function(t,e){const n=(0,u._1)(t,"x","bitwiseAnd"),a=(0,u._1)(e,"y","bitwiseAnd");if(!(0,h.cO)(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const s={a:n,b:a};return c.BV.runKernel(l.hCO,s)}});const W=(0,d.op)({broadcastArgs_:function(t,e){const n=(0,u._1)(t,"s0","broadcastArgs","int32"),a=(0,u._1)(e,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const s={s0:n,s1:a};return c.BV.runKernel(l.eEB,s)}});var G=n(9742),H=n(7039),j=n(1396),X=n(9836),q=n(672),K=n(9253);const Z=(0,d.op)({concat1d_:function(t){return(0,E.z)(t,0)}});const Y=(0,d.op)({concat2d_:function(t,e){return(0,E.z)(t,e)}});const Q=(0,d.op)({concat3d_:function(t,e){return(0,E.z)(t,e)}});const J=(0,d.op)({concat4d_:function(t,e){return(0,E.z)(t,e)}});var $=n(4918),tt=n(3457),et=n(1732);const nt=(0,d.op)({conv3d_:function(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=(0,u._1)(t,"x","conv3d"),i=(0,u._1)(e,"filter","conv3d");let d=o,p=!1;4===o.rank&&(p=!0,d=(0,T.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),h.hu(5===d.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(d.rank,"."))),h.hu(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),h.hu(d.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(d.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),h.hu((0,N.jT)(n,r),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(r,"'"))),h.hu("NDHWC"===s,(()=>"Error in conv3d: got dataFormat of ".concat(s," but only NDHWC is currently supported."))),h.hu((0,N.U3)(r),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),h.hu((0,N.U3)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:d,filter:i},m={strides:n,pad:a,dataFormat:s,dilations:r},g=c.BV.runKernel(l.x12,f,m);return p?(0,T.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var at=n(1873);const st=(0,d.op)({conv3dTranspose_:function(t,e,n,a,s){const r=(0,u._1)(t,"x","conv3dTranspose"),o=(0,u._1)(e,"filter","conv3dTranspose");return(0,at._)(n,r,o,a,s)}});var rt=n(1227),ot=n(6679),it=n(9457),ct=n(8862);const lt=(0,d.op)({denseBincount_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=(0,u._1)(t,"x","denseBincount"),r=(0,u._1)(e,"weights","denseBincount");h.hu("int32"===s.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(s.dtype))),h.hu(s.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(s.rank,"."))),h.hu(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),h.hu(r.size===s.size||0===r.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(s.shape,", weights shape: ")+"".concat(r.shape,".")));const o={x:s,weights:r},i={size:n,binaryOutput:a};return c.BV.runKernel(l.QRR,o,i)}});var ut=n(1878),ht=n(1147);const dt=(0,d.op)({diag_:function(t){const e={x:(0,u._1)(t,"x","diag")};return c.BV.runKernel(l.$w,e)}});var pt=n(7580),ft=n(5750),mt=n(5923),gt=n(5043);const yt=(0,d.op)({einsum_:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];const s=n.map(((t,e)=>(0,u._1)(t,"tensors".concat(e),"einsum"))),r={equation:t};return c.BV.runKernel(l.$g6,s,r)}});var bt=n(2353);const xt=(0,d.op)({ensureShape_:function(t,e){const n=(0,u._1)(t,"x","ensureShape","string_or_numeric");if(!(0,h.DK)(n.shape,e))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(e));return t}});var vt=n(3254),wt=n(3891),kt=n(3313),It=n(411),St=n(2975),Nt=n(8865),Tt=n(2343);const Ct=(0,d.op)({eye_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==e&&(e=t);const s=(0,H.f)([t,e],a),r=t<=e?t:e;for(let i=0;i<r;++i)s.set(1,i,i);const o=(0,T.X)(s.toTensor(),[t,e]);if(null==n)return o;if(1===n.length)return(0,Tt.G)((0,St.d)(o,0),[n[0],1,1]);if(2===n.length)return(0,Tt.G)((0,St.d)((0,St.d)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Tt.G)((0,St.d)((0,St.d)((0,St.d)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var Et=n(8582),_t=n(2628),At=n(7145),Dt=n(9498),Rt=n(5014),Ot=n(8327),Ft=n(6996),Mt=n(300),Bt=n(4652),Lt=n(7005),zt=n(9546),Ut=n(4920),Pt=n(2642);function Vt(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:t,stop:e,num:n};return c.BV.runKernel(l.e7N,{},a)}var Wt=n(936),Gt=n(378),Ht=n(5341),jt=n(5113),Xt=n(4561),qt=n(5530),Kt=n(2177),Zt=n(875),Yt=n(5117),Qt=n(1712);const Jt=2147483648;const $t=(0,d.op)({searchSorted_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=(0,u._1)(t,"sortedSequence","searchSorted"),s=(0,u._1)(e,"values","searchSorted"),r=a.shape[a.shape.length-1],o=s.shape[s.shape.length-1],i=(0,T.X)(a,[-1,r]),d=(0,T.X)(s,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==d.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,h.NA)(d.shape)>=Jt)throw new Error("values tensor size must less than ".concat(Jt));if(i.shape[1]>=Jt)throw new Error("trailing dim_size must less than ".concat(Jt," for int32 output type, was ").concat(i.shape[1]));const p={sortedSequence:i,values:d},f={side:n};return c.BV.runKernel(l.nr8,p,f)}});function te(t,e){return $t(t,e,"left")}var ee=n(6176),ne=n(5777);const ae=(0,d.op)({maxPool3d_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,u._1)(t,"x","maxPool3d");let i=o,d=!1;4===o.rank&&(d=!0,i=(0,T.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),h.hu(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),h.hu("NDHWC"===r,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(r))),(0,N.m)("maxPool3d",a,s);const p={x:i},f={filterSize:e,strides:n,pad:a,dimRoundingMode:s,dataFormat:r},m=c.BV.runKernel(l.OAf,p,f);return d?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const se=(0,d.op)({maxPoolWithArgmax_:function(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const r={x:(0,u._1)(t,"x","maxPoolWithArgmax")},o={filterSize:e,strides:n,pad:a,includeBatchInIndex:s},i=c.BV.runKernel(l.vFR,r,o);return{result:i[0],indexes:i[1]}}});var re=n(705),oe=n(6568),ie=n(6100),ce=n(4376);function le(t,e){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===t)return[];let a=(0,u._1)(t,"x","meshgrid",t instanceof ce.es?t.dtype:"float32");if(void 0===e)return[a];let s=(0,u._1)(e,"y","meshgrid",e instanceof ce.es?e.dtype:"float32");const r=(0,h.NA)(a.shape),o=(0,h.NA)(s.shape);return"xy"===n?(a=(0,T.X)(a,[1,-1]),s=(0,T.X)(s,[-1,1]),[(0,_.O)((0,ie.i)([o,1],a.dtype),a),(0,_.O)(s,(0,ie.i)([1,r],s.dtype))]):(a=(0,T.X)(a,[-1,1]),s=(0,T.X)(s,[1,-1]),[(0,_.O)(a,(0,ie.i)([1,o],a.dtype)),(0,_.O)((0,ie.i)([r,1],s.dtype),s)])}var ue=n(7891),he=n(2273),de=n(9719),pe=n(4645),fe=n(8473),me=n(7391),ge=n(4774);const ye=(0,d.op)({moments_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t=(0,u._1)(t,"x","moments");const a=(0,h.EC)(e,t.shape),s=(0,oe.J)(t,a,n);let r=s.shape;n||(r=(0,fe.rv)(s.shape,a));const o=(0,me.h)((0,ge.l)((0,S.p)(t,"float32"),(0,T.X)(s,r)));return{mean:s,variance:(0,oe.J)(o,a,n)}}});const be=(0,d.op)({multiRNNCell_:function(t,e,n,a){const s=(0,u._1)(e,"data","multiRNNCell"),r=(0,u.sI)(n,"c","multiRNNCell"),o=(0,u.sI)(a,"h","multiRNNCell");let i=s;const c=[];for(let u=0;u<t.length;u++){const e=t[u](i,r[u],o[u]);c.push(e[0]),c.push(e[1]),i=e[1]}const l=[],h=[];for(let u=0;u<c.length;u+=2)l.push(c[u]),h.push(c[u+1]);return[l,h]}});const xe=(0,d.op)({multinomial_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=(0,u._1)(t,"logits","multinomial"),r=s.size,o=s.rank;if(r<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(r,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i={logits:1===o?(0,T.X)(s,[1,-1]):s},h={numSamples:e,seed:n,normalized:a},d=c.BV.runKernel(l.NZg,i,h);return 1===o?(0,T.X)(d,[d.size]):d}});var ve=n(4362),we=n(5549),ke=n(4326),Ie=n(773);const Se=(0,d.op)({outerProduct_:function(t,e){const n=(0,u._1)(t,"v1","outerProduct"),a=(0,u._1)(e,"v2","outerProduct");h.hu(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const s=(0,T.X)(n,[-1,1]),r=(0,T.X)(a,[1,-1]);return(0,_.O)(s,r)}});var Ne=n(1970);const Te=(0,d.op)({pad1d_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,h.hu)(2===e.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,Ne.v)(t,[e],n)}});const Ce=(0,d.op)({pad2d_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,h.hu)(2===e.length&&2===e[0].length&&2===e[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Ne.v)(t,e,n)}});const Ee=(0,d.op)({pad3d_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,h.hu)(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Ne.v)(t,e,n)}});const _e=(0,d.op)({pad4d_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,h.hu)(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Ne.v)(t,e,n)}});var Ae=n(7226),De=n(4334),Re=n(6859),Oe=n(4600),Fe=n(7722);const Me=(0,d.op)({raggedGather_:function(t,e,n,a){const s={paramsNestedSplits:t.map(((t,e)=>(0,u._1)(t,"tensors".concat(e),"raggedGather","int32"))),paramsDenseValues:(0,u._1)(e,"paramsDenseValues","raggedGather"),indices:(0,u._1)(n,"indices","raggedGather","int32")},r={outputRaggedRank:a},o=c.BV.runKernel(l.dDz,s,r);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const Be=(0,d.op)({raggedRange_:function(t,e,n){const a=(0,u._1)(t,"starts","raggedRange"),s={starts:a,limits:(0,u._1)(e,"limits","raggedRange",a.dtype),deltas:(0,u._1)(n,"deltas","raggedRange",a.dtype)},r=c.BV.runKernel(l.CQl,s);return{rtNestedSplits:r[0],rtDenseValues:r[1]}}});const Le=(0,d.op)({raggedTensorToTensor_:function(t,e,n,a,s){const r=(0,u._1)(t,"shape","raggedTensorToTensor","int32"),o=(0,u._1)(e,"values","raggedTensorToTensor"),i={shape:r,values:o,defaultValue:(0,u._1)(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:a.map(((t,e)=>(0,u._1)(t,"tensors".concat(e),"raggedTensorToTensor","int32")))},h={rowPartitionTypes:s};return c.BV.runKernel(l.BiW,i,h)}});const ze=(0,d.op)({rand_:function(t,e,n){(0,h.Mu)(t);const a=(0,h.NA)(t);let s=null;if(null==n||"float32"===n)s=new Float32Array(a);else if("int32"===n)s=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));s=new Uint8Array(a)}for(let r=0;r<a;r++)s[r]=e();return c.BV.makeTensor(s,t,n)}});var Ue=n(6699);class Pe{constructor(t,e,n,a,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const r=s||Math.random();this.random=Ue.alea(r.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let a,s,r;do{a=2*this.random()-1,s=2*this.random()-1,r=a*a+s*s}while(r>=1||0===r);const o=Math.sqrt(-2*Math.log(r)/r);t=this.mean+this.stdDev*a*o,e=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Ve{constructor(t,e,n,a){this.alpha=t,this.beta=1/e,this.dtype=n;const s=a||Math.random();this.randu=Ue.alea(s.toString()),this.randn=new Pe(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,a,s,r;for(;;){do{a=this.randn.nextValue(),r=1+this.c*a}while(r<=0);if(r*=r*r,t=a*a,e=1-.331*t*t,n=.5*t+this.d*(1-r+Math.log(r)),s=this.randu(),s<e||Math.log(s)<n)break}return r=1/this.beta*this.d*r,this.alpha<1&&(r*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(r)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class We{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(t," - ").concat(e," <= 1 and dtype is not float"));this.random=Ue.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ge=(0,d.op)({randomGamma_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;if((0,h.Mu)(t),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const r=new Ve(e,n,a,s),o=(0,H.f)(t,a);for(let i=0;i<o.values.length;i++)o.values[i]=r.nextValue();return o.toTensor()}});const He=(0,d.op)({randomNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if((0,h.Mu)(t),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const r=new Pe(e,n,a,!1,s),o=(0,H.f)(t,a);for(let i=0;i<o.values.length;i++)o.values[i]=r.nextValue();return o.toTensor()}});const je=(0,d.op)({randomStandardNormal_:function(t,e,n){if(null!=e&&"bool"===e)throw new Error("Unsupported data type ".concat(e));return He(t,0,1,e,n)}});const Xe=(0,d.op)({randomUniform_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;(0,h.Mu)(t);const r=(0,H.f)(t,a),o=new We(e,n,null,s);for(let i=0;i<r.values.length;i++)r.values[i]=o.nextValue();return r.toTensor()}});const qe=(0,d.op)({randomUniformInt_:function(t,e,n,a){return Xe(t,e,n,"int32",a)}});function Ke(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:a};return c.BV.runKernel(l.e6w,{},s)}var Ze=n(6972),Ye=n(2209),Qe=n(7539),Je=n(5900),$e=n(6770);const tn=(0,d.op)({reverse1d_:function(t){const e=(0,u._1)(t,"x","reverse");return h.hu(1===e.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(e.rank,"."))),(0,$e.G)(e,0)}});const en=(0,d.op)({reverse2d_:function(t,e){const n=(0,u._1)(t,"x","reverse");return h.hu(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),(0,$e.G)(n,e)}});const nn=(0,d.op)({reverse3d_:function(t,e){const n=(0,u._1)(t,"x","reverse");return h.hu(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),(0,$e.G)(n,e)}});const an=(0,d.op)({reverse4d_:function(t,e){const n=(0,u._1)(t,"x","reverse");return h.hu(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),(0,$e.G)(n,e)}});var sn=n(766),rn=n(5115),on=n(7067),cn=n(413),ln=n(119);const un=async function(t,e){const n=(0,u._1)(t,"x","setdiff1d"),a=(0,u._1)(e,"y","setdiff1d");h.hu(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),h.hu(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),h.hu(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const s=await n.data(),r=await a.data(),o=new Set(r);let i=0;for(let u=0;u<s.length;u++)o.has(s[u])||i++;const c=new ce.YD([i],n.dtype),l=new ce.YD([i],"int32");for(let u=0,h=0;u<s.length;u++)o.has(s[u])||(c.values[h]=s[u],l.values[h]=u,h++);return[c.toTensor(),l.toTensor()]};var hn=n(2070),dn=n(7254),pn=n(7657);const fn=(0,d.op)({slice1d_:function(t,e,n){const a=(0,u._1)(t,"x","slice1d");return h.hu(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),(0,R.t)(a,[e],[n])}});const mn=(0,d.op)({slice2d_:function(t,e,n){const a=(0,u._1)(t,"x","slice2d");return h.hu(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),(0,R.t)(a,e,n)}});const gn=(0,d.op)({slice3d_:function(t,e,n){const a=(0,u._1)(t,"x","slice3d");return h.hu(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),(0,R.t)(a,e,n)}});const yn=(0,d.op)({slice4d_:function(t,e,n){const a=(0,u._1)(t,"x","slice4d");return h.hu(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),(0,R.t)(a,e,n)}});var bn=n(4910),xn=n(4626),vn=n(5696),wn=n(7635),kn=n(530),In=n(774),Sn=n(4617),Nn=n(2588),Tn=n(6902),Cn=n(7993),En=n(3931),_n=n(8306),An=n(4031),Dn=n(9017),Rn=n(227),On=n(6999),Fn=n(2442),Mn=n(7960);function Bn(t,e){(0,h.Cq)(t);const n=(0,u.C)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Mn.H)(t,null,n,e)}function Ln(t,e,n){if((0,h.Cq)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const a=(0,u.C)(t,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Mn.H)(t,e,a,n)}var zn=n(3123);function Un(t,e,n){if((0,h.Cq)(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const a=(0,u.C)(t,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Mn.H)(t,e,a,n)}function Pn(t,e,n){if((0,h.Cq)(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const a=(0,u.C)(t,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Mn.H)(t,e,a,n)}function Vn(t,e,n){if((0,h.Cq)(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const a=(0,u.C)(t,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||a,(0,Mn.H)(t,e,a,n)}var Wn=n(8604);const Gn=(0,d.op)({tensorScatterUpdate_:function(t,e,n){const a=(0,u._1)(t,"tensor","tensorScatterupdate"),s=(0,u._1)(e,"indices","tensorScatterupdate","int32"),r=(0,u._1)(n,"updates","tensorScatterupdate");if(Wn.b0(r,s,a.shape),a.dtype!==r.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(r.dtype,"."));const o={tensor:a,indices:s,updates:r};return c.BV.runKernel(l.SIB,o,{})}});var Hn=n(9085);const jn=(0,d.op)({truncatedNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if((0,h.Mu)(t),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const r=new Pe(e,n,a,!0,s),o=(0,H.f)(t,a);for(let i=0;i<o.values.length;i++)o.values[i]=r.nextValue();return o.toTensor()}});var Xn=n(4860),qn=n(6918),Kn=n(4566);function Zn(t,e){return $t(t,e,"right")}function Yn(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return c.BV.makeVariable(t,e,n,a)}var Qn=n(329),Jn=n(4189);const $n=async function(t){const e=(0,u._1)(t,"condition","whereAsync","bool"),n=await e.data(),a=(0,Jn.Z)(e.shape,n);return t!==e&&e.dispose(),a};var ta=n(7742),ea=n(7293);const na=async function(t,e,n){const a=(0,u._1)(t,"tensor","boolMask"),s=(0,u._1)(e,"mask","boolMask","bool"),r=null==n?0:n,o=s.rank,i=a.shape;h.hu(o>0,(()=>"mask cannot be scalar")),h.k5(i.slice(r,r+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let u=r;u<r+o;u++)c*=i[u];const l=i.slice(0,r).concat([c],i.slice(r+o)),d=(0,T.X)(a,l),p=(0,T.X)(s,[-1]),f=await $n(p),m=(0,En.L)(f,[1]),g=(0,Dt.I)(d,m,r);return t!==a&&a.dispose(),e!==s&&s.dispose(),m.dispose(),d.dispose(),p.dispose(),f.dispose(),g};var aa=n(1240),sa=n(6662),ra=n(9064);const oa=(0,d.op)({movingAverage_:function(t,e,n,a){let s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const r=(0,u._1)(t,"v","movingAverage"),o=(0,u._1)(e,"x","movingAverage"),c=(0,u._1)(n,"decay","movingAverage");(0,ra.assertTypesMatch)(r,o),h.hu(h.cO(r.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=(0,on.i)(1),d=(0,ge.l)(l,c);let p=(0,A.d)((0,ge.l)(o,r),d);if(s){h.hu(null!=a,(()=>"When using zeroDebias: true, step is required."));const t=(0,u._1)(a,"step","movingAverage");p=(0,ft.h)(p,(0,ge.l)(l,(0,De.s)(c,t)))}return(0,i.I)(r,p)}});const ia=(0,d.op)({scatterND_:function(t,e,n){(0,h.Mu)(n);const a=(0,u._1)(t,"indices","scatterND","int32"),s=(0,u._1)(e,"updates","scatterND");Wn.b0(s,a,n);const r={indices:a,updates:s},o={shape:n};return c.BV.runKernel(l.xQA,r,o)}});const ca=(0,d.op)({sparseToDense_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,h.Mu)(n);const s=(0,u._1)(t,"sparseIndices","sparseToDense","int32"),r=(0,u._1)(e,"sparseValues","sparseToDense","string_or_numeric"),o=(0,u._1)(a,"defaultValue","sparseToDense",r.dtype);!function(t,e,n,a){if("int32"!==t.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(t.shape,"."));const s=t.rank>0?t.shape[0]:1,r=t.rank>1?t.shape[1]:1;if(n.length!==r)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(r,"."));const o=e.size;if(0!==e.rank&&(1!==e.rank||o!==s))throw new Error("sparseValues has incorrect shape "+"".concat(e.shape,", should be [] or [").concat(s,"]"));if(e.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,r,n,o);const i={sparseIndices:s,sparseValues:r,defaultValue:o},d={outputShape:n};return c.BV.runKernel(l.D2d,i,d)}});const la=(0,d.op)({gatherND_:function(t,e){const n=(0,u._1)(e,"indices","gatherND","int32"),a={params:(0,u._1)(t,"x","gatherND","string_or_numeric"),indices:n};return c.BV.runKernel(l.q1x,a)}});const ua=(0,d.op)({dropout_:function(t,e,n,a){const s=(0,u._1)(t,"x","dropout");if(h.hu("float32"===s.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(s.dtype," tensor instead."))),h.hu(e>=0&&e<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(e,"."))),0===e)return t instanceof ce.es?s.clone():s;const r=function(t,e){if(null==e)return t.shape.slice();if(h.cO(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let a=0;a<t.shape.length;a++)null==e[a]&&null!=t.shape[a]?n.push(t.shape[a]):n.push(e[a]);return n}return e}(s,n),o=1-e,c=(0,ft.h)((0,_t.G)((0,i.I)(Xe(r,0,1,"float32",a),o)),o);return(0,A.d)(s,c)}});function ha(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function da(t,e,n){const a=1-t%2,s=new Float32Array(t);for(let r=0;r<t;++r){const o=2*Math.PI*r/(t+a-1);s[r]=e-n*Math.cos(o)}return Bn(s,"float32")}const pa=async function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=(0,u._1)(t,"predictions","inTopK"),s=(0,u._1)(e,"targets","inTopK");(0,h.hu)(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),(0,h.hu)(a.rank-1===s.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(s.rank))),(0,h.k5)(a.shape.slice(0,a.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=a.shape[a.shape.length-1];(0,h.hu)(n>0&&n<=r,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(r,"), but got ").concat(n)));const o=await a.data(),i=await s.data(),[c,l]=[o.length/r,r],d=(0,h.WP)("bool",c);for(let u=0;u<c;u++){const t=u*l,e=o.subarray(t,t+l),a=[];for(let n=0;n<e.length;n++)a.push({value:e[n],index:n});a.sort(((t,e)=>e.value-t.value)),d[u]=0;for(let s=0;s<n;s++)if(a[s].index===i[u]){d[u]=1;break}}return t!==a&&a.dispose(),e!==s&&s.dispose(),(0,Fn.X)(d,s.shape,"bool")};var fa=n(6450),ma=n(5774),ga=n(8744),ya=n(1045),ba=n(5171);const xa=(0,d.op)({fusedConv2d_:function(t){let{x:e,filter:n,strides:a,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:d,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=t;if(f=f||"linear",!1===(0,ba.uy)(c.BV.state.gradientDepth,f)){h.hu("NHWC"===r,(()=>"Error in fused conv2d: got dataFormat of ".concat(r," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let t=(0,tt.T)(e,n,a,s,r,o,d);return null!=p&&(t=(0,i.I)(t,p)),(0,ba.QH)(t,f,m,g)}const y=(0,u._1)(e,"x","conv2d","float32"),b=(0,u._1)(n,"filter","conv2d","float32");let x=y,v=!1;3===y.rank&&(v=!0,x=(0,T.X)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),h.hu(4===x.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(x.rank,"."))),h.hu(4===b.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(b.rank,"."))),N.m("fused conv2d",s,d);const w="NHWC"===r?x.shape[3]:x.shape[1];h.hu(b.shape[2]===w,(()=>"Error in conv2d: depth of input (".concat(w,") must match ")+"input depth for filter ".concat(b.shape[2],"."))),h.hu(N.jT(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'")));const k=N.Ix(x.shape,b.shape,a,o,s,d);let I,S;if(null!=p&&(I=(0,u._1)(p,"bias","fused conv2d"),[I]=(0,ra.makeTypesMatch)(I,y),"NHWC"===r?ma.assertAndGetBroadcastShape(k.outShape,I.shape):(h.hu(I.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(I.shape.length,"."))),h.hu(0===I.shape.length||I.shape[0]===k.outChannels||1===I.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(I.shape,") is not ")+"compatible with the number of output channels "+"(".concat(k.outChannels,")"))))),null!=m){const t=m.shape;if(h.hu(t.length<=1||3===t.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(t.length,"."))),1===t.length)h.hu(1===t[0]||t[0]===k.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(t,") is not compatible with the number of output ")+"channels (".concat(k.outChannels,").")));else if(3===t.length)try{ma.assertAndGetBroadcastShape(t,k.outShape)}catch(A){const e="Error in fused conv2d: PReLU activation weights (".concat(t,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(k.outShape,").");throw Error(e)}S=(0,u._1)(m,"prelu weights","fused conv2d")}const C=(t,e)=>{h.hu("NHWC"===r,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(r," but only NHWC is currently supported.")));const[n,i,c,l]=e,u=(0,ba.Fr)(t,c,f);h.hu(N.I0(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const d=[(0,ya._)(i.shape,u,n,a,s),(0,ga.p)(i,u,n.shape,a,s)];if(null!=l){const t=(0,ba.pf)(l,u);d.push(t)}return d},E={x:x,filter:b,bias:I,preluActivationWeights:S},_={strides:a,pad:s,dataFormat:r,dilations:o,dimRoundingMode:d,activation:f,leakyreluAlpha:g};if(null==p){const t=(0,fa.cb)(((t,e,n)=>{let a=c.BV.runKernel(l._V0,E,_);return n([e,t,a]),v&&(a=(0,T.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:C}}));return t(x,b)}{const t=(0,fa.cb)(((t,e,n,a)=>{let s=c.BV.runKernel(l._V0,E,_);return a([e,t,s,n]),v&&(s=(0,T.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:C}}));return t(x,b,I)}}});var va=n(288),wa=n(6939);const ka=(0,d.op)({fusedDepthwiseConv2d_:function(t){let{x:e,filter:n,strides:a,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:d,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=t;if(!1===(0,ba.uy)(c.BV.state.gradientDepth,f)){let t=(0,ht.B)(e,n,a,s,r,o,d);return null!=p&&(t=(0,i.I)(t,p)),(0,ba.QH)(t,f,m,g)}const y=(0,u._1)(e,"x","depthwiseConv2d","float32"),b=(0,u._1)(n,"filter","depthwiseConv2d","float32");let x=y,v=!1;3===y.rank&&(v=!0,x=(0,T.X)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),h.hu(4===x.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(x.rank,"."))),h.hu(4===b.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(b.rank,"."))),h.hu(x.shape[3]===b.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(x.shape[3],") must match the inChannels dimension in ")+"filter ".concat(b.shape[2],"."))),null==o&&(o=[1,1]),h.hu(N.jT(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),N.m("fused depthwiseConv2d",s,d);const w=N.Ix(x.shape,b.shape,a,o,s,d,!0);let k,I;null!=p&&(k=(0,u._1)(p,"bias","fused conv2d"),[k]=(0,ra.makeTypesMatch)(k,y),ma.assertAndGetBroadcastShape(w.outShape,k.shape)),null!=m&&(I=(0,u._1)(m,"prelu weights","fused depthwiseConv2d"));const S=(t,e)=>{h.hu(N.I0(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,r,i,c]=e,l=(0,ba.Fr)(t,i,f),u=(0,wa.v)(r.shape,l,n,a,s,o,d),p=(0,va.z)(r,l,n.shape,a,s,o,d);if(null!=c){return[u,p,(0,ba.pf)(k,l)]}return[u,p]},C={x:x,filter:b,bias:k,preluActivationWeights:I},E={strides:a,pad:s,dataFormat:r,dilations:o,dimRoundingMode:d,activation:f,leakyreluAlpha:g};if(null==p){const t=(0,fa.cb)(((t,e,n)=>{let a=c.BV.runKernel(l.luS,C,E);return n([e,t,a]),v&&(a=(0,T.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:S}}));return t(x,b)}{const t=(0,fa.cb)(((t,e,n,a)=>{let s=c.BV.runKernel(l.luS,C,E);return a([e,t,s,n]),v&&(s=(0,T.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:S}}));return t(x,b,k)}}});const Ia=(0,d.op)({fusedMatMul_:function(t){let{a:e,b:n,transposeA:a=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:d,leakyreluAlpha:p=.2}=t;if(!1===(0,ba.uy)(c.BV.state.gradientDepth,o)){let t=(0,_.O)(e,n,a,s);return null!=r&&(t=(0,i.I)(t,r)),(0,ba.QH)(t,o,d,p)}let f=(0,u._1)(e,"a","fused matMul"),m=(0,u._1)(n,"b","fused matMul");[f,m]=(0,ra.makeTypesMatch)(f,m);const g=a?f.shape[f.rank-2]:f.shape[f.rank-1],y=s?m.shape[m.rank-1]:m.shape[m.rank-2],b=a?f.shape[f.rank-1]:f.shape[f.rank-2],x=s?m.shape[m.rank-2]:m.shape[m.rank-1],v=f.shape.slice(0,-2),w=m.shape.slice(0,-2),k=h.NA(v),I=h.NA(w);h.hu(g===y,(()=>"Error in fused matMul: inner shapes (".concat(g,") and (")+"".concat(y,") of Tensors with shapes ").concat(f.shape," and ")+"".concat(m.shape," and transposeA=").concat(a)+" and transposeB=".concat(s," must match.")));const S=ma.assertAndGetBroadcastShape(f.shape.slice(0,-2),m.shape.slice(0,-2)).concat([b,x]),N=a?(0,T.X)(f,[k,g,b]):(0,T.X)(f,[k,b,g]),C=s?(0,T.X)(m,[I,x,y]):(0,T.X)(m,[I,y,x]);let E,A;null!=r&&(E=(0,u._1)(r,"bias","fused matMul"),[E]=(0,ra.makeTypesMatch)(E,f),ma.assertAndGetBroadcastShape(S,E.shape)),null!=d&&(A=(0,u._1)(d,"prelu weights","fused matMul"));const D=(t,e)=>{const[n,i,c,l]=e,u=(0,ba.Fr)((0,T.X)(t,c.shape),c,o);let h,d;if(a||s?!a&&s?(h=(0,_.O)(u,i,!1,!1),d=(0,_.O)(u,n,!0,!1)):a&&!s?(h=(0,_.O)(i,u,!1,!0),d=(0,_.O)(n,u,!1,!1)):(h=(0,_.O)(i,u,!0,!0),d=(0,_.O)(u,n,!0,!0)):(h=(0,_.O)(u,i,!1,!0),d=(0,_.O)(n,u,!0,!1)),null!=r){return[h,d,(0,ba.pf)(l,u)]}return[h,d]},R={a:N,b:C,bias:E,preluActivationWeights:A},O={transposeA:a,transposeB:s,activation:o,leakyreluAlpha:p};if(null==r){const t=(0,fa.cb)(((t,e,n)=>{const a=c.BV.runKernel(l.usg,R,O);return n([t,e,a]),{value:(0,T.X)(a,S),gradFunc:D}}));return t(N,C)}{const t=(0,fa.cb)(((t,e,n,a)=>{const s=c.BV.runKernel(l.usg,R,O);return a([t,e,s,n]),{value:(0,T.X)(s,S),gradFunc:D}}));return t(N,C,E)}}});const Sa=(0,d.op)({hammingWindow_:function(t){return da(t,.54,.46)}});const Na=(0,d.op)({hannWindow_:function(t){return da(t,.5,.5)}});const Ta=(0,d.op)({frame_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=0;const o=[];for(;r+e<=t.size;)o.push((0,R.t)(t,r,e)),r+=n;if(a)for(;r<t.size;){const a=r+e-t.size,i=(0,E.z)([(0,R.t)(t,r,e-a),(0,Et.h)([a],s)]);o.push(i),r+=n}return 0===o.length?Ln([],[0,e]):(0,T.X)((0,E.z)(o),[o.length,e])}});const Ca=(0,d.op)({stft_:function(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Na;null==a&&(a=ha(e));const r=Ta(t,e,n),o=(0,A.d)(r,s(e));return(0,Sn.Q)(o,a)}});const Ea=(0,d.op)({cropAndResize_:function(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u._1)(t,"image","cropAndResize"),i=(0,u._1)(e,"boxes","cropAndResize","float32"),d=(0,u._1)(n,"boxInd","cropAndResize","int32"),p=i.shape[0];h.hu(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),h.hu(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(p,",4] ")+"but had shape ".concat(i.shape,"."))),h.hu(1===d.rank&&d.shape[0]===p,(()=>"Error in cropAndResize: boxInd must be have size [".concat(p,"] ")+"but had shape ".concat(i.shape,"."))),h.hu(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),h.hu(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),h.hu("bilinear"===s||"nearest"===s,(()=>"method must be bilinear or nearest, but was ".concat(s)));const f={image:o,boxes:i,boxInd:d},m={method:s,extrapolationValue:r,cropSize:a};return c.BV.runKernel(l.VcC,f,m)}});const _a=(0,d.op)({flipLeftRight_:function(t){const e=(0,u._1)(t,"image","flipLeftRight","float32");h.hu(4===e.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(e.rank,".")));const n={image:e};return c.BV.runKernel(l.Uyb,n,{})}});const Aa=(0,d.op)({grayscaleToRGB_:function(t){const e=(0,u._1)(t,"image","grayscaleToRGB"),n=e.rank-1,a=e.shape[n];h.hu(e.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(e.rank,"."))),h.hu(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const s=new Array(e.rank);return s.fill(1,0,n),s[n]=3,(0,Tt.G)(e,s)}});const Da=(0,d.op)({rgbToGrayscale_:function(t){const e=(0,u._1)(t,"image","RGBToGrayscale"),n=e.rank-1,a=e.shape[n];h.hu(e.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(e.rank,"."))),h.hu(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const s=e.dtype,r=(0,S.p)(e,"float32"),o=Bn([.2989,.587,.114]);let i;switch(e.rank){case 2:i=yt("ij,j->i",r,o);break;case 3:i=yt("ijk,k->ij",r,o);break;case 4:i=yt("ijkl,l->ijk",r,o);break;case 5:i=yt("ijklm,m->ijkl",r,o);break;case 6:i=yt("ijklmn,n->ijklm",r,o);break;default:throw new Error("Not a valid tensor rank.")}return i=(0,St.d)(i,-1),(0,S.p)(i,s)}});const Ra=(0,d.op)({rotateWithOffset_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=(0,u._1)(t,"image","rotateWithOffset","float32");h.hu(4===s.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(s.rank,".")));const r={image:s},o={radians:e,fillValue:n,center:a};return c.BV.runKernel(l.b9H,r,o)}});function Oa(t,e,n,a,s,r){null==a&&(a=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==r&&(r=0);const o=t.shape[0];return n=Math.min(n,o),h.hu(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),h.hu(2===t.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(t.rank,"'"))),h.hu(4===t.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(t.shape[1]))),h.hu(1===e.rank,(()=>"scores must be a 1D tensor")),h.hu(e.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(e.shape[0]))),h.hu(0<=r&&r<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(r,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:s,softNmsSigma:r}}const Fa=(0,d.op)({nonMaxSuppression_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const r=(0,u._1)(t,"boxes","nonMaxSuppression","float32"),o=(0,u._1)(e,"scores","nonMaxSuppression","float32"),i=Oa(r,o,n,a,s);n=i.maxOutputSize,a=i.iouThreshold,s=i.scoreThreshold;const h={maxOutputSize:n,iouThreshold:a,scoreThreshold:s};return c.BV.runKernel(l.uv1,{boxes:r,scores:o},h)}});var Ma=n(745);const Ba=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const r=(0,u._1)(t,"boxes","nonMaxSuppressionAsync"),o=(0,u._1)(e,"scores","nonMaxSuppressionAsync"),i=Oa(r,o,n,a,s);n=i.maxOutputSize,a=i.iouThreshold,s=i.scoreThreshold;const c=await Promise.all([r.data(),o.data()]),l=c[0],h=c[1],{selectedIndices:d}=(0,Ma.GP)(l,h,n,a,s);return r!==t&&r.dispose(),o!==e&&o.dispose(),Bn(d,"int32")};const La=(0,d.op)({nonMaxSuppressionWithScore_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u._1)(t,"boxes","nonMaxSuppression"),i=(0,u._1)(e,"scores","nonMaxSuppression"),h=Oa(o,i,n,a,s,r);n=h.maxOutputSize,a=h.iouThreshold,s=h.scoreThreshold,r=h.softNmsSigma;const d={boxes:o,scores:i},p={maxOutputSize:n,iouThreshold:a,scoreThreshold:s,softNmsSigma:r},f=c.BV.runKernel(l.W0H,d,p);return{selectedIndices:f[0],selectedScores:f[1]}}});const za=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u._1)(t,"boxes","nonMaxSuppressionAsync"),i=(0,u._1)(e,"scores","nonMaxSuppressionAsync"),c=Oa(o,i,n,a,s,r);n=c.maxOutputSize,a=c.iouThreshold,s=c.scoreThreshold,r=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),h=l[0],d=l[1],{selectedIndices:p,selectedScores:f}=(0,Ma.pA)(h,d,n,a,s,r);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:Bn(p,"int32"),selectedScores:Bn(f)}};const Ua=(0,d.op)({nonMaxSuppressionPadded_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,u._1)(t,"boxes","nonMaxSuppression"),i=(0,u._1)(e,"scores","nonMaxSuppression"),h=Oa(o,i,n,a,s,null),d={boxes:o,scores:i},p={maxOutputSize:h.maxOutputSize,iouThreshold:h.iouThreshold,scoreThreshold:h.scoreThreshold,padToMaxOutputSize:r},f=c.BV.runKernel(l.cye,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}});const Pa=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,u._1)(t,"boxes","nonMaxSuppressionAsync"),i=(0,u._1)(e,"scores","nonMaxSuppressionAsync"),c=Oa(o,i,n,a,s,null),l=c.maxOutputSize,h=c.iouThreshold,d=c.scoreThreshold,[p,f]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:g}=(0,Ma.qP)(p,f,l,h,d,r);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:Bn(m,"int32"),validOutputs:(0,on.i)(g,"int32")}};var Va=n(464),Wa=n(8600);const Ga=(0,d.op)({threshold_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=(0,u._1)(t,"image","threshold"),r=s.shape[0]*s.shape[1];let o,c,l,d,p=(0,A.d)(Bn([a]),255);if(h.hu(3===s.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(s.rank,"."))),h.hu(3===s.shape[2]||1===s.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(s.shape[2],"."))),h.hu("int32"===s.dtype||"float32"===s.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(s.dtype,"."))),h.hu("otsu"===e||"binary"===e,(()=>"Method must be binary or otsu, but was ".concat(e))),3===s.shape[2]){[o,c,l]=(0,Nn.V)(s,[1,1,1],-1);const t=(0,A.d)(o,.2989),e=(0,A.d)(c,.587),n=(0,A.d)(l,.114);d=(0,i.I)((0,i.I)(t,e),n)}else d=t;if("otsu"===e){p=function(t,e){let n,a,s,r,o,c,l=Bn([-1]),u=Bn([0]),h=Bn([0]);for(let d=0;d<t.size-1;d++){n=(0,R.t)(t,0,d+1),a=(0,R.t)(t,d+1),o=(0,ft.h)((0,Rn.S)(n),e),c=(0,ft.h)((0,Rn.S)(a),e);const p=(0,Rn.S)((0,A.d)(n,Ke(0,n.size)));s=(0,ft.h)(p,(0,Rn.S)(n));const f=(0,Et.h)(a.shape,n.size),m=(0,i.I)(Ke(0,a.size),f),g=(0,A.d)(a,m);r=(0,ft.h)((0,Rn.S)(g),(0,Rn.S)(a));const y=(0,ge.l)(s,r),b=(0,ge.l)(s,r),x=(0,A.d)(o,c);h=(0,A.d)((0,A.d)(x,y),b);const v=(0,Rt.p)(h,u);u=(0,Qn.a)(v,h,u),l=(0,Qn.a)(v,Bn([d]),l)}return l}(P((0,S.p)((0,sn.N)(d),"int32"),(0,Fn.X)([]),256),r)}const f=n?(0,Pt.z)(d,p):(0,Rt.p)(d,p);return(0,S.p)((0,A.d)(f,255),"int32")}});const Ha=(0,d.op)({transform_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=arguments.length>5?arguments[5]:void 0;const o=(0,u._1)(t,"image","transform","float32"),i=(0,u._1)(e,"transforms","transform","float32");h.hu(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),h.hu(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),h.hu(null==r||2===r.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(r,".")));const d={image:o,transforms:i},p={interpolation:n,fillMode:a,fillValue:s,outputShape:r};return c.BV.runKernel(l.wx7,d,p)}});const ja=(0,d.op)({bandPart_:function(t,e,n){const a=(0,u._1)(t,"a","bandPart");(0,h.hu)(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const s=a.shape,[r,o]=a.shape.slice(-2);let i,c;"number"===typeof e?((0,h.hu)(e%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(e,"."))),(0,h.hu)(e<=r,(()=>"bandPart(): numLower (".concat(e,")")+" must not be greater than the number of rows (".concat(r,")."))),i=(0,u._1)(e<0?r:e,"numLower","bandPart")):((0,h.hu)("int32"===e.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=(0,Qn.a)((0,Ut.d)(e,0),r,(0,he.L)(e,r))),"number"===typeof n?((0,h.hu)(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),(0,h.hu)(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),c=(0,u._1)(n<0?o:n,"numUpper","bandPart")):((0,h.hu)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=(0,Qn.a)((0,Ut.d)(n,0),o,(0,he.L)(n,o)));const l=(0,T.X)(Ke(0,r,1,"int32"),[-1,1]),d=Ke(0,o,1,"int32"),p=(0,ge.l)(l,d),f=(0,Kt.H)((0,Pt.z)(p,i),(0,Ot.b)(p,(0,ve.W)(c))),m=(0,ta.l)([r,o],a.dtype);return(0,T.X)((0,_n.k)((0,Kn.H)((0,T.X)(a,[-1,r,o])).map((t=>(0,Qn.a)(f,t,m)))),s)}});const Xa=(0,d.op)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,(0,h.hu)(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)(0,h.hu)(t[e].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(t[e].shape[0]," vs. ").concat(n,")")))}else e=!0,t=(0,Nn.V)(t,t.shape[0],0).map((t=>(0,En.L)(t,[0])));(0,h.hu)(t.length<=t[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(t.length,") exceeds ")+"number of dimensions (".concat(t[0].shape[0],").")));const n=[],a=t;for(let s=0;s<t.length;++s)n.push(c.BV.tidy((()=>{let t=a[s];if(s>0)for(let e=0;e<s;++e){const a=(0,A.d)((0,Rn.S)((0,A.d)(n[e],t)),n[e]);t=(0,ge.l)(t,a)}return(0,ft.h)(t,(0,sa.K)(t,"euclidean"))})));return e?(0,_n.k)(n,0):n}});var qa=n(5875);function Ka(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return c.BV.tidy((()=>{(0,h.hu)(2===t.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(t.shape.length,"D Tensor.")));const n=t.shape[0],a=t.shape[1];let s=Ct(n),r=(0,q.d)(t);const o=Ln([[1]],[1,1]);let i=(0,q.d)(o);const l=n>=a?a:n;for(let t=0;t<l;++t){const e=r,l=i,u=s;[i,r,s]=c.BV.tidy((()=>{const e=(0,R.t)(r,[t,t],[n-t,1]),c=(0,sa.K)(e),l=(0,R.t)(r,[t,t],[1,1]),u=(0,Qn.a)((0,Rt.p)(l,0),Ln([[-1]]),Ln([[1]])),h=(0,ge.l)(l,(0,A.d)(u,c)),d=(0,ft.h)(e,h);i=1===d.shape[0]?(0,q.d)(o):(0,E.z)([o,(0,R.t)(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=(0,ve.W)((0,ft.h)((0,_.O)(u,h),c)),f=(0,R.t)(r,[t,0],[n-t,a]),m=(0,A.d)(p,i),g=(0,aa.p)(i);if(0===t)r=(0,ge.l)(f,(0,_.O)(m,(0,_.O)(g,f)));else{const e=(0,ge.l)(f,(0,_.O)(m,(0,_.O)(g,f)));r=(0,E.z)([(0,R.t)(r,[0,0],[t,a]),e],0)}const y=(0,aa.p)(m),b=(0,R.t)(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=(0,ge.l)(b,(0,_.O)((0,_.O)(b,i),y));else{const e=(0,ge.l)(b,(0,_.O)((0,_.O)(b,i),y));s=(0,E.z)([(0,R.t)(s,[0,0],[n,t]),e],1)}return[i,r,s]})),(0,qa.B9)([e,l,u])}return!e&&n>a&&(s=(0,R.t)(s,[0,0],[n,a]),r=(0,R.t)(r,[0,0],[a,a])),[s,r]}))}const Za=(0,d.op)({qr_:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,h.hu)(t.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(t.rank))),2===t.rank)return Ka(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),a=(0,Kn.H)((0,T.X)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],r=[];a.forEach((t=>{const[n,a]=Ka(t,e);s.push(n),r.push(a)}));return[(0,T.X)((0,_n.k)(s,0),t.shape),(0,T.X)((0,_n.k)(r,0),t.shape)]}}});var Ya;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ya||(Ya={}));const Qa=(0,d.op)({computeWeightedLoss_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ya.SUM_BY_NONZERO_WEIGHTS;const a=(0,u._1)(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=(0,u._1)(e,"weights","computeWeightedLoss"));const r=null==s?a:(0,A.d)(a,s);if(n===Ya.NONE)return r;if(n===Ya.SUM)return(0,Rn.S)(r);if(n===Ya.MEAN){if(null==s)return(0,oe.J)(r);{const t=a.size/s.size,e=(0,ft.h)((0,Rn.S)(r),(0,Rn.S)(s));return t>1?(0,ft.h)(e,(0,on.i)(t)):e}}if(n===Ya.SUM_BY_NONZERO_WEIGHTS){if(null==s)return(0,ft.h)((0,Rn.S)(r),(0,on.i)(a.size));{const t=(0,A.d)(s,(0,ie.i)(a.shape)),e=(0,S.p)((0,Rn.S)((0,we.Q)(t,(0,on.i)(0))),"float32");return(0,ft.h)((0,Rn.S)(r),e)}}throw Error("Unknown reduction: ".concat(n))}});const Ja=(0,d.op)({absoluteDifference_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Ya.SUM_BY_NONZERO_WEIGHTS;const r=(0,u._1)(t,"labels","absoluteDifference"),o=(0,u._1)(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,u._1)(n,"weights","absoluteDifference")),(0,h.k5)(r.shape,o.shape,"Error in absoluteDifference: ");const c=(0,s.W)((0,ge.l)(r,o));return Qa(c,i,a)}});const $a=(0,d.op)({cosineDistance_:function(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ya.SUM_BY_NONZERO_WEIGHTS;const r=(0,u._1)(t,"labels","cosineDistance"),o=(0,u._1)(e,"predictions","cosineDistance");let i=null;null!=a&&(i=(0,u._1)(a,"weights","cosineDistance")),(0,h.k5)(r.shape,o.shape,"Error in cosineDistance: ");const c=(0,on.i)(1),l=(0,ge.l)(c,(0,Rn.S)((0,A.d)(r,o),n,!0));return Qa(l,i,s)}});const ts=(0,d.op)({hingeLoss_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Ya.SUM_BY_NONZERO_WEIGHTS,s=(0,u._1)(t,"labels","hingeLoss");const r=(0,u._1)(e,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,u._1)(n,"weights","hingeLoss")),(0,h.k5)(s.shape,r.shape,"Error in hingeLoss: ");const i=(0,on.i)(1);s=(0,ge.l)((0,A.d)((0,on.i)(2),s),i);const c=(0,Qe.U)((0,ge.l)(i,(0,A.d)(s,r)));return Qa(c,o,a)}});const es=(0,d.op)({huberLoss_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ya.SUM_BY_NONZERO_WEIGHTS;const o=(0,u._1)(t,"labels","huberLoss"),c=(0,u._1)(e,"predictions","huberLoss");let l=null;null!=n&&(l=(0,u._1)(n,"weights","huberLoss")),(0,h.k5)(o.shape,c.shape,"Error in huberLoss: ");const d=(0,on.i)(a),p=(0,s.W)((0,ge.l)(c,o)),f=(0,he.L)(p,d),m=(0,ge.l)(p,f),g=(0,i.I)((0,A.d)((0,on.i)(.5),(0,me.h)(f)),(0,A.d)(d,m));return Qa(g,l,r)}});const ns=(0,d.op)({logLoss_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ya.SUM_BY_NONZERO_WEIGHTS;const r=(0,u._1)(t,"labels","logLoss"),o=(0,u._1)(e,"predictions","logLoss");let c=null;null!=n&&(c=(0,u._1)(n,"weights","logLoss")),(0,h.k5)(r.shape,o.shape,"Error in logLoss: ");const l=(0,on.i)(1),d=(0,on.i)(a),p=(0,ve.W)((0,A.d)(r,(0,Gt.c)((0,i.I)(o,d)))),f=(0,A.d)((0,ge.l)(l,r),(0,Gt.c)((0,i.I)((0,ge.l)(l,o),d))),m=(0,ge.l)(p,f);return Qa(m,c,s)}});const as=(0,d.op)({meanSquaredError_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Ya.SUM_BY_NONZERO_WEIGHTS;const s=(0,u._1)(t,"labels","meanSquaredError"),r=(0,u._1)(e,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,u._1)(n,"weights","meanSquaredError")),(0,h.k5)(s.shape,r.shape,"Error in meanSquaredError: ");const i=(0,Cn.$)(s,r);return Qa(i,o,a)}});const ss=(0,d.op)({sigmoidCrossEntropy_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ya.SUM_BY_NONZERO_WEIGHTS,o=(0,u._1)(t,"multiClassLabels","sigmoidCrossEntropy");const c=(0,u._1)(e,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,u._1)(n,"weights","sigmoidCrossEntropy")),(0,h.k5)(o.shape,c.shape,"Error in sigmoidCrossEntropy: "),a>0){const t=(0,on.i)(a),e=(0,on.i)(1),n=(0,on.i)(.5);o=(0,i.I)((0,A.d)(o,(0,ge.l)(e,t)),(0,A.d)(n,t))}const d=function(t,e){const n=(0,u._1)(t,"labels","sigmoidCrossEntropyWithLogits"),a=(0,u._1)(e,"logits","sigmoidCrossEntropyWithLogits");(0,h.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=(0,Qe.U)(a),o=(0,A.d)(a,n),c=(0,Ht.K)((0,It.Q)((0,ve.W)((0,s.W)(a))));return(0,i.I)((0,ge.l)(r,o),c)}(o,c);return Qa(d,l,r)}});const rs=(0,d.op)({softmaxCrossEntropy_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ya.SUM_BY_NONZERO_WEIGHTS,r=(0,u._1)(t,"onehotLabels","softmaxCrossEntropy");const o=(0,u._1)(e,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=(0,u._1)(n,"weights","softmaxCrossEntropy")),(0,h.k5)(r.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const t=(0,on.i)(a),e=(0,on.i)(1),n=(0,on.i)(r.shape[1]);r=(0,i.I)((0,A.d)(r,(0,ge.l)(e,t)),(0,ft.h)(t,n))}const l=function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(e.rank," ")+"and dim was ".concat(n));const a=(0,fa.cb)(((t,e,a)=>{const s=(0,qt.l)(e,[n],!0),r=(0,ge.l)((0,S.p)(e,"float32"),s);a([t,r]);const o=(0,ve.W)((0,A.d)(r,t));return{value:(0,Rn.S)(o,[n]),gradFunc:(t,e)=>{const[a,s]=e,r=(0,fe.rv)(t.shape,[n]);return[(0,A.d)((0,T.X)(t,r),(0,ge.l)((0,S.p)(a,"float32"),(0,It.Q)(s))),(0,A.d)((0,T.X)(t,r),(0,ge.l)((0,It.Q)(s),(0,S.p)(a,"float32")))]}}}));return a(t,e)}(r,o);return Qa(l,c,s)}});const os=(0,d.op)({sparseFillEmptyRows_:function(t,e,n,a){const s=(0,u._1)(t,"indices","sparseFillEmptyRows","int32"),r=(0,u._1)(e,"values","sparseFillEmptyRows"),o=(0,u._1)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,u._1)(a,"defaultValue","sparseFillEmptyRows",r.dtype);if(2!==s.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(s.shape));if(1!==r.rank)throw new Error("Values should be Tensor1D but received shape ".concat(r.shape));if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(o.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const h={indices:s,values:r,denseShape:o,defaultValue:i},d=c.BV.runKernel(l.O3z,h);return{outputIndices:d[0],outputValues:d[1],emptyRowIndicator:d[2],reverseIndexMap:d[3]}}});const is=(0,d.op)({sparseReshape_:function(t,e,n){const a=(0,u._1)(t,"inputIndices","sparseReshape","int32"),s=(0,u._1)(e,"inputShape","sparseReshape","int32"),r=(0,u._1)(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==s.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(s.shape));if(1!==r.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(r.shape));const o={inputIndices:a,inputShape:s,newShape:r},i=c.BV.runKernel(l.nhH,o);return{outputIndices:i[0],outputShape:i[1]}}});const cs=(0,d.op)({sparseSegmentMean_:function(t,e,n){const a=(0,u._1)(t,"data","sparseSegmentMean"),s=(0,u._1)(e,"indices","sparseSegmentMean","int32"),r=(0,u._1)(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(s.shape));if(1!==r.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(r.shape));const o={data:a,indices:s,segmentIds:r};return c.BV.runKernel(l.w3H,o)}});const ls=(0,d.op)({sparseSegmentSum_:function(t,e,n){const a=(0,u._1)(t,"data","sparseSegmentSum"),s=(0,u._1)(e,"indices","sparseSegmentSum","int32"),r=(0,u._1)(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(s.shape));if(1!==r.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(r.shape));const o={data:a,indices:s,segmentIds:r};return c.BV.runKernel(l.ZjV,o)}});const us=(0,d.op)({stringNGrams_:function(t,e,n,a,s,r,o,i){const h=(0,u._1)(t,"data","stringNGrams","string");if("string"!==h.dtype)throw new Error("Data must be of datatype string");if(1!==h.shape.length)throw new Error("Data must be a vector, saw: ".concat(h.shape));const d=(0,u._1)(e,"dataSplits","stringNGrams");if("int32"!==d.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:a,leftPad:s,rightPad:r,padWidth:o,preserveShortSequences:i},f={data:h,dataSplits:d},m=c.BV.runKernel(l._JP,f,p);return{nGrams:m[0],nGramsSplits:m[1]}}});const hs=(0,d.op)({stringSplit_:function(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=(0,u._1)(t,"input","stringSplit","string"),s=(0,u._1)(e,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==s.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(s.shape));const r={skipEmpty:n},o={input:a,delimiter:s},i=c.BV.runKernel(l.s1s,o,r);return{indices:i[0],values:i[1],shape:i[2]}}});const ds=(0,d.op)({stringToHashBucketFast_:function(t,e){const n=(0,u._1)(t,"input","stringToHashBucketFast","string"),a={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return c.BV.runKernel(l.XkS,s,a)}});const ps=(0,d.op)({staticRegexReplace_:function(t,e,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const s=(0,u._1)(t,"input","staticRegexReplace","string"),r={pattern:e,rewrite:n,replaceGlobal:a};return c.BV.runKernel(l.e0R,{x:s},r)}}),fs={fft:wn.k,ifft:kn.S,rfft:Sn.Q,irfft:In.w},ms={hammingWindow:Sa,hannWindow:Na,frame:Ta,stft:Ca},gs={flipLeftRight:_a,grayscaleToRGB:Aa,resizeNearestNeighbor:Wa.j,resizeBilinear:Va.I,rgbToGrayscale:Da,rotateWithOffset:Ra,cropAndResize:Ea,nonMaxSuppression:Fa,nonMaxSuppressionAsync:Ba,nonMaxSuppressionWithScore:La,nonMaxSuppressionWithScoreAsync:za,nonMaxSuppressionPadded:Ua,nonMaxSuppressionPaddedAsync:Pa,threshold:Ga,transform:Ha},ys={bandPart:ja,gramSchmidt:Xa,qr:Za},bs={absoluteDifference:Ja,computeWeightedLoss:Qa,cosineDistance:$a,hingeLoss:ts,huberLoss:es,logLoss:ns,meanSquaredError:as,sigmoidCrossEntropy:ss,softmaxCrossEntropy:rs},xs={sparseFillEmptyRows:os,sparseReshape:is,sparseSegmentMean:cs,sparseSegmentSum:ls},vs={stringNGrams:us,stringSplit:hs,stringToHashBucketFast:ds,staticRegexReplace:ps}},1970:(t,e,n)=>{"use strict";n.d(e,{v:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({pad_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o=(0,r._1)(t,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:e,constantValue:n},c={x:o};return a.BV.runKernel(s.lyA,c,i)}})},7226:(t,e,n)=>{"use strict";n.d(e,{d:()=>d});var a=n(8354),s=n(6147),r=n(9204),o=n(6994),i=n(9151),c=n(5777),l=n(8640),u=n(5561),h=n(5696);const d=(0,l.op)({pool_:function(t,e,n,l,d,p,f){null==d&&(d=[1,1]),null==p&&(p=1),0===l&&(l="valid");const m=(0,a._1)(t,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,u.X)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),s.hu(i.jT(p,d),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(p," and dilations '").concat(d,"'")));const b=i.Xw(g.shape,e,p,d,l),x=[b.dilationHeight,b.dilationWidth];let v;v="same"===l?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))),a=n.map((t=>t-1)),s=a.map((t=>Math.floor(t/2))),r=a.map(((t,e)=>t-s[e]));return a.map(((t,e)=>[s[e],r[e]]))}([b.filterHeight,b.filterWidth],x):[[0,0],[0,0]];const w=1===x[0]&&1===x[1],[k,I]=function(t,e,n){const a=n.map((t=>t[0])),s=n.map((t=>t[1])),r=t.concat(a,s),o=e.map(((t,e)=>(t-r[e]%t)%t)),i=s.map(((t,e)=>t+o[e])),c=e.map(((t,e)=>[a[e],i[e]])),l=e.map(((t,e)=>[0,o[e]]));return[c,l]}([b.inHeight,b.inWidth],x,v),S=w?l:"valid",N=w?g:(0,h.f)(g,x,k),T=("avg"===n?()=>(0,r.w)(N,e,p,S,f):()=>(0,c._)(N,e,p,S,f))(),C=w?T:(0,o.E)(T,x,I);return y?(0,u.X)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},4334:(t,e,n)=>{"use strict";n.d(e,{s:()=>i});var a=n(318),s=n(2145),r=n(9064),o=n(8354);const i=(0,n(8640).op)({pow_:function(t,e){let n=(0,o._1)(t,"base","pow"),i=(0,o._1)(e,"exp","pow");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(s.pe_,c)}})},6859:(t,e,n)=>{"use strict";n.d(e,{A:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({prelu_:function(t,e){const n={x:(0,r._1)(t,"x","prelu"),alpha:(0,r._1)(e,"alpha","prelu")};return a.BV.runKernel(s.o0g,n)}})},4600:(t,e,n)=>{"use strict";function a(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(t.toString(e))}n.d(e,{S:()=>a})},7722:(t,e,n)=>{"use strict";n.d(e,{W:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(9118);const i=(0,n(8640).op)({prod_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,r._1)(t,"x","prod");"bool"===i.dtype&&(i=(0,o.p)(i,"int32"));const c={x:i},l={axis:e,keepDims:n};return a.BV.runKernel(s.DlI,c,l)}})},6972:(t,e,n)=>{"use strict";n.d(e,{k:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({real_:function(t){const e={input:(0,r._1)(t,"input","real")};return a.BV.runKernel(s.xJR,e)}})},2209:(t,e,n)=>{"use strict";n.d(e,{M:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({reciprocal_:function(t){const e={x:(0,r._1)(t,"x","reciprocal")};return a.BV.runKernel(s.$HU,e)}})},7539:(t,e,n)=>{"use strict";n.d(e,{U:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({relu_:function(t){const e={x:(0,r._1)(t,"x","relu")};return a.BV.runKernel(s.qkr,e)}})},5900:(t,e,n)=>{"use strict";n.d(e,{b:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({relu6_:function(t){const e={x:(0,r._1)(t,"x","relu6")};return a.BV.runKernel(s.SbG,e)}})},5561:(t,e,n)=>{"use strict";n.d(e,{X:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({reshape_:function(t,e){const n={x:(0,r._1)(t,"x","reshape","string_or_numeric")},o={shape:e};return a.BV.runKernel(s.HZH,n,o)}})},6770:(t,e,n)=>{"use strict";n.d(e,{G:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({reverse_:function(t,e){const n={x:(0,r._1)(t,"x","reverse")},o={dims:e};return a.BV.runKernel(s.mKl,n,o)}})},766:(t,e,n)=>{"use strict";n.d(e,{N:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({round_:function(t){const e={x:(0,r._1)(t,"x","round")};return a.BV.runKernel(s.e07,e)}})},5115:(t,e,n)=>{"use strict";n.d(e,{b:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({rsqrt_:function(t){const e={x:(0,r._1)(t,"x","rsqrt","float32")};return a.BV.runKernel(s.bV0,e)}})},7067:(t,e,n)=>{"use strict";n.d(e,{i:()=>r});var a=n(115),s=n(7960);function r(t,e){if(((0,a.isTypedArray)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&(0,a.isTypedArray)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.H)(t,[],[],e)}},8604:(t,e,n)=>{"use strict";n.d(e,{SU:()=>o,b0:()=>r,l5:()=>s});var a=n(6147);function s(t,e,n){const a=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,r="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(e.shape,", shape: ").concat(t)+", sliceDim: ".concat(a,", and batchDim: ").concat(s,".");if(n.rank<s)throw new Error(r+" update.rank < ".concat(s,". "));if(t.length<a+(n.rank-s))throw new Error(r+" Output shape length < ".concat(a+(n.rank-s)));if(n.rank!==s+t.length-a)throw new Error(r+" update.rank != ".concat(s+t.length-a));for(let o=0;o<s;++o)if(n.shape[o]!==e.shape[o])throw new Error(r+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(e.shape[o],")."));for(let o=0;o<n.rank-s;++o)if(n.shape[o+s]!==t[o+a])throw new Error(r+" updates.shape[".concat(o+s,"] (").concat(n.shape[o+s],") != shape[").concat(o+s,"] (").concat(t[o+s],")"))}function r(t,e,n){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if(t.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(e.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: ".concat(e.shape));if(0===t.size)throw new Error("Updates specified for empty output. updates shape: ".concat(t.shape))}s(n,e,t)}function o(t,e,n){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=n.length;let i=1;for(let a=r;a<o;++a)i*=n[a];const c=r<1?1:r;return{sliceRank:r,numUpdates:(0,a.NA)(e.shape)/c,sliceSize:i,strides:[...(0,a.e3)(n.slice(0,r)),1],outputSize:(0,a.NA)(n)}}},413:(t,e,n)=>{"use strict";n.d(e,{U:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({selu_:function(t){const e={x:(0,r._1)(t,"x","selu")};return a.BV.runKernel(s.oFR,e)}})},349:(t,e,n)=>{"use strict";n.d(e,{$:()=>s,y:()=>a});const a=1.7580993408473768,s=1.0507009873554805},119:(t,e,n)=>{"use strict";n.d(e,{U:()=>l});var a=n(8354),s=n(6147),r=n(3457),o=n(1147),i=n(8640),c=n(5561);const l=(0,i.op)({separableConv2d_:function(t,e,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const d=(0,a._1)(t,"x","separableConv2d"),p=(0,a._1)(e,"depthwiseFilter","separableConv2d"),f=(0,a._1)(n,"pointwiseFilter","separableConv2d");let m=d,g=!1;if(3===d.rank&&(g=!0,m=(0,c.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),"NCHW"===h)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.hu(4===m.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,"."))),s.hu(4===p.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),s.hu(4===f.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),s.hu(1===f.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],"."))),s.hu(1===f.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],".")));const y=p.shape[2],b=p.shape[3];s.hu(f.shape[2]===y*b,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(y*b,", ")+"but got ".concat(f.shape[2],".")));const x=(0,o.B)(m,p,i,l,h,u),v=(0,r.T)(x,f,1,"valid",h);return g?(0,c.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},7643:(t,e,n)=>{"use strict";n.d(e,{X:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({sigmoid_:function(t){const e={x:(0,r._1)(t,"x","sigmoid","float32")};return a.BV.runKernel(s.a5O,e)}})},2070:(t,e,n)=>{"use strict";n.d(e,{X:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({sign_:function(t){const e={x:(0,r._1)(t,"x","sign")};return a.BV.runKernel(s.i5y,e)}})},7254:(t,e,n)=>{"use strict";n.d(e,{O:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({sin_:function(t){const e={x:(0,r._1)(t,"x","sin","float32")};return a.BV.runKernel(s.RQH,e)}})},7657:(t,e,n)=>{"use strict";n.d(e,{R:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({sinh_:function(t){const e={x:(0,r._1)(t,"x","sinh")};return a.BV.runKernel(s.wYB,e)}})},9238:(t,e,n)=>{"use strict";n.d(e,{t:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({slice_:function(t,e,n){const o=(0,r._1)(t,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},c={begin:e,size:n};return a.BV.runKernel(s.p2w,i,c)}})},2875:(t,e,n)=>{"use strict";n.r(e),n.d(e,{assertParamsValid:()=>o,computeFlatOffset:()=>x,computeOutShape:()=>c,getNormalizedAxes:()=>d,isSliceContinous:()=>b,maskToAxes:()=>i,parseSliceParams:()=>v,sliceInfo:()=>w,startForAxis:()=>g,startIndicesWithElidedDims:()=>p,stopForAxis:()=>y,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>m,stridesWithElidedDims:()=>l});var a=n(6147);const s=-2,r=-1;function o(t,e,n){const s=t.shape.length;a.hu(s===e.length,(()=>"Error in slice".concat(s,"D: Length of begin ").concat(e," must ")+"match the rank of the array (".concat(s,")."))),a.hu(s===n.length,(()=>"Error in slice".concat(s,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(s,").")));for(let r=0;r<s;++r)a.hu(e[r]+n[r]<=t.shape[r],(()=>"Error in slice".concat(s,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(e[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(t.shape[r],")")))}function i(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function c(t,e,n){const a=[];for(let s=0;s<t.length;s++)a[s]=Math.ceil((e[s]-t[s])/n[s]);return a}function l(t,e,n,a){const s=[...t];for(let r=s.length;r<a.length;r++)s.push(1);for(let r=0;r<n;r++)0===r?s[e]=1:(s.splice(e,0,1),s.pop());return s}function u(t,e,n){return n<=t?n:n-(e-1)}function h(t,e){const n=[];for(let a=0;a<t;a++)n.push(e+a);return n}function d(t,e,n,a,s,r,o,i,c){const u=t.length;let h=new Array(u),d=new Array(u),b=new Array(u);if(e.length&&n>0){const c=e[0],u=n+1;h=p(o,c,u,a,t),d=f(i,c,u,s,t),b=l(r,c,u,t)}else for(let l=0;l<u;l++)h[l]=g(o,a,r,t,l,c),d[l]=y(i,s,r,t,l,c),b[l]=m(r,l,c);return{begin:h,end:d,strides:b}}function p(t,e,n,a,s){const r=[...s],o=h(n,e);for(let i=0;i<r.length;i++)if(o.indexOf(i)>-1)r[i]=0;else{const s=u(e,n,i);let o=a[s];t&1<<s&&(o=0),r[i]=o}return r}function f(t,e,n,s,r){const o=[...r],i=h(n,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const r=u(e,n,a);let i=s[r];t&1<<r&&(i=Number.MAX_SAFE_INTEGER),o[a]=i}for(let c=0;c<o.length;c++){const t=r[c];o[c]<0&&(o[c]+=t),o[c]=a.uZ(0,o[c],r[c])}return o}function m(t,e,n){let a=t[e];return(n&1<<e||null==a)&&(a=1),a}function g(t,e,n,s,r,o){let i=e[r];const c=n[r]||1;(t&1<<r||o&1<<r||null==i)&&(i=c>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=a.uZ(0,i,l-1),i}function y(t,e,n,s,r,o){let i=e[r];const c=n[r]||1;(t&1<<r||o&1<<r||null==i)&&(i=c>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=c>0?a.uZ(0,i,l):a.uZ(-1,i,l-1),i}function b(t,e,n){let a=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){a=s;break}for(let s=a+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function x(t,e){let n=t.length>0?t[t.length-1]:1;for(let a=0;a<t.length-1;a++)n+=t[a]*e[a];return n}function v(t,e,n){let s;const r=t.shape.length;let o;return s="number"===typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),s.forEach((t=>{a.hu(-1!==t,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,o=o.map(((e,n)=>e>=0?e:(a.hu(-1===e,(()=>"Negative size values should be exactly -1 but got "+"".concat(e," for the slice() size at index ").concat(n,"."))),t.shape[n]-s[n]))),[s,o]}function w(t,e,n,a,o,i,c,l,u){let h;if(null==a?(h=new Array(e.length),h.fill(1)):h=a,null!=c&&0!==(c&c-1))throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const p={dims:h.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:h.slice(),beginMask:o,endMask:i,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:u};for(let s=0;s<p.dims;s++)d&&0!==(1<<s&l)&&p.numAddAxisAfterEllipsis++,1<<s&c&&(d=!0);d||(p.ellipsisMask|=1<<p.dims,p.dims++);const f={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let a=0;a<t.dims;a++)if(1<<a&t.ellipsisMask){const s=Math.min(e.dims-(t.dims-a)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<s;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&t.newAxisMask)e.finalShapeGatherIndices.push(s),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(e.dims," dims, ").concat(e.begin.length,"."));null!=t.begin&&(e.begin[n]=t.begin[a]),null!=t.end&&(e.end[n]=t.end[a]),e.strides[n]=t.strides[a],t.beginMask&1<<a&&(e.beginMask|=1<<n),t.endMask&1<<a&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<a?(e.finalShapeGatherIndices.push(r),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(a)),e.inputShapeGatherIndicesSparse[n]=a,n++}}(p,f);let m=!0,g=!0,y=!0;const b=[],x=[];for(let s=0;s<t.length;++s){if(0===f.strides[s])throw Error("strides[".concat(s,"] must be non-zero"));const e=!!(f.shrinkAxisMask&1<<s),n=t[s];if(-1===n){b.push(e?1:-1);continue}const a=[f.beginMask&1<<s,f.endMask&1<<s],r=[f.strides[s]>0?0:-1,f.strides[s]>0?n:n-1];if(e&&f.strides[s]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===f.strides[s];const o=!!(f.beginMask&1<<s&&f.endMask&1<<s);if(f.beginValid&&f.endValid){if(e){const t=f.begin[s]<0?n+f.begin[s]:f.begin[s];if(f.begin[s]=t,f.end[s]=f.begin[s]+1,t<0||t>=n)throw Error("slice index ".concat(f.begin[s]," of dimension ").concat(s," out of bounds."))}else f.begin[s]=k(f.begin[s],0,f.strides[s],n,a,r),f.end[s]=k(f.end[s],1,f.strides[s],n,a,r);const t=1===f.strides[s]&&0===f.begin[s]&&f.end[s]===n;m=m&&t,g=g&&(0===s&&1===f.strides[s]||t)}else m=m&&1===f.strides[s]&&o,g=g&&(0===s&&1===f.strides[s]||o);let i,c=!1;if(f.beginValid&&f.endValid?(i=f.end[s]-f.begin[s],c=!0):e?(i=1,c=!0):o&&n>=0&&(i=f.strides[s]<0?-n:n,c=!0),c){let t;t=0===i||i<0!==f.strides[s]<0?0:Math.trunc(i/f.strides[s])+(i%f.strides[s]!==0?1:0),b.push(t)}else b.push(-1)}for(let r=0;r<f.finalShapeGatherIndices.length;++r){const t=f.finalShapeGatherIndices[r];t>=0?x.push(b[t]):t===s&&x.push(1)}return{finalShapeSparse:x.filter(((t,e)=>f.finalShapeGatherIndices[e]!==s)),finalShape:x,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:f.begin,end:f.end,strides:f.strides}}function k(t,e,n,a,s,r){if(s[e])return n>0?r[e]:r[e+1&1];{const e=t<0?a+t:t;return e<r[0]?r[0]:e>r[1]?r[1]:e}}},4910:(t,e,n)=>{"use strict";n.d(e,{X:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({softmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,r._1)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(e));const o={logits:n},i={dim:e};return a.BV.runKernel(s.Gcp,o,i)}})},4626:(t,e,n)=>{"use strict";n.d(e,{W:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({softplus_:function(t){const e={x:(0,r._1)(t,"x","softplus")};return a.BV.runKernel(s.MRv,e)}})},5696:(t,e,n)=>{"use strict";n.d(e,{f:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(6147);const i=(0,n(8640).op)({spaceToBatchND_:function(t,e,n){const i=(0,r._1)(t,"x","spaceToBatchND");o.hu(i.rank>=1+e.length,(()=>"input rank ".concat(i.rank," should be > than [blockShape] ").concat(e.length))),o.hu(n.length===e.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(e.length))),o.hu(i.shape.reduce(((t,a,s)=>s>0&&s<=e.length?t&&(a+n[s-1][0]+n[s-1][1])%e[s-1]===0:t),!0),(()=>"input spatial dimensions ".concat(i.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(e.toString())));const c={x:i},l={blockShape:e,paddings:n};return a.BV.runKernel(s.TQc,c,l)}})},7635:(t,e,n)=>{"use strict";n.d(e,{k:()=>o});var a=n(318),s=n(2145),r=n(6147);const o=(0,n(8640).op)({fft_:function(t){(0,r.hu)("complex64"===t.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(t.dtype,".")));const e={input:t};return a.BV.runKernel(s.vwp,e)}})},530:(t,e,n)=>{"use strict";n.d(e,{S:()=>o});var a=n(318),s=n(2145),r=n(6147);const o=(0,n(8640).op)({ifft_:function(t){(0,r.hu)("complex64"===t.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(t.dtype,".")));const e={input:t};return a.BV.runKernel(s.Qg5,e)}})},774:(t,e,n)=>{"use strict";n.d(e,{w:()=>f});var a=n(9253),s=n(4933),r=n(6996),o=n(651),i=n(8640),c=n(6972),l=n(5561),u=n(6770),h=n(7067),d=n(9238),p=n(530);const f=(0,i.op)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let i;if(e<=2){const a=(0,l.X)(t,[n,e]);i=(0,p.S)(a)}else{const f=[n,2*(e-1)],m=(0,l.X)((0,c.k)(t),[n,e]),g=(0,l.X)((0,r.a)(t),[n,e]),y=(0,u.G)((0,d.t)(m,[0,1],[n,e-2]),1),b=(0,o.d)((0,u.G)((0,d.t)(g,[0,1],[n,e-2]),1),(0,h.i)(-1)),x=(0,s.z)([m,y],1),v=(0,s.z)([g,b],1),w=(0,l.X)((0,a.P)(x,v),[f[0],f[1]]);i=(0,p.S)(w)}if(i=(0,c.k)(i),3===t.rank&&0!==t.shape[0]){const e=i,n=t.shape[0];i=(0,l.X)(i,[n,i.shape[0]/n,i.shape[1]]),e.dispose()}return i}})},4617:(t,e,n)=>{"use strict";n.d(e,{Q:()=>m});var a=n(6147),s=n(9253),r=n(4933),o=n(6996),i=n(8640),c=n(6972),l=n(5561),u=n(9238),h=n(2588),d=n(7742),p=n(7293),f=n(7635);const m=(0,i.op)({rfft_:function(t,e){(0,a.hu)("float32"===t.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(t.dtype)));let n=t.shape[t.shape.length-1];const i=t.size/n;let m;if(null!=e&&e<n){const a=t.shape.map((t=>0)),s=t.shape.map((t=>t));s[t.shape.length-1]=e,m=(0,u.t)(t,a,s),n=e}else if(null!=e&&e>n){const a=t.shape.map((t=>t));a[t.shape.length-1]=e-n,m=(0,r.z)([t,(0,d.l)(a)],t.shape.length-1),n=e}else m=t;const g=(0,p.P)(m),y=(0,l.X)((0,s.P)(m,g),[i,n]),b=(0,f.k)(y),x=Math.floor(n/2)+1,v=(0,c.k)(b),w=(0,o.a)(b),k=(0,h.V)(v,[x,n-x],v.shape.length-1),I=(0,h.V)(w,[x,n-x],w.shape.length-1),S=m.shape.slice();return S[m.shape.length-1]=x,(0,l.X)((0,s.P)(k[0],I[0]),S)}})},2588:(t,e,n)=>{"use strict";n.d(e,{V:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({split_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o={x:(0,r._1)(t,"x","split")},i={numOrSizeSplits:e,axis:n};return a.BV.runKernel(s.L8s,o,i)}})},6902:(t,e,n)=>{"use strict";n.d(e,{_:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({sqrt_:function(t){const e={x:(0,r._1)(t,"x","sqrt","float32")};return a.BV.runKernel(s.FKq,e)}})},7391:(t,e,n)=>{"use strict";n.d(e,{h:()=>r});var a=n(318),s=n(8354);const r=(0,n(8640).op)({square_:function(t){const e=(0,s._1)(t,"x","square");return a.BV.runKernel("Square",{x:e},{})}})},7993:(t,e,n)=>{"use strict";n.d(e,{$:()=>c});var a=n(318),s=n(2145),r=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({squaredDifference_:function(t,e){let n=(0,o._1)(t,"a","squaredDifference"),c=(0,o._1)(e,"b","squaredDifference");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(s._tC,l,{})}})},3931:(t,e,n)=>{"use strict";n.d(e,{L:()=>i});var a=n(8354),s=n(6147),r=n(8640),o=n(5561);const i=(0,r.op)({squeeze_:function(t,e){const n=(0,a._1)(t,"x","squeeze","string_or_numeric");return(0,o.X)(n,(0,s.bp)(n.shape,e).newShape)}})},8306:(t,e,n)=>{"use strict";n.d(e,{k:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(6147);const i=(0,n(8640).op)({stack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,r.sI)(t,"tensors","stack","string_or_numeric");o.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.hu(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,c={axis:e};return a.BV.runKernel(s.QiL,i,c)}})},4031:(t,e,n)=>{"use strict";n.d(e,{N:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({step_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,r._1)(t,"x","step")},o={alpha:e};return a.BV.runKernel(s.h8e,n,o)}})},9017:(t,e,n)=>{"use strict";n.d(e,{N:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({stridedSlice_:function(t,e,n,o){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,h=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const d={x:(0,r._1)(t,"x","stridedSlice","string_or_numeric")},p={begin:e,end:n,strides:o,beginMask:i,endMask:c,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:h};return a.BV.runKernel(s.jQk,d,p)}})},4774:(t,e,n)=>{"use strict";n.d(e,{l:()=>i});var a=n(318),s=n(2145),r=n(9064),o=n(8354);const i=(0,n(8640).op)({sub_:function(t,e){let n=(0,o._1)(t,"a","sub"),i=(0,o._1)(e,"b","sub");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(s.Tr8,c)}})},227:(t,e,n)=>{"use strict";n.d(e,{S:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(9118);const i=(0,n(8640).op)({sum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,r._1)(t,"x","sum");"bool"===i.dtype&&(i=(0,o.p)(i,"int32"));const c={x:i},l={axis:e,keepDims:n};return a.BV.runKernel(s.GBy,c,l)}})},6999:(t,e,n)=>{"use strict";n.d(e,{O:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({tan_:function(t){const e={x:(0,r._1)(t,"x","tan","float32")};return a.BV.runKernel(s.sEM,e)}})},1744:(t,e,n)=>{"use strict";n.d(e,{A:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({tanh_:function(t){const e={x:(0,r._1)(t,"x","tanh","float32")};return a.BV.runKernel(s.MIZ,e)}})},2442:(t,e,n)=>{"use strict";n.d(e,{X:()=>r});var a=n(8354),s=n(7960);function r(t,e,n){const r=(0,a.C)(t,n);return(0,s.H)(t,e,r,n)}},3123:(t,e,n)=>{"use strict";n.d(e,{w:()=>o});var a=n(8354),s=n(6147),r=n(7960);function o(t,e,n){if((0,s.Cq)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const o=(0,a.C)(t,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,r.H)(t,e,o,n)}},7960:(t,e,n)=>{"use strict";n.d(e,{H:()=>i});var a=n(318),s=n(3525),r=n(6147),o=n(115);function i(t,e,n,i){if(null==i)i=(0,r.D2)(t);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,s.$F)(t)||(0,s.Oq)(t)){if("float32"!==i&&"int32"!==i)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(i,"."));return a.BV.backend.createTensorFromGPUData(t,e||n,i)}if(!(0,o.isTypedArray)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){(0,r.Mu)(e);const t=(0,r.NA)(e),a=(0,r.NA)(n);(0,r.hu)(t===a,(()=>"Based on the provided shape, [".concat(e,"], the tensor should have ")+"".concat(t," values but has ").concat(a)));for(let s=0;s<n.length;++s){const t=n[s],a=s!==n.length-1||t!==(0,r.NA)(e.slice(s));(0,r.hu)(n[s]===e[s]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(e,"). ")))}}return(0,o.isTypedArray)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==i?(0,o.toTypedArray)(t,i):(0,o.flatten)(t,[],!0),a.BV.makeTensor(t,e,i)}},2343:(t,e,n)=>{"use strict";n.d(e,{G:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(6147);const i=(0,n(8640).op)({tile_:function(t,e){const n=(0,r._1)(t,"x","tile","string_or_numeric");o.hu(n.rank===e.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(e,".")));const i={x:n},c={reps:e};return a.BV.runKernel(s.n9L,i,c)}})},9085:(t,e,n)=>{"use strict";n.d(e,{h:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({topk_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const o=(0,r._1)(t,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(e<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(e));if(e>i)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(i,") ")+"but got ".concat(e));const c={x:o},l={k:e,sorted:n},[u,h]=a.BV.runKernel(s.cWu,c,l);return{values:u,indices:h}}})},1240:(t,e,n)=>{"use strict";n.d(e,{p:()=>p});var a=n(318),s=n(5875),r=n(2145),o=n(8354),i=n(6147),c=n(9253),l=n(6996),u=n(4362),h=n(8640),d=n(6972);const p=(0,h.op)({transpose_:function(t,e,n){const h=(0,o._1)(t,"x","transpose");if(null==e&&(e=h.shape.map(((t,e)=>e)).reverse()),i.hu(h.rank===e.length,(()=>"Error in transpose: rank of input ".concat(h.rank," ")+"must match length of perm ".concat(e,"."))),e.forEach((t=>{i.hu(t>=0&&t<h.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(h.rank-1)+" but got ".concat(e)))})),h.rank<=1)return h.clone();const p={x:h},f={perm:e};return"complex64"===h.dtype?(0,s.lu)((()=>{let t=(0,d.k)(h),e=(0,l.a)(h);return t=a.BV.runKernel(r.G3Y,{x:t},f),e=a.BV.runKernel(r.G3Y,{x:e},f),n&&(e=(0,u.W)(e)),(0,c.P)(t,e)})):a.BV.runKernel(r.G3Y,p,f)}})},4860:(t,e,n)=>{"use strict";n.d(e,{T:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(6147);const i=(0,n(8640).op)({unique_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,r._1)(t,"x","unique","string_or_numeric");(0,o.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const i={x:n},c={axis:e},[l,u]=a.BV.runKernel(s.kpP,i,c);return{values:l,indices:u}}})},6918:(t,e,n)=>{"use strict";n.d(e,{p:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(6147);const i=(0,n(8640).op)({unsortedSegmentSum_:function(t,e,n){const i=(0,r._1)(t,"x","unsortedSegmentSum"),c=(0,r._1)(e,"segmentIds","unsortedSegmentSum","int32");(0,o.hu)((0,o.GN)(n),(()=>"numSegments must be of dtype int"));const l={x:i,segmentIds:c},u={numSegments:n};return a.BV.runKernel(s.Qvg,l,u)}})},4566:(t,e,n)=>{"use strict";n.d(e,{H:()=>i});var a=n(318),s=n(2145),r=n(8354),o=n(6147);const i=(0,n(8640).op)({unstack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,r._1)(t,"x","unstack","string_or_numeric");o.hu(e>=-n.shape.length&&e<n.shape.length,(()=>"Axis = ".concat(e," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const i={value:n},c={axis:e};return a.BV.runKernel(s.ToN,i,c)}})},329:(t,e,n)=>{"use strict";n.d(e,{a:()=>c});var a=n(318),s=n(2145),r=n(8354),o=n(9742),i=n(5774);const c=(0,n(8640).op)({where_:function(t,e,n){const c=(0,r._1)(e,"a","where"),l=(0,r._1)(n,"b","where"),u=(0,r._1)(t,"condition","where","bool"),h=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(u.shape,c.shape),l.shape),d={condition:(0,o.U)(u,h),t:(0,o.U)(c,h),e:(0,o.U)(l,h)};return a.BV.runKernel(s.PhF,d)}})},7742:(t,e,n)=>{"use strict";n.d(e,{l:()=>o});var a=n(318),s=n(6147),r=n(9253);function o(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,s.Mu)(t),"complex64"===e){const e=o(t,"float32"),n=o(t,"float32");return(0,r.P)(e,n)}const n=(0,s.wT)((0,s.NA)(t),e);return a.BV.makeTensor(n,t,e)}},7293:(t,e,n)=>{"use strict";n.d(e,{P:()=>o});var a=n(318),s=n(2145),r=n(8354);const o=(0,n(8640).op)({zerosLike_:function(t){const e={x:(0,r._1)(t,"x","zerosLike")};return a.BV.runKernel(s.RuY,e)}})},1539:(t,e,n)=>{"use strict";function a(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}n.d(e,{j:()=>a})},4376:(t,e,n)=>{"use strict";n.d(e,{es:()=>w,YD:()=>f,_w:()=>I,t3:()=>k,FZ:()=>v,Vp:()=>x,Vi:()=>b});var a=n(6581),s=n(6147);const r=20,o=3,i=7;function c(t,e,n,a){const r=(0,s.e3)(e),o=function(t,e,n,a){const r=(0,s.NA)(e),o=a[a.length-1],i=new Array(o).fill(0),c=e.length,u="complex64"===n?d(t):t;if(c>1)for(let s=0;s<r/o;s++){const t=s*o;for(let e=0;e<o;e++)i[e]=Math.max(i[e],l(u[t+e],0,n).length)}return i}(t,e,n,r),i=e.length,c=h(t,e,n,r,o),u=["Tensor"];return a&&(u.push("  dtype: ".concat(n)),u.push("  rank: ".concat(i)),u.push("  shape: [".concat(e,"]")),u.push("  values:")),u.push(c.map((t=>"    "+t)).join("\n")),u.join("\n")}function l(t,e,n){let a;return a=Array.isArray(t)?"".concat(parseFloat(t[0].toFixed(i))," + ")+"".concat(parseFloat(t[1].toFixed(i)),"j"):(0,s.HD)(t)?"'".concat(t,"'"):"bool"===n?u(t):parseFloat(t.toFixed(i)).toString(),(0,s.oj)(a,e)}function u(t){return 0===t?"false":"true"}function h(t,e,n,a,s){let i=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const c="complex64"===n?2:1,p=e[0],f=e.length;if(0===f){if("complex64"===n){return[l(d(t)[0],0,n)]}return"bool"===n?[u(t[0])]:[t[0].toString()]}if(1===f){if(p>r){const e=o*c;let a=Array.from(t.slice(0,e)),r=Array.from(t.slice((p-o)*c,p*c));return"complex64"===n&&(a=d(a),r=d(r)),["["+a.map(((t,e)=>l(t,s[e],n))).join(", ")+", ..., "+r.map(((t,e)=>l(t,s[p-o+e],n))).join(", ")+"]"]}return["["+("complex64"===n?d(t):Array.from(t)).map(((t,e)=>l(t,s[e],n))).join(", ")+"]"]}const m=e.slice(1),g=a.slice(1),y=a[0]*c,b=[];if(p>r){for(let e=0;e<o;e++){const a=e*y,r=a+y;b.push(...h(t.slice(a,r),m,n,g,s,!1))}b.push("...");for(let e=p-o;e<p;e++){const a=e*y,r=a+y;b.push(...h(t.slice(a,r),m,n,g,s,e===p-1))}}else for(let r=0;r<p;r++){const e=r*y,a=e+y;b.push(...h(t.slice(e,a),m,n,g,s,r===p-1))}const x=2===f?",":"";b[0]="["+(p>0?b[0]+x:"");for(let r=1;r<b.length-1;r++)b[r]=" "+b[r]+x;let v=",\n";for(let r=2;r<f;r++)v+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(i?"":v),b}function d(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var p=n(115);class f{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=s.NA(t),null!=n){const t=n.length;s.hu(t===this.size,(()=>"Length of values '".concat(t,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||s.rQ(e,this.size),this.strides=(0,s.e3)(t)}set(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),s.hu(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=t}get(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];0===e.length&&(e=[0]);let a=0;for(const r of e){if(r<0||r>=this.shape[a]){const t="Requested out of range element at ".concat(e,". ")+"  Buffer shape=".concat(this.shape);throw new Error(t)}a++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return m().makeTensor(this.values,this.shape,this.dtype)}}let m=null,g=null,y=null;function b(t){m=t}function x(t){g=t}function v(t){y=t}class w{constructor(t,e,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=s.NA(t),this.strides=(0,s.e3)(t),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return g.buffer(this.shape,this.dtype,t)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return(0,s.GX)(this.shape,t,"complex64"===this.dtype)}arraySync(){return(0,s.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=m().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map((t=>p.decodeString(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),m().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=m().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>p.decodeString(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await m().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),m().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return g.print(this,t)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return c(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),g.cast(this,t)}variable(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),m().makeVariable(this,t,e,n)}}function k(){return(0,a.R)("Tensor",(()=>w))}Object.defineProperty(w,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),k();class I extends w{constructor(t,e,n,a){super(t.shape,t.dtype,t.dataId,a),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(t.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!s.cO(t.shape,this.shape))throw new Error("shape of the new value (".concat(t.shape,") and ")+"previous value (".concat(this.shape,") must match"));m().disposeTensor(this),this.dataId=t.dataId,m().incRef(this,null)}dispose(){m().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(I,Symbol.hasInstance,{value:t=>t instanceof w&&null!=t.assign&&t.assign instanceof Function})},9064:(t,e,n)=>{"use strict";n.r(e),n.d(e,{assertTypesMatch:()=>i,getTensorsInContainer:()=>l,isTensorInList:()=>c,makeTypesMatch:()=>o});var a=n(4376),s=n(3525),r=n(6147);function o(t,e){if(t.dtype===e.dtype)return[t,e];const n=(0,s.x8)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function i(t,e){(0,r.hu)(t.dtype===e.dtype,(()=>"The dtypes of the first(".concat(t.dtype,") and")+" second(".concat(e.dtype,") input must match")))}function c(t,e){return e.some((e=>e.id===t.id))}function l(t){const e=[];return u(t,e,new Set),e}function u(t,e,n){if(null==t)return;if(t instanceof a.es)return void e.push(t);if(s=t,!Array.isArray(s)&&"object"!==typeof s)return;var s;const r=t;for(const a in r){const t=r[a];n.has(t)||(n.add(t),u(t,e,n))}}},8354:(t,e,n)=>{"use strict";n.d(e,{C:()=>l,_1:()=>d,sI:()=>p});var a=n(318),s=n(5050),r=n(4376),o=n(3525),i=n(115),c=n(6147);function l(t,e){let n=t;if((0,i.isTypedArray)(t))return"string"===e?[]:[t.length];if((0,o.Oq)(t)){const e=t.channels||"RGBA";return[t.height,t.width*e.length]}if((0,o.$F)(t))return[t.buffer.size/(null==e?4:(0,c.bT)(e))];if(!Array.isArray(t))return[];const a=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==e;)a.push(n.length),n=n[0];return Array.isArray(t)&&(0,s.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(t,a,[]),a}function u(t,e,n){if(n=n||[],!Array.isArray(t)&&!(0,i.isTypedArray)(t))return void(0,c.hu)(0===e.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(e[0]," elements")));(0,c.hu)(e.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(t.length," elements"))),(0,c.hu)(t.length===e[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(e[0]," ")+"elements, but has ".concat(t.length," elements")));const a=e.slice(1);for(let s=0;s<t.length;++s)u(t[s],a,n.concat(s))}function h(t,e,n,a){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(t," tensor, but got ").concat(e," tensor"))}}function d(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(t instanceof(0,r.t3)())return h(s,t.dtype,e,n),t;let o=(0,c.D2)(t);if("string"!==o&&["bool","int32","float32"].indexOf(s)>=0&&(o=s),h(s,o,e,n),null==t||!(0,i.isTypedArray)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const a=null==t?"null":t.constructor.name;throw new Error("Argument '".concat(e,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const u=l(t,o);(0,i.isTypedArray)(t)||Array.isArray(t)||(t=[t]);const d="string"!==o?(0,i.toTypedArray)(t,o):(0,i.flatten)(t,[],!0);return a.BV.makeTensor(d,u,o)}function p(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(t))throw new Error("Argument ".concat(e," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return t.map(((t,s)=>d(t,"".concat(e,"[").concat(s,"]"),n,a)))}},3525:(t,e,n)=>{"use strict";var a,s,r,o,i;n.d(e,{$F:()=>d,Oq:()=>h,x8:()=>l,z4:()=>u}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(a||(a={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(s||(s={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(r||(r={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(o||(o={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(i||(i={}));const c={float32:o,int32:s,bool:r,complex64:i};function l(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast ".concat(t," with ").concat(e))}return c[t][e]}function u(t){return l(t,"int32")}function h(t){return null!=t&&"object"===typeof t&&"texture"in t&&t.texture instanceof WebGLTexture}function d(t){return"undefined"!==typeof GPUBuffer&&null!=t&&"object"===typeof t&&"buffer"in t&&t.buffer instanceof GPUBuffer}},115:(t,e,n)=>{"use strict";n.r(e),n.d(e,{arraysEqual:()=>r.cO,arraysEqualWithNull:()=>r.DK,assert:()=>r.hu,assertNonNegativeIntegerDimensions:()=>r.Mu,assertNonNull:()=>r.Cq,assertShapesMatch:()=>r.k5,bytesFromStringArray:()=>r.Ub,bytesPerElement:()=>r.bT,checkConversionForErrors:()=>r.D5,clamp:()=>r.uZ,computeStrides:()=>r.e3,convertBackendValuesAndArrayBuffer:()=>r.KS,createScalarValue:()=>v,createShuffledIndices:()=>r.U$,decodeString:()=>N,distSquared:()=>r.E7,encodeString:()=>S,fetch:()=>I,fingerPrint64:()=>x,flatten:()=>C,getArrayFromDType:()=>r.rQ,getTypedArrayFromDType:()=>r.WP,hasEncodingLoss:()=>r.QB,hexToLong:()=>c,indexToLoc:()=>r.NE,inferDtype:()=>r.D2,inferFromImplicitShape:()=>r.JZ,isBoolean:()=>r.jn,isFunction:()=>r.mf,isInt:()=>r.GN,isNumber:()=>r.hj,isPromise:()=>r.tI,isScalarShape:()=>r.xH,isString:()=>r.HD,isTypedArray:()=>T,isValidDtype:()=>r.LP,locToIndex:()=>r.qy,makeOnesTypedArray:()=>r.p8,makeZerosNestedTypedArray:()=>r.l6,makeZerosTypedArray:()=>r.wT,nearestDivisor:()=>r.jP,nearestLargerEven:()=>r.nY,now:()=>k,parseAxisParam:()=>r.EC,randUniform:()=>r.bj,repeatedTry:()=>r.WD,rightPad:()=>r.oj,shuffle:()=>r.TV,shuffleCombo:()=>r.d7,sizeFromShape:()=>r.NA,sizeToSquarishShape:()=>r.YP,squeezeShape:()=>r.bp,sum:()=>r.Sm,swap:()=>r.LF,tanh:()=>r.AE,toNestedArray:()=>r.GX,toTypedArray:()=>w});var a=n(5050),s=n(1539),r=n(6147),o=n(8987);const i=n.n(o)()||o;function c(t){return i.fromString(t,!0,16)}const l=c("c3a5c85c97cb3127"),u=c("b492b66fbe98f273"),h=c("9ae16a3b2f90404f");function d(t){return t.xor(t.shru(47))}function p(t,e,n){const a=t.slice(e,e+n);return i.fromBytes(Array.from(a),!0,!0)}function f(t,e){return p(t,e,8)}function m(t,e){return p(t,e,4)}function g(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function y(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c("9ddfea08eb382d69"),a=t.xor(e).mul(n);a=a.xor(a.shru(47));let s=e.xor(a).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function b(t,e,n,a){return function(t,e,n,a,s,r){s=s.add(t),r=g(r.add(s).add(a),21);const o=s;return s=(s=s.add(e)).add(n),r=r.add(g(s,44)),[s.add(a),r.add(o)]}(f(t,e),f(t,e+8),f(t,e+16),f(t,e+24),n,a)}function x(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;const n=i.fromNumber(81,!0);if(e<=32)return e<=16?function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;if(e>=8){const n=h.add(2*e),a=f(t,0).add(h),s=f(t,e-8);return y(g(s,37).mul(n).add(a),g(a,25).add(s).mul(n),n)}if(e>=4){const n=h.add(2*e);return y(m(t,0).shl(3).add(e),m(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),a=e+(t[e-1]<<2);return d(h.mul(n).xor(l.mul(a))).mul(h)}return h}(t,e):function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;const n=h.add(2*e),a=f(t,0).mul(u),s=f(t,8),r=f(t,e-8).mul(n),o=f(t,e-16).mul(h);return y(g(a.add(s),43).add(g(r,30)).add(o),a.add(g(s.add(h),18)).add(r),n)}(t,e);if(e<=64)return function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;const n=h.add(2*e),a=f(t,0).mul(h),s=f(t,8),r=f(t,e-8).mul(n),o=f(t,e-16).mul(h),i=g(a.add(s),43).add(g(r,30)).add(o),c=y(i,a.add(g(s.add(h),18)).add(r),n),l=f(t,16).mul(n),u=f(t,24),d=i.add(f(t,e-32)).mul(n),p=c.add(f(t,e-24)).mul(n);return y(g(l.add(u),43).add(g(d,30)).add(p),l.add(g(u.add(a),18)).add(d),n)}(t,e);let a=n,s=n.mul(u).add(113),r=d(s.mul(h).add(113)).mul(h),o=[i.UZERO,i.UZERO],c=[i.UZERO,i.UZERO];a=a.mul(h).add(f(t,0));let p=0;const x=64*(e-1>>6),v=x+(e-1&63)-63;do{a=g(a.add(s).add(o[0]).add(f(t,p+8)),37).mul(u),s=g(s.add(o[1]).add(f(t,p+48)),42).mul(u),a=a.xor(c[1]),s=s.add(o[0]).add(f(t,p+40)),r=g(r.add(c[0]),33).mul(u),o=b(t,p,o[1].mul(u),a.add(c[0])),c=b(t,p+32,r.add(c[1]),s.add(f(t,p+16))),[r,a]=[a,r],p+=64}while(p!==x);const w=u.add(r.and(255).shl(1));return p=v,c[0]=c[0].add(e-1&63),o[0]=o[0].add(c[0]),c[0]=c[0].add(o[0]),a=g(a.add(s).add(o[0]).add(f(t,p+8)),37).mul(w),s=g(s.add(o[1]).add(f(t,p+48)),42).mul(w),a=a.xor(c[1].mul(9)),s=s.add(o[0].mul(9).add(f(t,p+40))),r=g(r.add(c[0]),33).mul(w),o=b(t,p,o[1].mul(w),a.add(c[0])),c=b(t,p+32,r.add(c[1]),s.add(f(t,p+16))),[r,a]=[a,r],y(y(o[0],c[0],w).add(d(s).mul(l)).add(r),y(o[1],c[1],w).add(a),w)}function v(t,e){return"string"===e?S(t):w([t],e)}function w(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=C(t)),(0,a.OB)().getBool("DEBUG")&&r.D5(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type ".concat(e))}function k(){return(0,a.OB)().platform.now()}function I(t,e){return(0,a.OB)().platform.fetch(t,e)}function S(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",(0,a.OB)().platform.encode(t,e)}function N(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",(0,a.OB)().platform.decode(t,e)}function T(t){return null!=(0,a.OB)().platform.isTypedArray?(0,a.OB)().platform.isTypedArray(t):(0,s.j)(t)}function C(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e&&(e=[]),"boolean"===typeof t||"number"===typeof t||"string"===typeof t||r.tI(t)||null==t||T(t)&&n)e.push(t);else if(Array.isArray(t)||T(t))for(let a=0;a<t.length;++a)C(t[a],e,n);else{let a=-1;for(const e of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(e)&&(a=Math.max(a,Number(e)));for(let s=0;s<=a;s++)C(t[s],e,n)}return e}},6147:(t,e,n)=>{"use strict";function a(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,i(t,e,n)}function s(t,e){if(t.length!==e.length)throw new Error("Array sizes must match to be shuffled together "+"First array length was ".concat(t.length)+"Second array length was ".concat(e.length));let n=t.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,i(t,n,a),i(e,n,a)}function r(t,e,n){return Math.max(t,Math.min(e,n))}function o(t){return t%2===0?t:t+1}function i(t,e,n){const a=t[e];t[e]=t[n],t[n]=a}function c(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function l(t,e){const n=Math.random();return e*n+(1-n)*t}function u(t,e){let n=0;for(let a=0;a<t.length;a++){const s=Number(t[a])-Number(e[a]);n+=s*s}return n}function h(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function d(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";h(y(t,e),(()=>n+" Shapes ".concat(t," and ").concat(e," must match")))}function p(t){h(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function f(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function m(t){return 0===t.length}function g(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(null!==t[n]&&null!==e[n]&&t[n]!==e[n])return!1;return!0}function y(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function b(t){return t%1===0}function x(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function v(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function w(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return a(e),e}function k(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function I(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((s,r)=>{let o=0;const i=()=>{if(t())return void s();o++;const c=e(o);null!=n&&o>=n?r():null!=a?a(i,c):setTimeout(i,c)};i()}))}function S(t,e){let n=1,a=-1;for(let r=0;r<t.length;++r)if(t[r]>=0)n*=t[r];else if(-1===t[r]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(r));a=r}else if(t[r]<0)throw Error("Shapes can not be < 0. Found ".concat(t[r]," at dim ").concat(r));if(-1===a){if(e>0&&e!==n)throw Error("Size(".concat(e,") must match the product of shape ").concat(t));return t}if(0===n)throw Error("Cannot infer the missing size in [".concat(t,"] when ")+"there are 0 elements");if(e%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(e," / ").concat(n));const s=t.slice();return s[a]=e/n,s}function N(t,e){const n=e.length;return h((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(t))),h(t.every((t=>b(t))),(()=>"All values in axis param must be integers but "+"got axis ".concat(t))),t.map((t=>t<0?n+t:t))}function T(t,e){const n=[],a=[],s=null!=e&&Array.isArray(e)&&0===e.length,r=null==e||s?null:N(e,t).sort();let o=0;for(let i=0;i<t.length;++i){if(null!=r){if(r[o]===i&&1!==t[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(t[i],"' is not 1"));(null==r[o]||r[o]>i)&&1===t[i]&&(n.push(t[i]),a.push(i)),r[o]<=i&&o++}1!==t[i]&&(n.push(t[i]),a.push(i))}return{newShape:n,keptDims:a}}function C(t,e){return E(t,e)}function E(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type ".concat(t));n=new Array(e)}return n}function _(t,e){for(let n=0;n<t.length;n++){const a=t[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(e," being uploaded contains ").concat(a,"."))}}function A(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function D(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function R(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype ".concat(t))}function O(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}function F(t){return"string"===typeof t||t instanceof String}function M(t){return"boolean"===typeof t}function B(t){return"number"===typeof t}function L(t){return Array.isArray(t)?L(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":B(t)?"float32":F(t)?"string":M(t)?"bool":"float32"}function z(t){return!!(t&&t.constructor&&t.call&&t.apply)}function U(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function P(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let a=e-3;a>=0;--a)n[a]=n[a+1]*t[a+1];return n}function V(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=new Array;if(1===e.length){const r=e[0]*(a?2:1);for(let e=0;e<r;e++)s[e]=n[t+e]}else{const r=e[0],o=e.slice(1),i=o.reduce(((t,e)=>t*e))*(a?2:1);for(let e=0;e<r;e++)s[e]=V(t+e*i,o,n,a)}return s}function W(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===t.length)return e[0];const a=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===a)return[];if(a!==e.length)throw new Error("[".concat(t,"] does not match the input size ").concat(e.length).concat(n?" for a complex tensor":"","."));return V(0,t,e,n)}function G(t,e){if(Array.isArray(t))return t;if("float32"===e)return t instanceof Float32Array?t:new Float32Array(t);if("int32"===e)return t instanceof Int32Array?t:new Int32Array(t);if("bool"===e||"string"===e)return Uint8Array.from(new Int32Array(t));throw new Error("Unknown dtype ".concat(e))}function H(t,e){const n=j(t,e);for(let a=0;a<n.length;a++)n[a]=1;return n}function j(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type ".concat(e))}function X(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return W(t,new Float32Array(n));if("int32"===e)return W(t,new Int32Array(n));if("bool"===e)return W(t,new Uint8Array(n));throw new Error("Unknown data type ".concat(e))}function q(t){t.forEach((e=>{h(Number.isInteger(e)&&e>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(t,"].")))}))}function K(t,e,n){if(0===e)return 0;if(1===e)return t[0];let a=t[t.length-1];for(let s=0;s<t.length-1;++s)a+=n[s]*t[s];return a}function Z(t,e,n){if(0===e)return[];if(1===e)return[t];const a=new Array(e);for(let s=0;s<a.length-1;++s)a[s]=Math.floor(t/n[s]),t-=a[s]*n[s];return a[a.length-1]=t,a}function Y(t){return t&&t.then&&"function"===typeof t.then}n.d(e,{AE:()=>x,Cq:()=>p,D2:()=>L,D5:()=>_,DK:()=>g,E7:()=>u,EC:()=>N,GN:()=>b,GX:()=>W,HD:()=>F,JZ:()=>S,KS:()=>G,LF:()=>i,LP:()=>A,Mu:()=>q,NA:()=>f,NE:()=>Z,QB:()=>D,Sm:()=>c,TV:()=>a,U$:()=>w,Ub:()=>O,WD:()=>I,WP:()=>C,YP:()=>v,bT:()=>R,bj:()=>l,bp:()=>T,cO:()=>y,d7:()=>s,e3:()=>P,hj:()=>B,hu:()=>h,jP:()=>U,jn:()=>M,k5:()=>d,l6:()=>X,mf:()=>z,nY:()=>o,oj:()=>k,p8:()=>H,qy:()=>K,rQ:()=>E,tI:()=>Y,uZ:()=>r,wT:()=>j,xH:()=>m})},6089:(t,e,n)=>{"use strict";var a={};n.r(a),n.d(a,{addImpl:()=>Ju,bincountImpl:()=>Hh,bincountReduceImpl:()=>jh,bitwiseAndImpl:()=>qh,castImpl:()=>qu,ceilImpl:()=>Qh,concatImpl:()=>ad,equalImpl:()=>Vd,expImpl:()=>Jd,expm1Impl:()=>ap,floorImpl:()=>vp,gatherNdImpl:()=>Ep,gatherV2Impl:()=>Ap,greaterEqualImpl:()=>Mp,greaterImpl:()=>Rp,lessEqualImpl:()=>Kp,lessImpl:()=>jp,linSpaceImpl:()=>Qp,logImpl:()=>$p,maxImpl:()=>mf,maximumImpl:()=>bf,minimumImpl:()=>Ef,multiplyImpl:()=>Od,negImpl:()=>zf,notEqualImpl:()=>Xf,prodImpl:()=>rm,raggedGatherImpl:()=>um,raggedRangeImpl:()=>pm,raggedTensorToTensorImpl:()=>xm,rangeImpl:()=>wm,rsqrtImpl:()=>Om,scatterImpl:()=>Bm,sigmoidImpl:()=>zu,simpleAbsImpl:()=>ih,sliceImpl:()=>Ph,sparseFillEmptyRowsImpl:()=>ng,sparseReshapeImpl:()=>sg,sparseSegmentReductionImpl:()=>og,sqrtImpl:()=>hg,staticRegexReplaceImpl:()=>bg,stridedSliceImpl:()=>Ig,stringNGramsImpl:()=>Tg,stringSplitImpl:()=>_g,stringToHashBucketFastImpl:()=>Dg,subImpl:()=>lp,tileImpl:()=>zg,topKImpl:()=>Wg,transposeImpl:()=>fh,uniqueImpl:()=>Zg});var s=n(8149),r=n(2145),o=n(9118),i=n(651),c=n(4031);const l={kernelName:r.SYM,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,i.d)(t,(0,c.N)((0,o.p)(n,"float32"),-1))}}};var u=n(5750),h=n(4362),d=n(7067),p=n(6902),f=n(7391),m=n(4774);const g={kernelName:r.VGw,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,f.h)((0,o.p)(n,"float32")),a=(0,p._)((0,m.l)((0,d.i)(1),e));return(0,h.W)((0,u.h)(t,a))}}}},y={kernelName:r.SpW,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,p._)((0,m.l)((0,f.h)((0,o.p)(n,"float32")),1));return(0,u.h)(t,e)}}}};var b=n(5774),x=n(5561),v=n(227);const w={kernelName:r.mm_,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=b.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let e=t;const a=b.getReductionAxes(n.shape,s);return a.length>0&&(e=(0,v.S)(e,a)),(0,x.X)(e,n.shape)},b:()=>{let e=t;const n=b.getReductionAxes(a.shape,s);return n.length>0&&(e=(0,v.S)(e,n)),(0,x.X)(e,a.shape)}}}},k={kernelName:r.Xze,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,a)=>{n[a]=()=>t.clone()})),n}};var I=n(7293);const S={kernelName:r.sJF,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,I.P)(n)}}},N={kernelName:r.aJk,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,I.P)(n)}}},T={kernelName:r.M2y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,u.h)(t,(0,p._)((0,m.l)((0,d.i)(1),(0,f.h)((0,o.p)(n,"float32")))))}}};var C=n(3312);const E={kernelName:r.qw7,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,p._)((0,C.I)((0,d.i)(1),(0,f.h)((0,o.p)(n,"float32"))));return(0,u.h)(t,e)}}}},_={kernelName:r.QCc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const e=(0,C.I)((0,f.h)(n),(0,f.h)(a));let r=(0,i.d)(t,(0,u.h)(a,e));const o=(0,b.getReductionAxes)(n.shape,s);return o.length>0&&(r=(0,v.S)(r,o)),(0,x.X)(r,n.shape)},b:()=>{const e=(0,C.I)((0,f.h)(n),(0,f.h)(a));let r=(0,h.W)((0,i.d)(t,(0,u.h)(n,e)));const o=(0,b.getReductionAxes)(a.shape,s);return o.length>0&&(r=(0,v.S)(r,o)),(0,x.X)(r,a.shape)}}}},A={kernelName:r.jMg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,u.h)(t,(0,C.I)((0,f.h)((0,o.p)(n,"float32")),1))}}},D={kernelName:r.Oyi,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,u.h)(t,(0,m.l)((0,d.i)(1),(0,f.h)((0,o.p)(n,"float32"))))}}};var R=n(318),O=n(8354),F=n(6147),M=n(9151),B=n(8640);const L=(0,B.op)({avgPool3dGrad_:function(t,e,n,a,s,o){const i=(0,O._1)(t,"dy","avgPool3dGrad"),c=(0,O._1)(e,"input","avgPool3dGrad");let l=i,u=c,h=!1;4===c.rank&&(h=!0,l=(0,x.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=(0,x.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),F.hu(5===l.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(l.rank,"."))),F.hu(5===u.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(u.rank,"."))),(0,M.m)("avgPool3dGrad",s,o);const d={dy:l,input:u},p={filterSize:n,strides:a,pad:s,dimRoundingMode:o},f=R.BV.runKernel(r.IMb,d,p);return h?(0,x.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),z={kernelName:r._k9,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:s,strides:r,pad:o,dimRoundingMode:i}=n;return{x:()=>L(t,a,s,r,o,i)}}};const U=(0,B.op)({avgPoolGrad_:function(t,e,n,a,s){const o=(0,O._1)(t,"dy","avgPoolGrad"),i=(0,O._1)(e,"input","avgPoolGrad");F.hu(i.rank===o.rank,(()=>"Rank of input (".concat(i.rank,") does not match rank of dy (").concat(o.rank,")")));let c=i,l=o,u=!1;3===i.rank&&(u=!0,c=(0,x.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=(0,x.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F.hu(4===l.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(l.rank,"."))),F.hu(4===c.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,".")));const h={dy:l,input:c},d={filterSize:n,strides:a,pad:s},p=R.BV.runKernel(r.ROF,h,d);return u?(0,x.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),P={kernelName:r.JhU,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:s,strides:r,pad:o}=n;return{x:()=>U(t,a,s,r,o)}}};var V=n(7221);const W={kernelName:r.XLW,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[a,s]=e,{transposeA:r,transposeB:o}=n;return r||o?!r&&o?{a:()=>(0,V.O)(t,s,!1,!1),b:()=>(0,V.O)(t,a,!0,!1)}:r&&!o?{a:()=>(0,V.O)(s,t,!1,!0),b:()=>(0,V.O)(a,t,!1,!1)}:{a:()=>(0,V.O)(s,t,!0,!0),b:()=>(0,V.O)(t,a,!0,!0)}:{a:()=>(0,V.O)(t,s,!1,!0),b:()=>(0,V.O)(a,t,!0,!1)}}};var G=n(5696);const H={kernelName:r.zws,gradFunc:(t,e,n)=>{const{blockShape:a,crops:s}=n;return{x:()=>(0,G.f)(t,a,s)}}},j={kernelName:r.Ly9,gradFunc:(t,e,n)=>{const a=n,s=a.inputShape,r=a.shape,o=Array.from(r);for(let c=s.length-1;c>=0;c--)if(s[c]===r[c])o[c]=1;else if(1!==s[c])throw new Error("broadcastTo(): [".concat(s,"] cannot be broadcast to [").concat(r,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>(0,v.S)(t,i,!0)}}},X={kernelName:r.RFZ,gradFunc:t=>({x:()=>t.clone()})},q={kernelName:r.gJX,gradFunc:t=>({x:()=>(0,I.P)(t)})};var K=n(8327),Z=n(2642),Y=n(2177),Q=n(329);const J={kernelName:r.xnO,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{clipValueMin:s,clipValueMax:r}=n;return{x:()=>(0,Q.a)((0,Y.H)((0,K.b)(a,s),(0,Z.z)(a,r)),t,(0,I.P)(t))}}},$={kernelName:r.yj2,inputsToSave:["x"],gradFunc:l.gradFunc};var tt=n(2588);const et={kernelName:r.Eh3,saveAllInputs:!0,gradFunc:(t,e,n)=>{const a=e.map((t=>t.shape)),{axis:s}=n,r=(0,F.EC)(s,e[0].shape)[0],o=a.map((t=>t[r]));return(0,tt.V)(t,o,r).map((t=>()=>t))}};var nt=n(8744),at=n(1045);const st={kernelName:r.mhS,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,s]=e,{dilations:r,strides:o,pad:i,dataFormat:c}=n;return F.hu(M.I0(r),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(r,"'"))),{x:()=>(0,at._)(a.shape,t,s,o,i,c),filter:()=>(0,nt.p)(a,t,s.shape,o,i,c)}}};var rt=n(3457);const ot={kernelName:r.wm,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[a,s]=e,{strides:r,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>(0,rt.T)(t,s,r,o,i,1,c),filter:()=>(0,nt.p)(t,a,s.shape,r,o,i,c)}}};const it=(0,B.op)({conv3DBackpropFilter_:function(t,e,n,a,s){let o=t;4===t.rank&&(o=(0,x.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=(0,x.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),F.hu(5===o.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(o.shape,"."))),F.hu(5===i.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(i.shape,"."))),F.hu(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),F.hu(o.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(o.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),F.hu(i.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(i.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const c={x:o,dy:i},l={strides:a,pad:s,filterShape:n};return R.BV.runKernel(r.o2y,c,l)}});var ct=n(1873);const lt={kernelName:r.x12,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:s,pad:r}=n;F.hu((0,M.I0)(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=e;return{x:()=>(0,ct._)(o.shape,t,i,s,r),filter:()=>it(o,t,i.shape,s,r)}}};var ut=n(7254);const ht={kernelName:r.mc4,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,i.d)((0,h.W)((0,ut.O)((0,o.p)(n,"float32"))),t)}}};var dt=n(7657);const pt={kernelName:r.TR1,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,i.d)((0,dt.R)((0,o.p)(n,"float32")),t)}}};var ft=n(8473),mt=n(8862),gt=n(1240);const yt={kernelName:r.iHb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:s,exclusive:r,reverse:o}=n;return{x:()=>{const e=(0,ft.Q3)([s],a.rank);let n=(0,mt.z)(t,s,r,!o);return null!=e&&(n=(0,gt.p)(n,e)),n}}}};var bt=n(288),xt=n(6939);const vt={kernelName:r.cie,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:s,pad:r,dimRoundingMode:o}=n,i=null==a?[1,1]:a;F.hu(M.I0(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=e;return F.hu(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),F.hu(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),F.hu(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),F.hu(M.jT(s,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(s," and dilations ")+"'".concat(i,"'."))),M.m("depthwiseConv2d",r,o),{x:()=>(0,xt.v)(c.shape,t,l,s,r,i,o),filter:()=>(0,bt.z)(c,t,l.shape,s,r,i,o)}}},wt={kernelName:r.p4S,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,s]=e,o={x:a,filter:s,dy:t},i={x:a,filter:s,dy:t};return{x:()=>R.BV.runKernel(r.ekb,o,n),filter:()=>R.BV.runKernel(r.Vn9,i,n)}}},kt={kernelName:r.SX0,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,a={dy:t,y:n};return{x:()=>R.BV.runKernel(r.HEU,a)}}};var It=n(411);const St={kernelName:r.Omj,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=(0,i.d)((0,It.Q)((0,h.W)((0,f.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,i.d)(t,a)}}},Nt={kernelName:r.NEP,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,i.d)(t,n)}}},Tt={kernelName:r.YFo,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>(0,x.X)(t,n.shape)}}},Ct={kernelName:r.Y0y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,i.d)(t,(0,It.Q)(n))}}},Et={kernelName:r.OR,gradFunc:t=>({x:()=>(0,I.P)(t)})},_t={kernelName:r.jeX,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const e=(0,u.h)(t,(0,o.p)(a,"float32")),r=(0,b.getReductionAxes)(n.shape,s);return r.length>0?(0,x.X)((0,v.S)(e,r),n.shape):e},b:()=>{let e=(0,i.d)(t,(0,o.p)(n,"float32"));const r=(0,b.getReductionAxes)(a.shape,s);r.length>0&&(e=(0,x.X)((0,v.S)(e,r),a.shape));const c=(0,f.h)(a);return(0,h.W)((0,u.h)(e,(0,o.p)(c,"float32")))}}}};var At=n(5115),Dt=n(2343);const Rt={kernelName:r.sHE,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:a}=n,[s,r,o,c]=e,l=null==c?(0,d.i)(1):c,u=(0,b.getReductionAxes)(r.shape,s.shape),h=[];if(1===r.rank){for(let t=0;t<s.shape.length-1;++t)h.push(s.shape[t]);h.push(1)}const p=(0,m.l)(s,r),f=(0,i.d)(t,l),g=(0,At.b)((0,C.I)(o,(0,d.i)(a))),y=(0,i.d)((0,i.d)((0,i.d)(g,g),g),(0,d.i)(-.5));return{x:()=>1===r.rank?(0,x.X)((0,i.d)((0,i.d)(t,(0,Dt.G)((0,x.X)(g,[1,1,1,r.shape[0]]),h)),l),s.shape):(0,x.X)((0,i.d)((0,i.d)(t,g),l),s.shape),mean:()=>{let t=(0,i.d)((0,i.d)(g,(0,d.i)(-1)),f);return 1===r.rank&&(t=(0,v.S)(t,u)),(0,x.X)(t,r.shape)},variance:()=>{let t=(0,i.d)((0,i.d)(y,p),f);return 1===r.rank&&(t=(0,v.S)(t,u)),(0,x.X)(t,r.shape)},scale:()=>{const e=(0,i.d)(p,g);let n=(0,i.d)(t,e);return 1===r.rank&&(n=(0,v.S)(n,u)),(0,x.X)(n,r.shape)},offset:()=>{let e=t;return 1===r.rank&&(e=(0,v.S)(e,u)),(0,x.X)(e,r.shape)}}}};var Ot=n(8306),Ft=n(6918);const Mt={kernelName:r.qi_,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[a,s]=e,{axis:r,batchDims:o}=n,i=(0,F.EC)(r,a.shape)[0],c=(t,e,n)=>()=>{const a=t.shape,s=e.size,o=a.slice(0,i),c=o.length,l=a.slice(r,a.length).slice(1),u=l.length,h=Bt(0,c),d=Bt(c+1,c+1+u),p=Lt([o,[s],l]),f=(0,x.X)(n,p),m=(0,x.X)(e,[s]),g=Lt([[c],h,d]),y=(0,gt.p)(f,g);let b=(0,Ft.p)(y,m,t.shape[i]);const v=(0,ft.LJ)(g);return b=(0,gt.p)(b,v),b};if(1===o){const e=a.shape[0],n=a.split(e,0);return{x:()=>{const e=(0,Ot.k)(n.map(((e,n)=>c(e,s.slice(n,1),t.slice(n,1))())));return e.reshape(a.shape)},indices:()=>s}}return{x:c(a,s,t),indices:()=>s}}};function Bt(t,e){const n=[];for(let a=t;a<e;++a)n.push(a);return n}function Lt(t){const e=[];for(let n=0;n<t.length;++n)for(let a=0;a<t[n].length;++a)e.push(t[n][a]);return e}const zt={kernelName:r.Acj,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>(0,I.P)(n),b:()=>(0,I.P)(a)}}},Ut={kernelName:r.iJz,gradFunc:t=>({x:()=>(0,o.p)(t,"float32")})},Pt={kernelName:r.avt,gradFunc:t=>({x:()=>(0,I.P)(t)})},Vt={kernelName:r.iWB,gradFunc:t=>({x:()=>(0,I.P)(t)})},Wt={kernelName:r.r7n,gradFunc:t=>({x:()=>(0,I.P)(t)})};var Gt=n(5014);const Ht={kernelName:r.J$2,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{alpha:s}=n,r=(0,Gt.p)(a,0);return{x:()=>(0,Q.a)(r,t,(0,i.d)(t,s))}}},jt={kernelName:r.kU,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,u.h)(t,(0,C.I)(n,1))}}},Xt={kernelName:r.ZbH,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,u.h)(t,(0,o.p)(n,"float32"))}}},qt={kernelName:r.qCd,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{axis:s}=n;return{logits:()=>{const e=(0,It.Q)(a);return(0,m.l)(t,(0,i.d)((0,v.S)(t,s,!0),e))}}}};const Kt=(0,B.op)({localResponseNormalizationBackprop_:function(t,e,n){const a={x:t,y:e,dy:n},s={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return R.BV.runKernel(r.Hhh,a,s)}}),Zt={kernelName:r.eZ0,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,s]=e,{depthRadius:r,bias:o,alpha:i,beta:c}=n;return{x:()=>Kt(a,s,t,r,o,i,c)}}};var Yt=n(3254);function Qt(t,e,n,a){return e.rank<n.rank&&(e=(0,x.X)(e,ft.rv(e.shape,a))),t.rank<n.rank&&(t=(0,x.X)(t,ft.rv(t.shape,a))),{x:()=>(0,i.d)(t,(0,o.p)((0,Yt.D)(n,e),t.dtype))}}const Jt={kernelName:r.YoZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{reductionIndices:s}=a,r=e[0],o=Qt(t,e[1],r,F.EC(s,r.shape));return{x:()=>o.x()}}};var $t=n(4920);const te={kernelName:r.BMI,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>(0,i.d)(t,(0,o.p)((0,K.b)(n,a),"float32")),b:()=>(0,i.d)(t,(0,o.p)((0,$t.d)(n,a),"float32"))}}};const ee=(0,B.op)({maxPool3dGrad_:function(t,e,n,a,s,o,i){const c=(0,O._1)(t,"dy","maxPool3dGrad"),l=(0,O._1)(e,"input","maxPool3dGrad"),u=(0,O._1)(n,"output","maxPool3dGrad");let h=c,d=l,p=u,f=!1;4===l.rank&&(f=!0,h=(0,x.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=(0,x.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=(0,x.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),F.hu(5===h.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(h.rank,"."))),F.hu(5===d.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(d.rank,"."))),F.hu(5===p.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(p.rank,"."))),(0,M.m)("maxPool3dGrad",o,i);const m={dy:h,input:d,output:p},g={filterSize:a,strides:s,pad:o,dimRoundingMode:i},y=R.BV.runKernel(r.OU7,m,g);return f?(0,x.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),ne={kernelName:r.OAf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,s]=e,{filterSize:r,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>ee(t,a,s,r,o,i,c)}}};const ae=(0,B.op)({maxPoolGrad_:function(t,e,n,a,s,o,i){const c=(0,O._1)(t,"dy","maxPoolGrad"),l=(0,O._1)(e,"input","maxPoolGrad"),u=(0,O._1)(n,"output","maxPoolGrad");F.hu(l.rank===c.rank,(()=>"Rank of input (".concat(l.rank,") does not match rank of dy ")+"(".concat(c.rank,")"))),F.hu(4===c.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),F.hu(4===l.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(l.rank,"."))),M.m("maxPoolGrad",o,i);const h={dy:c,input:l,output:u},d={filterSize:a,strides:s,pad:o,dimRoundingMode:i};return R.BV.runKernel(r.OV7,h,d)}}),se={kernelName:r.mTV,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,s]=e,{filterSize:r,strides:o,pad:i}=n;return{x:()=>ae(t,a,s,r,o,i)}}};var re=n(6100);const oe={kernelName:r.q2K,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:s}=n,r=F.EC(s,a.shape),o=(0,ft.kz)(a.shape,r)[1],c=F.NA(o);return{x:()=>{const e=a.shape.slice();r.forEach((t=>{e[t]=1}));const n=(0,x.X)(t,e);return(0,u.h)((0,i.d)(n,(0,re.i)(a.shape,"float32")),c)}}}},ie={kernelName:r.c17,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{axis:s}=a,[r,o]=e,i=Qt(t,o,r,F.EC(s,r.shape));return{x:()=>i.x()}}},ce={kernelName:r.q8u,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>(0,i.d)(t,(0,o.p)((0,Z.z)(n,a),"float32")),b:()=>(0,i.d)(t,(0,o.p)((0,Gt.p)(n,a),"float32"))}}};var le=n(9238);const ue={kernelName:r.jQs,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:s}=n,r=s.map((t=>t[0]));return{x:()=>(0,le.t)(t,r,a.shape)}}};var he=n(2628);const de={kernelName:r.Vbg,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const e=(0,b.getReductionAxes)(n.shape,s);return e.length>0?(0,x.X)((0,v.S)(t,e),n.shape):t},b:()=>{const e=(0,i.d)(t,(0,h.W)((0,he.G)((0,u.h)(n,a)))),r=(0,b.getReductionAxes)(a.shape,s);return r.length>0?(0,x.X)((0,v.S)(e,r),a.shape):e}}}},pe={kernelName:r.wYn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const e=(0,i.d)(t,(0,o.p)(a,"float32")),r=(0,b.getReductionAxes)(n.shape,s);return r.length>0?(0,x.X)((0,v.S)(e,r),n.shape):e},b:()=>{const e=(0,i.d)(t,(0,o.p)(n,"float32")),r=(0,b.getReductionAxes)(a.shape,s);return r.length>0?(0,x.X)((0,v.S)(e,r),a.shape):e}}}},fe={kernelName:r.kuV,gradFunc:t=>({x:()=>(0,h.W)(t)})};var me=n(7742);const ge={kernelName:r.we_,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>(0,me.l)(n.shape,"float32")}}},ye={kernelName:r.qWM,gradFunc:t=>({x:()=>(0,I.P)(t)})};var be=n(4566);const xe={kernelName:r.QiL,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:a}=n;return(0,be.H)(t,a).map((t=>()=>t))}},ve={kernelName:r.lyA,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:s}=n,r=s.map((t=>t[0]));return{x:()=>(0,le.t)(t,r,a.shape)}}};var we=n(378),ke=n(4334);const Ie={kernelName:r.pe_,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,a,s]=e,r=n,c=a,l=b.assertAndGetBroadcastShape(r.shape,c.shape);return{a:()=>{const e=(0,o.p)(c,"float32");let n=(0,i.d)(t,(0,i.d)(e,(0,ke.s)(r,(0,m.l)(e,(0,d.i)(1)))));const a=b.getReductionAxes(r.shape,l);return a.length>0&&(n=(0,v.S)(n,a)),(0,x.X)(n,r.shape)},b:()=>{const e=(0,Gt.p)(r,0),n=(0,Q.a)(e,(0,we.c)(r),(0,I.P)(r));let a=(0,i.d)(t,(0,i.d)(s,n));const o=b.getReductionAxes(c.shape,l);return o.length>0&&(a=(0,v.S)(a,o)),(0,x.X)(a,c.shape)}}}},Se={kernelName:r.o0g,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,a]=e,s=(0,Gt.p)(n,0);return{x:()=>(0,Q.a)(s,t,(0,i.d)(t,a)),alpha:()=>{let e=(0,Q.a)(s,(0,I.P)(t),(0,i.d)(t,n));const r=(0,b.getReductionAxes)(a.shape,t.shape);return r.length>0&&(e=(0,v.S)(e,r)),(0,x.X)(e,a.shape)}}}};var Ne=n(9457);function Te(t,e,n){const a=t.shape.length,s=a-n.length,r=ft.Q3(n,a);let o=t;null!=r&&(o=(0,gt.p)(t,r));const c=o.shape.slice(),l=c.splice(a-n.length,n.length).reduce(((t,e)=>t*e),1);c.push(l);let u=function(t,e,n){const a=t.shape.slice();a[n]=1;const s=(0,x.X)(e,a),r=(0,Ne.$)(t,n,!0,!1),o=(0,Ne.$)(t,n,!0,!0),c=(0,i.d)(r,o);return(0,i.d)(s,c)}(o.reshape(c),e,s);if(u=u.reshape(o.shape),null!=r){const t=ft.LJ(r);u=(0,gt.p)(u,t)}return u}const Ce={kernelName:r.DlI,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:s}=n;let r=[];return r=void 0===s||null===s?a.shape.map(((t,e)=>e)):"number"===typeof s?[s]:s,{x:()=>Te(a,t,r)}}},Ee={kernelName:r.oHH,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=b.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{const e=(0,u.h)(t,(0,o.p)(a,"float32")),r=b.getReductionAxes(n.shape,s);return r.length>0?(0,x.X)((0,v.S)(e,r),n.shape):e},b:()=>{let e=(0,i.d)(t,(0,o.p)(n,"float32"));const r=b.getReductionAxes(a.shape,s);r.length>0&&(e=(0,x.X)((0,v.S)(e,r),a.shape));const c=(0,f.h)(a);return(0,h.W)((0,u.h)(e,(0,o.p)(c,"float32")))}}}},_e={kernelName:r.$HU,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,u.h)(t,(0,h.W)((0,f.h)(n)))}}},Ae={kernelName:r.SbG,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=(0,i.d)((0,Z.z)(n,6),(0,c.N)(n));return{x:()=>(0,i.d)(t,(0,o.p)(a,"float32"))}}},De={kernelName:r.qkr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,i.d)(t,(0,o.p)((0,c.N)(n),"float32"))}}},Re={kernelName:r.HZH,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,x.X)(t,n.shape)}}},Oe={kernelName:r._Yw,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,s={dy:t,images:a};return{images:()=>R.BV.runKernel(r.zbQ,s,n)}}},Fe={kernelName:r.dpD,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,s={dy:t,images:a};return{images:()=>R.BV.runKernel(r.Hmb,s,n)}}};var Me=n(6770);const Be={kernelName:r.mKl,gradFunc:(t,e,n)=>{const{dims:a}=n,s=(0,F.EC)(a,t.shape);return{x:()=>(0,Me.G)(t,s)}}},Le={kernelName:r.e07,gradFunc:t=>({x:()=>(0,I.P)(t)})},ze={kernelName:r.bV0,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,h.W)((0,u.h)(t,(0,i.d)((0,ke.s)(n,1.5),2)))}}};var Ue=n(875);const Pe={kernelName:r.PhF,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>(0,o.p)((0,I.P)(n),"float32"),t:()=>(0,i.d)(t,(0,o.p)(n,t.dtype)),e:()=>(0,i.d)(t,(0,o.p)((0,Ue.h)(n),t.dtype))}}};var Ve=n(349);const We={kernelName:r.oFR,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,Gt.p)(n,(0,d.i)(0)),a=(0,d.i)(Ve.y),s=(0,d.i)(Ve.$),r=(0,i.d)(t,s),c=(0,i.d)((0,i.d)(t,a),(0,It.Q)((0,o.p)(n,"float32")));return(0,Q.a)(e,r,c)}}}},Ge={kernelName:r.a5O,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,i.d)(t,(0,i.d)(n,(0,m.l)((0,d.i)(1),n)))}}},He={kernelName:r.i5y,gradFunc:t=>({x:()=>(0,I.P)(t)})};var je=n(1227);const Xe={kernelName:r.RQH,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,i.d)((0,je.m)((0,o.p)(n,"float32")),t)}}};var qe=n(6679);const Ke={kernelName:r.wYB,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,i.d)((0,qe.f)((0,o.p)(n,"float32")),t)}}};var Ze=n(1970),Ye=n(2875);const Qe={kernelName:r.p2w,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{begin:s,size:r}=n,o=a.shape,[i,c]=(0,Ye.parseSliceParams)(a,s,r),l=[];for(let u=0;u<t.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>(0,Ze.v)(t,l)}}},Je={kernelName:r.Gcp,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{dim:s}=n,r=(0,i.d)(t,a);return{logits:()=>(0,m.l)(r,(0,i.d)((0,v.S)(r,[s],true),a))}}};var $e=n(7643);const tn={kernelName:r.MRv,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,i.d)(t,(0,$e.X)(n))}}};var en=n(6994);const nn={kernelName:r.TQc,gradFunc:(t,e,n)=>{const{blockShape:a,paddings:s}=n;return{x:()=>(0,en.E)(t,a,s)}}};var an=n(4933);const sn={kernelName:r.L8s,gradFunc:(t,e,n)=>{const{axis:a}=n;return{x:()=>(0,an.z)(t,a)}}},rn={kernelName:r.FKq,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,u.h)(t,(0,i.d)((0,p._)((0,o.p)(n,"float32")),2))}}},on={kernelName:r.bK0,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,i.d)(t,(0,i.d)((0,o.p)(n,"float32"),2))}}},cn={kernelName:r._tC,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=(0,d.i)(2);return{a:()=>(0,i.d)(t,(0,i.d)(s,(0,m.l)(n,a))),b:()=>(0,i.d)(t,(0,i.d)(s,(0,m.l)(a,n)))}}},ln={kernelName:r.h8e,gradFunc:t=>({x:()=>(0,I.P)(t)})},un={kernelName:r.Tr8,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=b.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let e=t;const a=b.getReductionAxes(n.shape,s);return a.length>0&&(e=(0,v.S)(e,a)),(0,x.X)(e,n.shape)},b:()=>{let e=t;const n=b.getReductionAxes(a.shape,s);return n.length>0&&(e=(0,v.S)(e,n)),(0,x.X)((0,h.W)(e),a.shape)}}}},hn={kernelName:r.GBy,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,s=a.shape.slice(),{axis:r}=n;(0,F.EC)(r,a.shape).forEach((t=>{s[t]=1}));const o=(0,x.X)(t,s),c=(0,i.d)(o,(0,re.i)(a.shape,"float32"));return{x:()=>c}}},dn={kernelName:r.sEM,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,u.h)(t,(0,f.h)((0,je.m)(n)))}}},pn={kernelName:r.MIZ,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,i.d)((0,m.l)((0,d.i)(1),(0,f.h)(n)),t)}}},fn={kernelName:r.n9L,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{reps:s}=n;return{x:()=>{let e=(0,I.P)(a);if(1===a.rank)for(let n=0;n<s[0];++n)e=(0,C.I)(e,(0,le.t)(t,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<s[0];++n)for(let r=0;r<s[1];++r)e=(0,C.I)(e,(0,le.t)(t,[n*a.shape[0],r*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<s[0];++n)for(let r=0;r<s[1];++r)for(let o=0;o<s[2];++o)e=(0,C.I)(e,(0,le.t)(t,[n*a.shape[0],r*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<s[0];++n)for(let r=0;r<s[1];++r)for(let o=0;o<s[2];++o)for(let i=0;i<s[3];++i)e=(0,C.I)(e,(0,le.t)(t,[n*a.shape[0],r*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return e}}}},mn={kernelName:r.G3Y,gradFunc:(t,e,n)=>{const a=n,{perm:s}=a,r=ft.LJ(s);return{x:()=>(0,gt.p)(t,r)}}},gn={kernelName:r.ToN,gradFunc:(t,e,n)=>{const a=n,{axis:s}=a;return{value:()=>(0,Ot.k)(t,s)}}};var yn=n(2975),bn=n(9498),xn=n(705);const vn={kernelName:r.Qvg,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=(0,xn.g)(e,(0,I.P)(e)),a=(0,bn.I)(t,n);let s=(0,K.b)(e,(0,d.i)(0,"int32"));const r=a.rank-s.rank;for(let i=0;i<r;++i)s=(0,yn.d)(s,i+1);s=(0,Y.H)(s,(0,re.i)(a.shape,"bool"));const o=(0,I.P)(a);return(0,Q.a)(s,a,o)}(t,n)}}};const wn={kernelName:r.RuY,gradFunc:t=>({x:()=>(0,I.P)(t)})};var kn=n(8864);const In=[l,g,y,w,k,S,N,T,E,_,A,D,z,P,W,H,j,X,q,J,$,et,ot,st,lt,ht,pt,yt,vt,wt,Ee,kt,St,Nt,Tt,Ct,_t,Et,Rt,Mt,zt,Ut,Pt,Vt,Wt,Ht,jt,Xt,qt,Zt,Jt,Jt,te,ne,se,oe,ie,ce,ue,de,pe,fe,ge,ye,xe,ve,ve,Ie,Se,Ce,_e,Ae,De,Re,Oe,Fe,Be,Le,ze,Pe,We,Ge,He,Xe,Ke,Qe,Je,tn,nn,nn,sn,sn,rn,cn,on,ln,un,hn,dn,pn,fn,mn,gn,vn,wn];for(const PT of In)(0,kn.Li)(PT);var Sn=n(7613),Nn=n(4376);(0,Nn.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,Sn.W)(this)};var Tn=n(1719);(0,Nn.t3)().prototype.acos=function(){return this.throwIfDisposed(),(0,Tn.K)(this)};var Cn=n(4502);(0,Nn.t3)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Cn._)(this)},(0,Nn.t3)().prototype.add=function(t){return this.throwIfDisposed(),(0,C.I)(this,t)};var En=n(4108);(0,Nn.t3)().prototype.all=function(t,e){return this.throwIfDisposed(),(0,En.$)(this,t,e)};var _n=n(8543);(0,Nn.t3)().prototype.any=function(t,e){return this.throwIfDisposed(),(0,_n.Y)(this,t,e)};var An=n(9995);(0,Nn.t3)().prototype.argMax=function(t){return this.throwIfDisposed(),(0,An.N)(this,t)};var Dn=n(5157);(0,Nn.t3)().prototype.argMin=function(t){return this.throwIfDisposed(),(0,Dn.v)(this,t)},(0,Nn.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,F.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,x.X)(this,[])},(0,Nn.t3)().prototype.asType=function(t){return this.throwIfDisposed(),(0,o.p)(this,t)},(0,Nn.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,x.X)(this,[this.size])},(0,Nn.t3)().prototype.as2D=function(t,e){return this.throwIfDisposed(),(0,x.X)(this,[t,e])},(0,Nn.t3)().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),(0,x.X)(this,[t,e,n])},(0,Nn.t3)().prototype.as4D=function(t,e,n,a){return this.throwIfDisposed(),(0,x.X)(this,[t,e,n,a])},(0,Nn.t3)().prototype.as5D=function(t,e,n,a,s){return this.throwIfDisposed(),(0,x.X)(this,[t,e,n,a,s])};var Rn=n(3053);(0,Nn.t3)().prototype.asin=function(){return this.throwIfDisposed(),(0,Rn.Z)(this)};var On=n(54);(0,Nn.t3)().prototype.asinh=function(){return this.throwIfDisposed(),(0,On.V)(this)};var Fn=n(4778);(0,Nn.t3)().prototype.atan=function(){return this.throwIfDisposed(),(0,Fn.z)(this)};var Mn=n(2227);(0,Nn.t3)().prototype.atan2=function(t){return this.throwIfDisposed(),(0,Mn.f)(this,t)};var Bn=n(7897);(0,Nn.t3)().prototype.atanh=function(){return this.throwIfDisposed(),(0,Bn.C)(this)};var Ln=n(9204);(0,Nn.t3)().prototype.avgPool=function(t,e,n,a){return this.throwIfDisposed(),(0,Ln.w)(this,t,e,n,a)},(0,Nn.t3)().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),(0,en.E)(this,t,e)};var zn=n(3700);(0,Nn.t3)().prototype.batchNorm=function(t,e,n,a,s){return this.throwIfDisposed(),(0,zn.t)(this,t,e,n,a,s)};var Un=n(9742);(0,Nn.t3)().prototype.broadcastTo=function(t){return this.throwIfDisposed(),(0,Un.U)(this,t)},(0,Nn.t3)().prototype.cast=function(t){return this.throwIfDisposed(),(0,o.p)(this,t)};var Pn=n(1396);(0,Nn.t3)().prototype.ceil=function(){return this.throwIfDisposed(),(0,Pn.m)(this)};var Vn=n(9836);(0,Nn.t3)().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),(0,Vn.i)(this,t,e)},(0,Nn.t3)().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Nn.es&&(t=[t]),(0,an.z)([this,...t],e)};var Wn=n(4918);(0,Nn.t3)().prototype.conv1d=function(t,e,n,a,s,r){return this.throwIfDisposed(),(0,Wn.P)(this,t,e,n,a,s,r)};var Gn=n(1732);(0,Nn.t3)().prototype.conv2dTranspose=function(t,e,n,a,s){return this.throwIfDisposed(),(0,Gn.b)(this,t,e,n,a,s)},(0,Nn.t3)().prototype.conv2d=function(t,e,n,a,s,r){return this.throwIfDisposed(),(0,rt.T)(this,t,e,n,a,s,r)},(0,Nn.t3)().prototype.cos=function(){return this.throwIfDisposed(),(0,je.m)(this)},(0,Nn.t3)().prototype.cosh=function(){return this.throwIfDisposed(),(0,qe.f)(this)},(0,Nn.t3)().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),(0,Ne.$)(this,t,e,n)},(0,Nn.t3)().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),(0,mt.z)(this,t,e,n)};var Hn=n(1878);(0,Nn.t3)().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),(0,Hn.n)(this,t,e)};var jn=n(1147);(0,Nn.t3)().prototype.depthwiseConv2d=function(t,e,n,a,s,r){return this.throwIfDisposed(),(0,jn.B)(this,t,e,n,a,s,r)};var Xn=n(7580);(0,Nn.t3)().prototype.dilation2d=function(t,e,n,a,s){return this.throwIfDisposed(),(0,Xn.W)(this,t,e,n,a,s)};var qn=n(5923);(0,Nn.t3)().prototype.divNoNan=function(t){return this.throwIfDisposed(),(0,qn.N)(this,t)},(0,Nn.t3)().prototype.div=function(t){return this.throwIfDisposed(),(0,u.h)(this,t)};var Kn=n(5043);(0,Nn.t3)().prototype.dot=function(t){return this.throwIfDisposed(),(0,Kn.A)(this,t)};var Zn=n(2353);(0,Nn.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,Zn.p)(this)},(0,Nn.t3)().prototype.equal=function(t){return this.throwIfDisposed(),(0,Yt.D)(this,t)};var Yn=n(3891);(0,Nn.t3)().prototype.erf=function(){return this.throwIfDisposed(),(0,Yn.q)(this)};var Qn=n(3313);(0,Nn.t3)().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),(0,Qn.d)(this,t,e)},(0,Nn.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,It.Q)(this)},(0,Nn.t3)().prototype.expandDims=function(t){return this.throwIfDisposed(),(0,yn.d)(this,t)};var Jn=n(8865);(0,Nn.t3)().prototype.expm1=function(){return this.throwIfDisposed(),(0,Jn.t)(this)};var $n=n(7635);(0,Nn.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,$n.k)(this)},(0,Nn.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,x.X)(this,[this.size])},(0,Nn.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,he.G)(this)};var ta=n(7145);(0,Nn.t3)().prototype.floorDiv=function(t){return this.throwIfDisposed(),(0,ta.q)(this,t)},(0,Nn.t3)().prototype.gather=function(t,e,n){return this.throwIfDisposed(),(0,bn.I)(this,t,e,n)},(0,Nn.t3)().prototype.greaterEqual=function(t){return this.throwIfDisposed(),(0,K.b)(this,t)},(0,Nn.t3)().prototype.greater=function(t){return this.throwIfDisposed(),(0,Gt.p)(this,t)};var ea=n(530);(0,Nn.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,ea.S)(this)};var na=n(774);(0,Nn.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,na.w)(this)};var aa=n(300);(0,Nn.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,aa.x)(this)};var sa=n(4652);(0,Nn.t3)().prototype.isInf=function(){return this.throwIfDisposed(),(0,sa.U)(this)};var ra=n(7005);(0,Nn.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,ra.i)(this)};var oa=n(9546);(0,Nn.t3)().prototype.leakyRelu=function(t){return this.throwIfDisposed(),(0,oa.h)(this,t)},(0,Nn.t3)().prototype.lessEqual=function(t){return this.throwIfDisposed(),(0,Z.z)(this,t)},(0,Nn.t3)().prototype.less=function(t){return this.throwIfDisposed(),(0,$t.d)(this,t)};var ia=n(936);(0,Nn.t3)().prototype.localResponseNormalization=function(t,e,n,a){return this.throwIfDisposed(),(0,ia.G)(this,t,e,n,a)};var ca=n(5113);(0,Nn.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,ca.e)(this)};var la=n(4561);(0,Nn.t3)().prototype.logSoftmax=function(t){return this.throwIfDisposed(),(0,la.C)(this,t)};var ua=n(5530);(0,Nn.t3)().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),(0,ua.l)(this,t,e)},(0,Nn.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,we.c)(this)};var ha=n(5341);(0,Nn.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,ha.K)(this)},(0,Nn.t3)().prototype.logicalAnd=function(t){return this.throwIfDisposed(),(0,Y.H)(this,t)},(0,Nn.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Ue.h)(this)};var da=n(5117);(0,Nn.t3)().prototype.logicalOr=function(t){return this.throwIfDisposed(),(0,da.K)(this,t)};var pa=n(1712);(0,Nn.t3)().prototype.logicalXor=function(t){return this.throwIfDisposed(),(0,pa.e)(this,t)},(0,Nn.t3)().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),(0,V.O)(this,t,e,n)};var fa=n(5777);(0,Nn.t3)().prototype.maxPool=function(t,e,n,a){return this.throwIfDisposed(),(0,fa._)(this,t,e,n,a)};var ma=n(6176);(0,Nn.t3)().prototype.max=function(t,e){return this.throwIfDisposed(),(0,ma.F)(this,t,e)},(0,Nn.t3)().prototype.maximum=function(t){return this.throwIfDisposed(),(0,xn.g)(this,t)};var ga=n(6568);(0,Nn.t3)().prototype.mean=function(t,e){return this.throwIfDisposed(),(0,ga.J)(this,t,e)};var ya=n(7891);(0,Nn.t3)().prototype.min=function(t,e){return this.throwIfDisposed(),(0,ya.V)(this,t,e)};var ba=n(2273);(0,Nn.t3)().prototype.minimum=function(t){return this.throwIfDisposed(),(0,ba.L)(this,t)};var xa=n(9719);(0,Nn.t3)().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),(0,xa.V)(this,t,e)};var va=n(4645);(0,Nn.t3)().prototype.mod=function(t){return this.throwIfDisposed(),(0,va.w)(this,t)},(0,Nn.t3)().prototype.mul=function(t){return this.throwIfDisposed(),(0,i.d)(this,t)},(0,Nn.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,h.W)(this)};var wa=n(6662);(0,Nn.t3)().prototype.norm=function(t,e,n){return this.throwIfDisposed(),(0,wa.K)(this,t,e,n)};var ka=n(5549);(0,Nn.t3)().prototype.notEqual=function(t){return this.throwIfDisposed(),(0,ka.Q)(this,t)};var Ia=n(4326);(0,Nn.t3)().prototype.oneHot=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),(0,Ia.l)(this,t,e,n)};var Sa=n(773);(0,Nn.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Sa.J)(this)},(0,Nn.t3)().prototype.pad=function(t,e){return this.throwIfDisposed(),(0,Ze.v)(this,t,e)};var Na=n(7226);(0,Nn.t3)().prototype.pool=function(t,e,n,a,s,r){return this.throwIfDisposed(),(0,Na.d)(this,t,e,n,a,s,r)},(0,Nn.t3)().prototype.pow=function(t){return this.throwIfDisposed(),(0,ke.s)(this,t)};var Ta=n(6859);(0,Nn.t3)().prototype.prelu=function(t){return this.throwIfDisposed(),(0,Ta.A)(this,t)};var Ca=n(7722);(0,Nn.t3)().prototype.prod=function(t,e){return this.throwIfDisposed(),(0,Ca.W)(this,t,e)};var Ea=n(2209);(0,Nn.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Ea.M)(this)};var _a=n(7539);(0,Nn.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,_a.U)(this)};var Aa=n(5900);(0,Nn.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Aa.b)(this)},(0,Nn.t3)().prototype.reshapeAs=function(t){return this.throwIfDisposed(),(0,x.X)(this,t.shape)},(0,Nn.t3)().prototype.reshape=function(t){return this.throwIfDisposed(),(0,x.X)(this,t)};var Da=n(464);(0,Nn.t3)().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),(0,Da.I)(this,t,e,n)};var Ra=n(8600);(0,Nn.t3)().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),(0,Ra.j)(this,t,e,n)},(0,Nn.t3)().prototype.reverse=function(t){return this.throwIfDisposed(),(0,Me.G)(this,t)};var Oa=n(4617);(0,Nn.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Oa.Q)(this)};var Fa=n(766);(0,Nn.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,Fa.N)(this)},(0,Nn.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,At.b)(this)};var Ma=n(413);(0,Nn.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,Ma.U)(this)};var Ba=n(119);(0,Nn.t3)().prototype.separableConv2d=function(t,e,n,a,s,r){return this.throwIfDisposed(),(0,Ba.U)(this,t,e,n,a,s,r)},(0,Nn.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,$e.X)(this)};var La=n(2070);(0,Nn.t3)().prototype.sign=function(){return this.throwIfDisposed(),(0,La.X)(this)},(0,Nn.t3)().prototype.sin=function(){return this.throwIfDisposed(),(0,ut.O)(this)},(0,Nn.t3)().prototype.sinh=function(){return this.throwIfDisposed(),(0,dt.R)(this)},(0,Nn.t3)().prototype.slice=function(t,e){return this.throwIfDisposed(),(0,le.t)(this,t,e)};var za=n(4910);(0,Nn.t3)().prototype.softmax=function(t){return this.throwIfDisposed(),(0,za.X)(this,t)};var Ua=n(4626);(0,Nn.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Ua.W)(this)},(0,Nn.t3)().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),(0,G.f)(this,t,e)},(0,Nn.t3)().prototype.split=function(t,e){return this.throwIfDisposed(),(0,tt.V)(this,t,e)},(0,Nn.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,p._)(this)},(0,Nn.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,f.h)(this)};var Pa=n(7993);(0,Nn.t3)().prototype.squaredDifference=function(t){return this.throwIfDisposed(),(0,Pa.$)(this,t)};var Va=n(3931);(0,Nn.t3)().prototype.squeeze=function(t){return this.throwIfDisposed(),(0,Va.L)(this,t)},(0,Nn.t3)().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Nn.es?[this,t]:[this,...t];return(0,Ot.k)(n,e)},(0,Nn.t3)().prototype.step=function(t){return this.throwIfDisposed(),(0,c.N)(this,t)};var Wa=n(9017);(0,Nn.t3)().prototype.stridedSlice=function(t,e,n,a,s,r,o,i){return this.throwIfDisposed(),(0,Wa.N)(this,t,e,n,a,s,r,o,i)},(0,Nn.t3)().prototype.sub=function(t){return this.throwIfDisposed(),(0,m.l)(this,t)},(0,Nn.t3)().prototype.sum=function(t,e){return this.throwIfDisposed(),(0,v.S)(this,t,e)};var Ga=n(6999);(0,Nn.t3)().prototype.tan=function(){return this.throwIfDisposed(),(0,Ga.O)(this)};var Ha=n(1744);(0,Nn.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Ha.A)(this)},(0,Nn.t3)().prototype.tile=function(t){return this.throwIfDisposed(),(0,Dt.G)(this,t)},(0,Nn.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,o.p)(this,"bool")},(0,Nn.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,o.p)(this,"float32")},(0,Nn.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,o.p)(this,"int32")};var ja=n(9085);(0,Nn.t3)().prototype.topk=function(t,e){return this.throwIfDisposed(),(0,ja.h)(this,t,e)},(0,Nn.t3)().prototype.transpose=function(t){return this.throwIfDisposed(),(0,gt.p)(this,t)};var Xa=n(4860);(0,Nn.t3)().prototype.unique=function(t){return this.throwIfDisposed(),(0,Xa.T)(this,t)},(0,Nn.t3)().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),(0,Ft.p)(this,t,e)},(0,Nn.t3)().prototype.unstack=function(t){return this.throwIfDisposed(),(0,be.H)(this,t)},(0,Nn.t3)().prototype.where=function(t,e){return this.throwIfDisposed(),(0,Q.a)(t,this,e)},(0,Nn.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,I.P)(this)};class qa extends Error{constructor(t){super(t),Object.setPrototypeOf(this,qa.prototype)}}class Ka extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ka.prototype)}}class Za extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Za.prototype)}}class Ya extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ya.prototype)}}class Qa extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Qa.prototype)}}class Ja{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(t,"."));if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const t=this.cache.keys().next().value;this.cache.delete(t)}this.maxEntries=t}}function $a(t,e){if(Array.isArray(t)){let n=[];for(let a=0;a<e;a++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function ts(t,e){if(!t)throw new Qa(e)}function es(t,e){let n=0;for(const a of t)a===e&&n++;return n}function ns(t){return 1===t.length?t[0]:t}function as(t){return Array.isArray(t)?t:[t]}function ss(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function rs(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let os={};function is(t){if(null===t||void 0===t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function cs(t){if(null!=t&&"object"===typeof t)if(Array.isArray(t))t.forEach((t=>cs(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"===typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!==typeof e.value?cs(e):t[n]=e.value)}}}function ls(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof t){const s=t;let r;if(s in n)r=n[s];else if(s in os)r=os[s];else if(r=e[s],null==r)throw new Za("Unknown ".concat(a,": ").concat(t,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return r}{const r=t;if(null==r.className||null==r.config)throw new Za("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(r),".\n")+"'className' and 'config' must set.");const o=r.className;let i,c;if(o in n?[i,c]=n[o]:o in os?[i,c]=os.className:o in e&&([i,c]=e[o]),null==i)throw new Za("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const t={};for(const n of Object.keys(os))t[n]=os[n];for(const s of Object.keys(n))t[s]=n[s];r.config.customObjects=t;const e=Object.assign({},os);for(const s of Object.keys(n))os[s]=n[s];cs(r.config);const a=c(i,r.config,n,s);return os=Object.assign({},e),a}{const t=Object.assign({},os);for(const a of Object.keys(n))os[a]=n[a];const e=new i(r.config);return os=Object.assign({},t),e}}}function us(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function hs(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function ds(t){if(null==t)throw new Za("Invalid value in obj: ".concat(JSON.stringify(t)));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function ps(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Za("".concat(n," is not a valid ").concat(e,".  Valid values are ").concat(t," or null/undefined."))}function fs(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return ts(n>=0),ts(a>=n),Array.isArray(t)&&t.length>=n&&t.length<=a&&t.every((t=>typeof t===e))}function ms(t,e){Array.isArray(t)?(s.D5U.assert(t.length>0,(()=>"".concat(e," is unexpectedly an empty array."))),t.forEach(((t,n)=>ms(t,"element ".concat(n+1," of ").concat(e))))):s.D5U.assert(Number.isInteger(t)&&t>0,(()=>"Expected ".concat(e," to be a positive integer, but got ")+"".concat(gs(t),".")))}function gs(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>gs(t))).join(",")+"]":"string"===typeof t?'"'.concat(t,'"'):"".concat(t)}function ys(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}let bs=0;function xs(){return bs++}const vs={};function ws(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return t in vs||(vs[t]=0),vs[t]+=1,t+vs[t].toString()}const ks=["channelsFirst","channelsLast"],Is=["nearest","bilinear"],Ss=["valid","same","causal"],Ns=["max","avg"],Ts=["sum","mul","concat","ave"],Cs=new Map;function Es(t){ps(ks,"DataFormat",t)}function _s(t){ps(Ss,"PaddingMode",t)}function As(t){ps(Ns,"PoolMode",t)}const Ds=[],Rs="/";function Os(t,e){Ds.push(t);try{const t=e();return Ds.pop(),t}catch(n){throw Ds.pop(),n}}function Fs(t){if(!Ls(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Ds.length?"":Ds.join(Rs)+Rs)+t}function Ms(t){if(!Ls(t))throw new Error("Not a valid tensor name: '"+t+"'");Cs.has(t)||Cs.set(t,0);const e=Cs.get(t);if(Cs.set(t,Cs.get(t)+1),e>0){const n="".concat(t,"_").concat(e);return Cs.set(n,1),n}return t}const Bs=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ls(t){return!!t.match(Bs)}function zs(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let a=1;for(let s=e;s<n;++s)a*=t[s];return a}function Us(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const a=t[n];a<e&&(e=a)}return e}function Ps(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const a=t[n];a>e&&(e=a)}return e}function Vs(t,e){if(e<t)throw new Za("end (".concat(e,") < begin (").concat(t,") is forbidden."));const n=[];for(let a=t;a<e;++a)n.push(a);return n}let Ws;function Gs(){return null==Ws&&(Ws=(0,s.y3$)().epsilon()),Ws}function Hs(t,e){return s.pju(t,e)}function js(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),s.XLQ(t,n)}function Xs(t,e,n){return(0,s.lub)((()=>{switch(t.rank){case 1:return s.jZU(t,e,n);case 2:return s.SmN(t,[e,0],[n,t.shape[1]]);case 3:return s.CnO(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return s.p0P(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return s.tPi(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return s.tPi(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Za("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function qs(t,e,n){return(0,s.lub)((()=>{switch(t.rank){case 1:return s.jZU(t,e,n);case 2:return s.SmN(t,[0,e],[t.shape[0],n]);case 3:return s.CnO(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return s.p0P(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Za("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function Ks(t,e,n,a){return(0,s.lub)((()=>{switch(t.rank){case 1:return s.jZU(t,e,n);case 2:switch(a){case 1:return Xs(t,e,n);case 2:return qs(t,e,n);default:throw new Za("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return Xs(t,e,n);case 2:return s.CnO(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return qs(t,e,n);default:throw new Za("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return Xs(t,e,n);case 2:return s.p0P(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return s.p0P(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return qs(t,e,n);default:throw new Za("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new Za("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function Zs(t){let e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(e=t[0].rank,n=0!==e?e:0),n===t[0].rank&&(n=-1),s.zoF(t,n)}function Ys(t,e){switch(t.rank){case 1:return s.gME([t,e]);case 2:return s.Izb([t,e],0);case 3:return s.MNy([t,e],0);case 4:return s.ZaL([t,e],0);default:throw new Za("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(t.rank))}}function Qs(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Za("The length of input n (".concat(e.length,") does not match ")+"the number of dimensions in input x (".concat(t.rank,")"));return s.Gg6(t,e)}function Js(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;return s.nGf(t,e,n,a,r)}function $s(t,e,n,a){if(t.rank<2||e.rank<2)throw new Ya("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(t.shape," and y shape = ").concat(e.shape));if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Ya("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(t.shape," and ")+" y shape = ".concat(e.shape))}if(2===t.rank&&2===e.rank){const r=!1,o=!1;return s.imm.matMul({a:t,b:e,transposeA:r,transposeB:o,bias:a?nr(t.rank,a,"channelsLast"):null,activation:n})}{const r=t.shape.slice(),o=r.pop();t=s.XLQ(t,[-1,o]);const i=e.shape.slice(),c=i.pop(),l=i.pop(),u=[...i,c],h=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=s.XLQ(s.p4s(e,h),[l,-1]);const d=[...r,...u],p=!1,f=!1;return s.XLQ(s.imm.matMul({a:t,b:e,transposeA:p,transposeB:f,bias:a?nr(t.rank,a,"channelsLast"):null,activation:n}),d)}}function tr(t,e,n){return(0,s.lub)((()=>(e=Array.isArray(e)?(0,s.RRF)(e,"int32"):s.pju(e,"int32"),s.Iqj(t,e,n))))}function er(t){return s.dC7(t,t)}function nr(t,e,n){const a=e.shape;if(1!==e.rank&&e.rank!==t)throw new Za("Unexpected bias dimensions: ".concat(e.rank)+"; expected it to be 1 or ".concat(t));if(5===t){if("channelsFirst"===n)return 1===a.length?s.XLQ(e,[1,a[0],1,1,1]):s.XLQ(e,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?s.XLQ(e,[1,1,1,1,a[0]]):s.XLQ(e,[1].concat(a))}else if(4===t){if("channelsFirst"===n)return 1===a.length?s.XLQ(e,[1,a[0],1,1]):s.XLQ(e,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?s.XLQ(e,[1,1,1,a[0]]):s.XLQ(e,[1].concat(a))}else if(3===t){if("channelsFirst"===n)return 1===a.length?s.XLQ(e,[1,a[0],1]):s.XLQ(e,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?s.XLQ(e,[1,1,a[0]]):s.XLQ(e,[1].concat(a))}else if(t<3)return e;throw new Za("Unsupported input rank by biasAdd: ".concat(e.rank))}function ar(t,e,n){return(0,s.lub)((()=>(null==n&&(n="channelsLast"),Es(n),s.IHx(t,nr(t.rank,e,n)))))}function sr(t,e,n,a){return(0,s.lub)((()=>s.rvX(t,e,n,a)))}function rr(t,e){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?t():e()}const or=["fanIn","fanOut","fanAvg"],ir=["normal","uniform","truncatedNormal"];class cr extends s.m7h.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class lr extends cr{apply(t,e){return(0,s.lls)(t,e)}}lr.className="Zeros",s.m7h.registerClass(lr);class ur extends cr{apply(t,e){return(0,s.iUs)(t,e)}}ur.className="Ones",s.m7h.registerClass(ur);class hr extends cr{constructor(t){if(super(),"object"!==typeof t)throw new Za("Expected argument of type ConstantConfig but got ".concat(t));if(void 0===t.value)throw new Za("config must have value set but got ".concat(t));this.value=t.value}apply(t,e){return(0,s.lub)((()=>(0,s.dC7)((0,s.iD$)(this.value),(0,s.iUs)(t,e))))}getConfig(){return{value:this.value}}}hr.className="Constant",s.m7h.registerClass(hr);class dr extends cr{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return(0,s.LGj)(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}dr.className="RandomUniform",s.m7h.registerClass(dr);class pr extends cr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Ya("randomNormal does not support dType ".concat(e,"."));return Js(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}pr.className="RandomNormal",s.m7h.registerClass(pr);class fr extends cr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Ya("truncatedNormal does not support dType ".concat(e,"."));return(0,s.Xu6)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fr.className="TruncatedNormal",s.m7h.registerClass(fr);class mr extends cr{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return(0,s.lub)((()=>{if(2!==t.length||t[0]!==t[1])throw new Za("Identity matrix initializer can only be used for 2D square matrices.");return(0,s.dC7)(this.gain,(0,s.iyy)(t[0]))}))}getConfig(){return{gain:this.gain}}}mr.className="Identity",s.m7h.registerClass(mr);class gr extends cr{constructor(t){if(super(),t.scale<0)throw new Za("scale must be a positive float. Got: ".concat(t.scale));var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,ps(or,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){ps(ir,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t){let e,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Es(a),2===t.length)e=t[0],n=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===a){const a=zs(t,2);e=t[1]*a,n=t[0]*a}else if("channelsLast"===a){const a=zs(t,0,t.length-2);e=t[t.length-2]*a,n=t[t.length-1]*a}}else{const a=zs(t);e=Math.sqrt(a),n=Math.sqrt(a)}return[e,n]}(t),a=n[0],r=n[1];let o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,a):"fanOut"===this.mode?o/=Math.max(1,r):o/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(o);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Ya("".concat(this.getClassName()," does not support dType ").concat(e,"."));return(0,s.Xu6)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*o);return(0,s.LGj)(t,-n,n,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gr.className="VarianceScaling",s.m7h.registerClass(gr);class yr extends gr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return gr.className}}yr.className="GlorotUniform",s.m7h.registerClass(yr);class br extends gr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return gr.className}}br.className="GlorotNormal",s.m7h.registerClass(br);class xr extends gr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return gr.className}}xr.className="HeNormal",s.m7h.registerClass(xr);class vr extends gr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return gr.className}}vr.className="HeUniform",s.m7h.registerClass(vr);class wr extends gr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return gr.className}}wr.className="LeCunNormal",s.m7h.registerClass(wr);class kr extends gr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return gr.className}}kr.className="LeCunUniform",s.m7h.registerClass(kr);class Ir extends cr{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return(0,s.lub)((()=>{if(t.length<2)throw new Ya("Shape must be at least 2D.");if("int32"!==e&&"float32"!==e&&void 0!==e)throw new TypeError("Unsupported data type ".concat(e,"."));const n=s.D5U.sizeFromShape(t.slice(0,-1)),a=t[t.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const o=Js([Math.max(a,n),Math.min(a,n)],0,1,e,this.seed),i=s.$r2.qr(o,!1);let c=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return c=(0,s.dC7)(c,l.sign()),n<a&&(c=c.transpose()),(0,s.dC7)((0,s.iD$)(this.gain),c.reshape(t))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ir.className="Orthogonal",s.m7h.registerClass(Ir);const Sr={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Nr(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ls(t,s.m7h.SerializationMap.getMap().classNameMap,e,"initializer")}function Tr(t){return is(t)}function Cr(t){if("string"===typeof t){const e=t in Sr?Sr[t]:t;if("GlorotNormal"===e)return new br;if("GlorotUniform"===e)return new yr;if("HeNormal"===e)return new xr;if("HeUniform"===e)return new vr;if("LeCunNormal"===e)return new wr;if("LeCunUniform"===e)return new kr;{const t={};return t.className=e,t.config={},Nr(t)}}return t instanceof cr?t:Nr(t)}function Er(t){return Array.isArray(t)&&Array.isArray(t[0])}function _r(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Ar(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Za("Expected Tensor length to be 1; got ".concat(t.length));e=t[0]}else e=t;return e}function Dr(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new Za("Expected exactly 1 Shape; got ".concat(t.length))}return t}function Rr(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}const Or="Variable";class Fr{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Or,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=xs(),n=null==n?Or:n,this.originalName=Fs(n),this.name=Ms(this.originalName),this.trainable_=a,this.constraint=r,this.val=s.VD$(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Mr(t){return t.map((t=>t.read()))}function Br(t){t.forEach((t=>{t[0].write(t[1])}))}class Lr{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class zr{constructor(t,e,n,a,s,r,o){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=a,this.callArgs=s,this.outputTensorIndex=o,this.id=xs(),null!=r&&(this.originalName=Fs(r),this.name=Ms(this.originalName)),this.rank=e.length}}let Ur=0;class Pr{constructor(t,e){this.callArgs=e,this.id=Ur++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Vr=0;class Wr extends s.m7h.Serializable{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Vr++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=ss(t)+"_"+ws(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Ka("The layer has never been called "+"and thus has no defined ".concat(e,"."));if(this.inboundNodes.length<=t)throw new Za("Asked to get ".concat(e," at node ").concat(t,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[t]}getInputAt(t){return ns(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return ns(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new qa("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new qa("Layer ".concat(this.name)+" is not connected, no input to return.");return ns(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new qa("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new qa("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return ns(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=as(t);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=as(this.inputSpec);if(e.length!==n.length)throw new Za("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(e.length," input tensors. ")+"Input received: ".concat(t));for(let a=0;a<e.length;a++){const t=e[a],s=n[a];if(null==s)continue;const r=t.rank;if(null!=s.ndim&&r!==s.ndim)throw new Za("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(s.ndim,", found ndim=").concat(r));if(null!=s.maxNDim&&r>s.maxNDim)throw new Za("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(s.maxNDim,", found ndim=").concat(r));if(null!=s.minNDim&&r<s.minNDim)throw new Za("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(s.minNDim,", found ndim=").concat(r,"."));if(null!=s.dtype&&t.dtype!==s.dtype)throw new Za("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(s.dtype,", found dtype=").concat(t.dtype,"."));if(s.axes){const e=t.shape;for(const t in s.axes){const n=Number(t),r=s.axes[t],o=n>=0?e[n]:e[e.length+n];if(null!=r&&-1===[r,null].indexOf(o))throw new Za("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(r," but got shape ").concat(e,"."))}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const n=s.shape[e],r=t.shape[e];if(null!=n&&null!=r&&n!==r)throw new Za("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(s.shape,", ")+"found shape=".concat(t.shape,"."))}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=as(t),a=function(t){let e=!0;for(const n of as(t))if(!(n instanceof zr)){e=!1;break}return e}(t),s=function(t){let e=!0;for(const n of as(t))if(n instanceof zr){e=!1;break}return e}(t);if(a===s)throw new Za("Arguments to apply() must be all SymbolicTensors or all Tensors");return Os(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of as(t))e.push(n.shape);this.build(ns(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let a=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,a);const s=as(a),r=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),r.push(t);if(a=ns(r),null!=this.activityRegularizer)throw new Ya("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(t){t=as(t);const e=[];for(const n of t)e.push(n.shape);return ns(e)}(t),a=this.computeOutputShape(n);let s;const r="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new zr(r,n,this,as(t),e,this.name,a))):new zr(r,a,this,as(t),e,this.name),this.addInboundNode(t,s,null,null,n,a,e),this._refCount++,null!=this.activityRegularizer)throw new Ya("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(t),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let e=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=t[a]&&t[a]!==n&&(e=!0)})),e&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(t),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new qa("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new qa("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Ka("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Rr(this.weights)}build(t){this.built=!0}getWeights(){return Mr(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(t){(0,s.lub)((()=>{const e=this.weights;if(e.length!==t.length)throw new Za('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(t.length,", ")+"but the layer was expecting ".concat(e.length," weights. ")+"Provided weights: ".concat(t,"..."));if(0===e.length)return;const n=[],a=Mr(e);for(let r=0;r<a.length;++r){const o=a[r],i=e[r],c=t[r];if(!s.D5U.arraysEqual(o.shape,c.shape))throw new Za("Layer weight shape ".concat(o.shape," ")+"not compatible with provided weight shape ".concat(c.shape));n.push([i,c])}Br(n)}))}addWeight(t,e,n,a,s,r,o,i){if(-1!==this._addedWeightNames.indexOf(t))throw new Za("Duplicate weight name ".concat(t," for layer ").concat(this.name));this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():Cr("zeros"));const c=a.apply(e,n),l=new Fr(c,n,t,r,o);return c.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==r&&(r=!0),r?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=as(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");e.forEach((t=>{if(null!=t)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return e}setMaskMetadata(t,e,n){if(!this.supportsMasking)return;const a=this.computeMask(t,n),s=as(e),r=as(a);if(s.length!==r.length)throw new Error("".concat(this.name," outputs ").concat(s.length," tensors ")+"but ".concat(s.length," masks for those tensors"));for(let o=0;o<s.length;o++)s[o].kerasMask=r[o]}addInboundNode(t,e,n,a,s,r){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=as(t);e=as(e),n=as(n),a=as(a),s=_r(s),r=_r(r);const c=[],l=[],u=[];for(const h of i)c.push(h.sourceLayer),l.push(h.nodeIndex),u.push(h.tensorIndex);new Pr({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:e,inputMasks:n,outputMasks:a,inputShapes:s,outputShapes:r},o);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Gr(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const a=Gr(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of a)-1===e.indexOf(t)&&e.push(t)}return e}}}class Hr extends Wr{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:ws("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Za("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Za("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Za("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const a=new zr(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Pr({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Za("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Hr.className="InputLayer",s.m7h.registerClass(Hr);class jr{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof jr)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Za("Duplicate key: name=".concat(t.name,", id=").concat(t.id));return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return(0,s.pju)(e,t.dtype)}catch(n){throw new Za("The dtype of the feed (".concat(e.dtype,") can not be cast to the dtype ")+"of the key '".concat(t.name,"' (").concat(t.dtype,")."))}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof zr){if(null==this.id2Value[t.id])throw new Za("Nonexistent key: ".concat(t.name));return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Za("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Value[e]}}getMask(t){if(t instanceof zr){if(null==this.id2Value[t.id])throw new Za("Nonexistent key: ".concat(t.name));return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Za("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&(0,s.B90)(this.id2Mask)}}const Xr=new Ja,qr=new Ja;function Kr(t,e,n,a){const r=null!=n&&n.training,o=Array.isArray(t),i=o?t:[t],c=i.map((t=>t.name)),l=[],u=e.names();for(const s of c)-1!==u.indexOf(s)?l.push(e.getValue(s)):l.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const h=c.join(",")+"|"+e.names().sort().join(",");let d,p=Xr.get(h);if(null==p){const t=function(t,e){s.D5U.assert(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===t.length){const s=Yr(t[0],e);n=s.sorted,a=s.recipientMap}else{const s=new Set;for(const r of t){const{sorted:t,recipientMap:o}=Yr(r,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const e in o)null==a[e]&&(a[e]=new Set),o[e].forEach((t=>a[e].add(t)))}}return{sorted:n,recipientCounts:Zr(a)}}(i,e);p=t.sorted,d=t.recipientCounts,Xr.put(h,p),qr.put(h,d)}d={},r||Object.assign(d,qr.get(h));const f=new jr(e);for(let m=0;m<p.length;++m){if(null!=a){const t=(0,s.sq6)().numTensors;t>a.maxNumTensors&&(a.maxNumTensors=t),t<a.minNumTensors&&(a.minNumTensors=t)}const t=p[m],o=t.sourceLayer;if(o instanceof Hr)continue;const i=[],u=[],h=[];let g=!1;for(const n of t.inputs){const t=f.getValue(n),a=f.getMask(n);i.push(t),u.push(a),null!=a&&(g=!0),r||(d[n.name]--,0!==d[n.name]||e.hasKey(n)||-1!==c.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||h.push(t))}g&&((n=n||{}).mask=u[0]);const y=as(o.apply(i,n));let b=null;o.supportsMasking&&(b=o.computeMask(i,u));const x=Qr(t),v=Array.isArray(x)?x:[x];for(let e=0;e<v.length;++e){f.hasKey(v[e])||f.add(v[e],y[e],Array.isArray(b)?b[0]:b);const t=c.indexOf(v[e].name);-1!==t&&(l[t]=y[e])}r||(0,s.B90)(h)}return f.disposeMasks(),o?l:l[0]}function Zr(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Yr(t,e){const n=new Set,a=[],s={};for(const i of e.names())n.add(i);const r=[],o=[];for(r.push(t);r.length>0;){const t=r[r.length-1];if(n.has(t.name)){r.pop();continue}const e=o[o.length-1]===r.length-1;if(0===t.inputs.length||e)r.pop(),a.push(t),n.add(t.name),e&&o.pop();else{o.push(r.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||r.push(e)}}return{sorted:a,recipientMap:s}}function Qr(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const a of t.sourceLayer.inboundNodes[e].outputTensors)if(a.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}function Jr(t,e){return(0,s.lub)((()=>s._b3(s.Smz(s.dC7(t,t),e,!0))))}(0,s.OBj)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(t){null!=Xr&&Xr.setMaxEntries(t),null!=qr&&qr.setMaxEntries(t)}));class $r extends s.m7h.Serializable{getConfig(){return{}}}class to extends $r{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,s.lub)((()=>{const e=Jr(t,this.axis),n=s.iUl(e,0,this.maxValue);return s.dC7(t,s.hiC(n,s.IHx(Gs(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}to.className="MaxNorm",s.m7h.registerClass(to);class eo extends $r{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,s.lub)((()=>s.hiC(t,s.IHx(Gs(),Jr(t,this.axis)))))}getConfig(){return{axis:this.axis}}}eo.className="UnitNorm",s.m7h.registerClass(eo);class no extends $r{apply(t){return s.UYe(t)}}no.className="NonNeg",s.m7h.registerClass(no);class ao extends $r{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,s.lub)((()=>{const e=Jr(t,this.axis),n=s.IHx(s.dC7(this.rate,s.iUl(e,this.minValue,this.maxValue)),s.dC7(1-this.rate,e));return s.dC7(t,s.hiC(n,s.IHx(Gs(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ao.className="MinMaxNorm",s.m7h.registerClass(ao);const so={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ro(t){return is(t)}function oo(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ls(t,s.m7h.SerializationMap.getMap().classNameMap,e,"constraint")}function io(t){if(null==t)return null;if("string"===typeof t){return oo({className:t in so?so[t]:t,config:{}})}return t instanceof $r?t:oo(t)}async function co(t){if(null==t)return;const e=[],n=[],a=[];for(const s in t){const r=t[s];if("number"!==typeof r){const t=r;e.push(t.data()),n.push(s),a.push(t)}}if(e.length>0){const r=await Promise.all(e);for(let e=0;e<r.length;++e)t[n[e]]=r[e][0];(0,s.B90)(a)}}function lo(t){if(null!=t)for(const e in t){const n=t[e];"number"!==typeof n&&n.dispose()}}var uo;!function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(uo||(uo={}));class ho{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class po{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class fo extends ho{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const a in e){const t=e[a];if("number"===typeof t)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+t*n;else{let e;a in this.totals?e=this.totals[a]:this.totals[a]=0;const r=(0,s.lub)((()=>(0,s.IHx)(this.totals[a],(0,s.dC7)(t,n))));this.totals[a]=r,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?e[n]=this.totals[n]/this.seen:(0,s.lub)((()=>{const t=(0,s.dC7)((0,s.hiC)(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),(0,s.CnY)(e[n])})))}}class mo extends ho{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const a=this.history[s];for(let r=0;r<a.length;++r)if("number"!==typeof a[r]){const o=a[r];t.push(o.data()),e.push(s),n.push(r)}}const a=await Promise.all(t);for(let s=0;s<a.length;++s){this.history[e[s]][n[s]].dispose(),this.history[e[s]][n[s]]=a[s][0]}}}class go extends ho{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||s.glt,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");s.D5U.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,e,n){let a,r=null!=n?n():s.D5U.now();return function(){const o=null!=n?n():s.D5U.now();return o-r<e||(r=o,a=t(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const a=[];null!=this.yield&&(await co(n),a.push(this.yield(t,e,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await co(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await co(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await co(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await co(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):s.D5U.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await co(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await co(t),await this.trainEnd(t))}}function yo(t,e){if(null==t&&(t={}),t instanceof ho)return[t];if(Array.isArray(t)&&t[0]instanceof ho)return t;return as(t).map((t=>new go(t,e)))}class bo{constructor(){}static registerCallbackConstructor(t,e){s.D5U.assert(t>=0&&Number.isInteger(t),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(t))),bo.checkForDuplicate(e),null==bo.constructors[t]&&(bo.constructors[t]=[]),bo.constructors[t].push(e)}static checkForDuplicate(t){for(const e in bo.constructors){bo.constructors[+e].forEach((e=>{if(e===t)throw new Za("Duplicate callback constructor.")}))}}static clear(){bo.constructors={}}static createCallbacks(t){const e=[];for(const n in bo.constructors){const a=+n;t>=a&&e.push(...bo.constructors[a])}return e.map((t=>new t))}}function xo(t,e,n,a,s,r,o,i,c){const l=new mo,u=[new fo,...bo.createCallbacks(e)];null!=t&&u.push(...t),u.push(l);const h=new po(u);return h.setParams({epochs:n,initialEpoch:a,samples:s,steps:r,batchSize:o,verbose:e,doValidation:i,metrics:c}),{callbackList:h,history:l}}function vo(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ls(t,s.m7h.SerializationMap.getMap().classNameMap,e,"layer",n)}function wo(t,e){return(0,s.lub)((()=>{"float32"!==t.dtype&&(t=s.pju(t,"float32"));const n=s.Smz(er(t),e,!0),a=s.hlL(n.shape,Gs()),r=s._b3(s.gWQ(n,a));return s.hiC(t,r)}))}function ko(t,e){return(0,s.lub)((()=>s.J69(er(s.luU(e,t)),-1)))}function Io(t,e){return(0,s.lub)((()=>s.J69(s.WnP(s.luU(e,t)),-1)))}function So(t,e){return(0,s.lub)((()=>{const n=s.luU(t,e),a=s.iUl(s.WnP(t),Gs(),Number.MAX_VALUE),r=s.WnP(s.hiC(n,a));return s.dC7(100,s.J69(r,-1))}))}function No(t,e){return(0,s.lub)((()=>{const n=s.iUl(e,Gs(),Number.MAX_VALUE),a=s.cM7(s.IHx(1,n)),r=s.iUl(t,Gs(),Number.MAX_VALUE),o=s.cM7(s.IHx(1,r));return s.J69(er(s.luU(a,o)),-1)}))}function To(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,s.lub)((()=>{if(n)e=s.XAC(e);else{const t=s.Smz(e,e.shape.length-1,!0);e=s.hiC(e,t)}return e=s.iUl(e,Gs(),1-Gs()),s.W76(s.Smz(s.dC7(s.pju(t,"float32"),s.cM7(e)),e.shape.length-1))}))}function Co(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,s.lub)((()=>{const a=s.pju(s.GWj(function(t){const e=[zs(t.shape)];return s.XLQ(t,e)}(t)),"int32"),r=(e=s.iUl(e,Gs(),1-Gs())).shape;return To(s.XLQ(s.lfX(a,r[r.length-1]),r),e,n)}))}function Eo(t,e){return(0,s.lub)((()=>{let n;return n=s.iUl(e,Gs(),1-Gs()),n=s.cM7(s.hiC(n,s.luU(1,n))),s.J69(function(t,e){if(!s.D5U.arraysEqual(t.shape,e.shape))throw new Za("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(t.shape)," and ").concat(JSON.stringify(e.shape)));return(0,s.lub)((()=>{const n=s.UYe(e),a=s.W76(s.WnP(e));return s.IHx(s.luU(n,s.dC7(e,t)),s.Krr(s.Qqt(a)))}))}(t,n),-1)}))}function _o(t,e){return(0,s.lub)((()=>{const n=s.iUl(t,Gs(),1),a=s.iUl(e,Gs(),1);return s.Smz(s.dC7(t,s.cM7(s.hiC(n,a))),-1)}))}function Ao(t,e){return(0,s.lub)((()=>{const n=wo(t,-1),a=wo(e,-1),r=s.dC7(n,a);return s.W76(s.Smz(r,-1))}))}bo.constructors={};const Do={meanSquaredError:ko,meanAbsoluteError:Io,meanAbsolutePercentageError:So,meanSquaredLogarithmicError:No,squaredHinge:function(t,e){return(0,s.lub)((()=>{const n=s.gWQ(0,s.luU(1,s.dC7(t,e)));return s.J69(er(n),-1)}))},hinge:function(t,e){return(0,s.lub)((()=>{const n=s.gWQ(0,s.luU(1,s.dC7(t,e)));return s.J69(n,-1)}))},categoricalHinge:function(t,e){return(0,s.lub)((()=>{const n=s.Smz(s.dC7(t,e),-1),a=s.Fp7(s.dC7(s.luU(1,t),e),-1);return s.gWQ(0,s.IHx(1,s.luU(a,n)))}))},logcosh:function(t,e){return(0,s.lub)((()=>{const n=Math.log(2),a=s.luU(e,t),r=s.luU(s.IHx(a,s.Wvh(s.dC7(-2,a))),n);return s.J69(r,-1)}))},categoricalCrossentropy:To,sparseCategoricalCrossentropy:Co,binaryCrossentropy:Eo,kullbackLeiblerDivergence:_o,poisson:function(t,e){return(0,s.lub)((()=>{const n=s.cM7(s.IHx(Gs(),e));return s.J69(s.luU(e,s.dC7(t,n)),-1)}))},cosineProximity:Ao};function Ro(t){if("string"===typeof t){if(t in Do)return Do[t];let e="Unknown loss ".concat(t);throw t.toLowerCase().includes("softmaxcrossentropy")&&(e="Unknown loss ".concat(t,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new Za(e)}return t}function Oo(t,e){return(0,s.lub)((()=>{const n=s.dC7(.5,s.JpU(e)),a=Hs(s.pjt(e,n),t.dtype);return s.J69(s.DgJ(t,a),-1)}))}function Fo(t,e){return(0,s.lub)((()=>Hs(s.DgJ(s.NqF(t,-1),s.NqF(e,-1)),"float32")))}function Mo(t,e){return(0,s.lub)((()=>s.pju(s.Smz(s.HvI(s.DgJ(t,1),s.DgJ(e,1))),"float32")))}function Bo(t,e){return Eo(t,e)}function Lo(t,e){return t.rank===e.rank&&(t=s.L9e(t,[t.rank-1])),(e=s.NqF(e,-1)).dtype!==t.dtype&&(e=s.pju(e,t.dtype)),s.pju(s.DgJ(t,e),"float32")}const zo=To,Uo=Co,Po={binaryAccuracy:Oo,categoricalAccuracy:Fo,precision:function(t,e){return(0,s.lub)((()=>{const n=Mo(t,e),a=function(t,e){return(0,s.lub)((()=>s.pju(s.Smz(s.HvI(s.DgJ(t,0),s.DgJ(e,1))),"float32")))}(t,e),r=s.IHx(n,a);return s.pju(s.arb(s.pjt(r,0),s.hiC(n,r),0),"float32")}))},categoricalCrossentropy:zo,sparseCategoricalCrossentropy:Uo,mse:ko,MSE:ko,mae:Io,MAE:Io,mape:So,MAPE:So,cosine:Ao};function Vo(t){if("string"===typeof t&&t in Po)return Po[t];if("string"!==typeof t&&null!=t)return t;throw new Za("Unknown metric ".concat(t))}function Wo(t){if(ts(null!==t,"Unknown LossOrMetricFn ".concat(t)),"string"===typeof t)return t;{let e;for(const n of Object.keys(Do))if(Do[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Po))if(Po[n]===t){e=n;break}return void 0!==e?e:t.name}}const Go=1048576;function Ho(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t||"object"!==typeof t||Object.getPrototypeOf(t)!==Object.prototype||!jo(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>Go&&console.warn('User-defined metadata of model "'.concat(e,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(Go,"."))}}function jo(t){if(null===t)return!0;if("object"===typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!==typeof n)return!1;if(!jo(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!jo(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Xo(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const s=function(t){let e=!0;const n=[],a=[];for(const s in t.nodesByDepth)n.push(t.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){e=!1;break}a.push(...s)}if(e)for(const s of t.layers){let t=!1;for(const n of s.inboundNodes)if(-1!==a.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),r=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(s?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){r.push("Receives inputs"),o=[];for(const e in t.nodesByDepth)o.push(...t.nodesByDepth[e])}a("_".repeat(e)),qo(r,n,a),a("=".repeat(e));const i=t.layers;for(let u=0;u<i.length;++u)s?Ko(i[u],n,a):Zo(i[u],n,o,a),a((u===i.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const c=function(t){let e;e=null!=t.collectedTrainableWeights?Rr(t.collectedTrainableWeights):Rr(t.trainableWeights);return e}(t),l=Rr(t.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(e))}function qo(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let s=0;s<t.length;++s)s>0&&(a=a.slice(0,a.length-1)+" "),a+=t[s],a=a.slice(0,e[s]),a+=" ".repeat(e[s]-a.length);n(a)}function Ko(t,e,n){let a,s;try{s=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(i){s="multiple"}try{a=JSON.stringify(t.outputShape)}catch(i){a="multiple"}const r=t.name,o=t.getClassName();qo(["".concat(r," (").concat(o,")"),s,a,t.countParams().toString()],e,n)}function Zo(t,e,n,a){let s,r;try{r=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(u){r="multiple"}try{s=JSON.stringify(t.outputShape)}catch(u){s="multiple"}const o=[];for(const h of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(h)))for(let t=0;t<h.inboundLayers.length;++t){const e=h.inboundLayers[t].name,n=h.nodeIndices[t],a=h.tensorIndices[t];o.push("".concat(e,"[").concat(n,"][").concat(a,"]"))}const i=t.name,c=t.getClassName(),l=0===o.length?"":o[0];qo(["".concat(i," (").concat(c,")"),r,s,t.countParams().toString(),l],e,a);for(let h=1;h<o.length;++h)qo(["","","","",o[h]],e,a)}function Yo(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"===typeof n}function Qo(t,e){if(null===t)return null;if("string"===typeof t)return rs(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],a=t.length;for(let s=0;s<a;++s){const a=t[s];Yo(e,s,a)?n.push(a):n.push(Qo(a,e))}return n}{const e={};for(const n of Object.keys(t)){const a=t[n];if("name"===n&&"string"===typeof a)e[n]=a;else{const t=rs(n);e[t]=Qo(a,t)}}return e}}function Jo(t,e){if(null===t||void 0===t)return null;if("string"===typeof t)return ss(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],a=t.length;for(let s=0;s<a;++s){const a=t[s];Yo(e,s,a)?n.push(a):n.push(Jo(a,e))}return n}{const e={};for(const n of Object.keys(t)){const a=t[n],s=ss(n);e[s]="name"!==n&&"className"!==n||"string"!==typeof a?Jo(a,n):a}return e}}const $o="4.15.0";class ti extends Wr{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=ws(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],hs(this.inputs).length!==this.inputs.length)throw new Za("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((t=>t.name))));hs(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((t=>t.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const t=y.sourceLayer,e=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const t=y.sourceLayer,e=y.nodeIndex,n=y.tensorIndex;ts(0===e,"input layer has >1 nodes"),ts(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const e=this.inputLayers[y];if(!(e instanceof Hr))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(t.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(e.getClassName(),"."));this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},a={},s={},r={},o=[],i=(t,e,n,a,s,c)=>{null!=a&&null!=s&&null!=c||(a=t.sourceLayer,s=t.nodeIndex,c=t.tensorIndex);const l=a.inboundNodes[s];if(-1!==n.indexOf(l))throw new Ka("The tensor ".concat(t.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==e.indexOf(l))return;this.containerNodes.add(ti.nodeKey(a,s)),a.id in r||(r[a.id]=Object.keys(r).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let r=0;r<u;r++){const t=l.inputTensors[r],a=l.inboundLayers[r],s=l.nodeIndices[r],o=l.tensorIndices[r];i(t,e,n,a,s,o)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=o.slice().reverse();for(const y of u){n[y.id]=y,y.id in e||(e[y.id]=0);let t=e[y.id];const r=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];t=Math.max(t,r),a[y.outboundLayer.id]=t,s[y.outboundLayer.id]=y.outboundLayer,e[y.id]=t;for(let a=0;a<y.inboundLayers.length;a++){const s=y.inboundLayers[a],r=y.nodeIndices[a],o=s.inboundNodes[r],i=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(t+1,i),n[o.id]=o}}const h={};for(const y in e){const t=e[y];t in h||(h[t]=[]),h[t].push(n[y])}const d={};for(const y in a){const t=a[y];t in d||(d[t]=[]),d[t].push(s[y])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(us);this.layers=[];for(const y of p){const t=d[y];t.sort(((t,e)=>{const n=r[t.id],a=r[e.id];return n<a?-1:n>a?1:0}));for(const e of t)e instanceof ti&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((t=>parseInt(t,10))).sort(us);const f=this.inputs.slice(),m=[];for(const y of p)for(const t of h[y]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Ka("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(e.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const y of g){const t=g.filter((t=>t===y)).length;if(1!==t)throw new Ka('The name "'.concat(y,'" is used ').concat(t," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Pr({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Za("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const s=(t=>{const e=Object.keys(t);if(0===e.length)return!1;const n=e[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(t);s&&this.parseWeights(t);for(const o of this.layers)for(const[t,e]of o.weights.entries()){const r=s?"".concat(e.name.split("/").slice(0,-1).join("/")+"/").concat(t):e.originalName;if(null!=n[r])throw new Za("Duplicate weight name: ".concat(r));n[r]=e,a++}const r=[];for(const o in t){let a=o;if(null==n[o]){const t=o.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])r.push([n[a],t[o]]);else if(e)throw new Za("Provided weight data has no target variable: ".concat(o));delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Za("".concat(t.length," of ").concat(a," weights are not set: ")+"".concat(t))}Br(r)}parseWeights(t){for(const e in Object.keys(t)){const n=e.split("/"),a=["vars","layer_checkpoint_dependencies"],s=n.map((t=>t.startsWith("_")?t.slice(1):t)).filter((t=>!a.includes(t))).join("/");s!==e&&(t[s]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers ".concat($o),e.backend="TensorFlow.js",e}toJSON(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Jo(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return(0,s.lub)((()=>{t=as(t);const n=new jr;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Kr(this.outputs,n,e)}))}computeMask(t,e){return(0,s.lub)((()=>{let n;return t=as(t),n=null==e?$a(null,t.length):as(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=_r(t);if(e.length!==this.inputLayers.length)throw new Za("Invalid inputShape argument ".concat(t,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<e.length;o++){const t=this.inputLayers[o],a=e[o];n[t.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(us);if(a.length>1)for(const o of a){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(t.id))continue;const a=[];for(let o=0;o<e.inboundLayers.length;o++){const t=e.inboundLayers[o],s=e.nodeIndices[o],r=e.tensorIndices[o],i=n["".concat(t.name,"_").concat(s,"_").concat(r)];a.push(i)}const s=_r(t.computeOutputShape(ns(a))),r=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++){n["".concat(t.name,"_").concat(r,"_").concat(e)]=s[e]}}}const s=[],r=[];for(let o=0;o<this.outputLayers.length;o++){const t=this.outputLayers[o],e=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(t.name,"_").concat(e,"_").concat(n);r.push(a)}for(let o=0;o<r.length;o++){const t=r[o];ts(t in n),s.push(n[t])}return ns(s)}runInternalGraph(t,e){null==e&&(e=$a(null,t.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],s=t[i],r=e[i];n[a.id]=[s,r]}const a=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(us);for(const i of a){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer,a=e.inputTensors,s=e.outputTensors,r=new Array;for(const e of a)e.id in n&&r.push(n[e.id]);if(r.length===a.length){let a,o,i,c,l={};if(null!=e.callArgs&&(l=e.callArgs),1===r.length){const[e,n]=r[0];null==l.mask&&(l.mask=n),i=as(t.call(e,l)),c=as(t.computeMask(e,n)),a=[e],o=[n]}else a=r.map((t=>t[0])),o=r.map((t=>t[1])),null==l.mask&&(l.mask=o),i=as(t.call(a,l)),c=as(t.computeMask(a,o));if(t.activityRegularizer)throw new Ya("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],a=i[t],r=c[t];n[e.id]=[a,r]}}}}const s=[],r=[],o=[];for(const i of this.outputs){ts(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[t,e]=n[i.id];o.push(t.shape),s.push(t),r.push(e)}return[s,r,o]}buildNodeConversionMap(t){const e={};let n;for(const a of this.layers){n=a instanceof ti?1:0;for(let t=0;t<a.inboundNodes.length;t++){const s=ti.nodeKey(a,t);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e)return this.findLayer(e);if(null==t)throw new Za("Provide either a layer name or layer index");if("number"===typeof t)return this.findLayer(t);for(const n of this.layers)if(n.name===t)return n;throw new Za("No such layer: ".concat(t))}findLayer(t){if(this.layers.length<=t)throw new Za("Was asked to retrieve layer at index ".concat(t,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[t]}calculateLosses(){return(0,s.lub)((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const a=ti.nodeKey(e,n);this.containerNodes.has(a)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const t=o.getClassName(),a=o.getConfig(),s=[];for(let n=0;n<o.inboundNodes.length;n++){const t=o.inboundNodes[n],a=ti.nodeKey(o,n);let i={};if(this.containerNodes.has(a)){if(t.callArgs)try{JSON.stringify(t.callArgs),i=t.callArgs}catch(r){console.warn("Layer ".concat(o.name," was passed ")+"non-serializable keyword arguments: "+"".concat(t.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(t.inboundLayers.length>0){const n=[];for(let a=0;a<t.inboundLayers.length;a++){const s=t.inboundLayers[a],r=t.nodeIndices[a],o=t.tensorIndices[a];let c=e[ti.nodeKey(s,r)];null==c&&(c=0),n.push([s.name,c,o,i])}s.push(n)}}}const i={};i.name=o.name,i.className=t,i.config=a,i.inboundNodes=s,n.push(i)}t.layers=n;const a=[];for(let o=0;o<this.inputLayers.length;o++){const t=this.inputLayers[o],n=this.inputLayersNodeIndices[o],s=ti.nodeKey(t,n);if(!this.containerNodes.has(s))continue;let r=e[s];null!==r&&void 0!==r||(r=0);const i=this.inputLayersTensorIndices[o];a.push([t.name,r,i])}t.inputLayers=a;const s=[];for(let o=0;o<this.outputLayers.length;o++){const t=this.outputLayers[o],n=this.outputLayersNodeIndices[o],a=ti.nodeKey(t,n);if(!this.containerNodes.has(a))continue;let r=e[a];null!==r&&void 0!==r||(r=0);const i=this.outputLayersTensorIndices[o];s.push([t.name,r,i])}return t.outputLayers=s,t}static fromConfig(t,e){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},s={};function r(t,e){t.name in s?s[t.name].push(e):s[t.name]=[e]}function o(t,e){const n=[];let s;for(const o of e){const i=o[0],c=o[1],l=o[2];if(s=null==o[3]?{}:o[3],!(i in a))return void r(t,e);const u=a[i];if(u.inboundNodes.length<=c)return void r(t,e);const h=u.inboundNodes[c];n.push(h.outputTensors[l])}n.length>0&&t.apply(ns(n),s)}function i(t){const s=t.name,o=vo(t,null!=e.customObjects?e.customObjects:{});o.setFastWeightInitDuringBuild(n),a[s]=o;t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Za("Corrupted configuration, expected array for nodeData: ".concat(t));r(o,t)}))}const c=e.name,l=e.layers;for(const f of l)i(f);for(;!ds(s);)for(const t of l){const e=a[t.name];if(e.name in s){const t=s[e.name];delete s[e.name];for(const n of t)o(e,n)}}const u=[],h=[],d=e.inputLayers;for(const f of d){const t=f[0],e=f[1],n=f[2];ts(t in a);const s=a[t].inboundNodes[e].outputTensors;u.push(s[n])}const p=e.outputLayers;for(const f of p){const t=f[0],e=f[1],n=f[2];ts(t in a);const s=a[t].inboundNodes[e].outputTensors;h.push(s[n])}return new t({inputs:u,outputs:h,name:c})}get stateful(){if(this._stateful)throw new Za("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){(0,s.lub)((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function ei(t,e,n){const a=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===a)return Array.isArray(t)&&1===t.length?t:"object"===typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(t.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return t}if("object"===typeof t&&Object.keys(t).length>0&&"object"===typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(e," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(t)))}function ni(t,e){return ei(t,e,"classWeight")}async function ai(t,e,n,a){if(null!=e||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=(0,s.lub)((()=>{if(1===t.shape.length)return(0,s.d9v)(t);if(2===t.shape.length){if(t.shape[1]>1){const e=1;return(0,s.NqF)(t,e)}if(1===t.shape[1])return(0,s.XLQ)(t,[t.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(t.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(t.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await e.data());(0,s.B90)(e);const r=[];return a.forEach((t=>{if(null==n[t])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(t," exists in the data but not in ")+"classWeight");r.push(n[t])})),(0,s.RRF)(r,"float32")}return null}function si(t,e){return(0,s.dC7)(t,e)}function ri(t,e){let n,a;const r=e;n=r.xs,a=r.ys,s.D5U.assert(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(e)));const o=oi("input",t.inputNames,n),i=oi("output",t.outputNames,a),c=o[0].shape[0];s.D5U.assert(o.length===t.inputs.length,(()=>"LayersModel has ".concat(t.inputs.length," inputs, but the dataset ")+"provides ".concat(o.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(t.inputNames),")"))),s.D5U.assert(i.length===t.outputs.length,(()=>"LayersModel has ".concat(t.outputs.length," outputs, but the dataset ")+"provides ".concat(i.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(t.outputNames),")")));for(let l=0;l<o.length;l++)s.D5U.assert(o[l].shape[0]===c,(()=>"Batch size mismatch: input "+"".concat(t.inputNames[l]," has ").concat(o[l].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(t.inputNames[0],".")));for(let l=0;l<i.length;l++)s.D5U.assert(i[l].shape[0]===c,(()=>"Batch size mismatch: output "+"".concat(t.outputNames[l]," has ").concat(i[l].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(t.inputNames[0],".")));return{xs:o,ys:i}}function oi(t,e,n){if(n instanceof s.esB)return[n];if(Array.isArray(n))return s.D5U.assert(n.length===e.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(e.length," to match the ").concat(t," keys ").concat(e,"."))),n;{const a=[];for(const s of e){if(null==n[s])throw new Za("The feature data generated by the dataset lacks the required "+"".concat(t," key '").concat(s,"'."));a.push(n[s])}return a}}async function ii(t,e,n){const a=null!=n.batchesPerEpoch;if(s.D5U.assert(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),s.D5U.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),s.D5U.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),s.D5U.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),s.D5U.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=null!=n.validationData;let o,i;if(r)if(ci(n.validationData))s.D5U.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const t=function(t){if(3===t.length)throw new Ya("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);o=t.xs,i=t.ys}const c=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const h=yo(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=xo(h,d,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,r,u);p.setModel(t),t.history=f,await p.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;m<n.epochs;){const u={};await p.onEpochBegin(m);let h=0,d=0;for(a||(g=await e.iterator());!a||h<n.batchesPerEpoch;){const e=await g.next();if(a&&e.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(h," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:a,ys:r}=ri(t,e.value),o={};o.batch=d,o.size=a[0].shape[0],await p.onBatchBegin(d,o);const i=[];if(null!=n.classWeight){const e=ni(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await ai(r[t],null,e[t]))}const u=a.concat(r).concat(i),f=c(u);s.B90(u);for(let t=0;t<l.length;++t){const e=l[t],n=f[t];o[e]=n,s.CnY(n)}await p.onBatchEnd(d,o),lo(o),d++,h++}if(a?h>=n.batchesPerEpoch:e.done){if(r){let e;e=ci(n.validationData)?as(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):as(t.evaluate(o,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u["val_".concat(t.metricsNames[n])]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(m,u),m++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function ci(t){return"function"===typeof t.iterator}function li(t){s.D5U.assert(t>0&&Number.isInteger(t),(()=>"batchSize is required to be a positive integer, but got ".concat(t)))}function ui(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>Xs(t,e,n-e))):Xs(t,e,n-e)}function hi(t,e){return s.lub((()=>null==t?null:Array.isArray(t)?t.map((t=>hi(t,e))):tr(t,"int32"===e.dtype?e:s.pju(e,"int32"))))}function di(t,e){const n=[];let a=0,s=null;for(;a<t;)s=a+e,s>=t&&(s=t),n.push([a,s]),a=s;return n}function pi(t){const e=[];t instanceof s.esB&&(t=[t]);for(let n=0;n<t.length;++n){const a=t[n];if(1===a.rank)e.push(js(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(a)}}return e}function fi(t,e){if(null==t)return;const n=[];if(e instanceof s.esB)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const s in e){const t=e[s];n.push(t.id)}const a=[];if(t instanceof s.esB)-1===n.indexOf(t.id)&&a.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&a.push(t)}));else if(null!=t)for(const s in t){const e=t[s];-1===n.indexOf(e.id)&&a.push(e)}a.forEach((t=>{t.isDisposed||t.dispose()}))}function mi(t){return Array.isArray(t)}function gi(t){return!function(t){return t instanceof s.esB}(t)&&!mi(t)}function yi(t,e,n){let a,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==e||0===e.length){if(null!=t){let e=!1;if(mi(t)&&t.length>0)e=!0;else if(gi(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Za("Error when checking model ".concat(r," expected no data, ")+"but got ".concat(t))}return[]}if(null==t)return e.map((t=>null));if(gi(t)){a=[];for(const n of e){if(null==t[n])throw new Za('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(e));a.push(t[n])}}else if(mi(t)){if(t.length!==e.length)throw new Za("Error when checking model ".concat(r,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(e.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(t));a=t}else{if(e.length>1)throw new Za("The model ".concat(r," expects ").concat(e.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(t.shape));a=[t]}if(a=pi(a),null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=a[o];if(t.shape.length!==n[o].length)throw new Za("Error when checking ".concat(r,": expected ").concat(e[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(t.shape));for(let e=0;e<n[o].length;++e){if(0===e&&!s)continue;const a=t.shape[e],i=n[o][e];if(null!=i&&i>=0&&a!==i)throw new Za("".concat(r," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(r," received an input with ").concat(t.shape[0])+" examples, each with shape [".concat(t.shape.slice(1,t.shape.length),"]")+" (tensor shape [".concat(t.shape,"])"))}}return a}function bi(t,e,n){let a,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(t)){if(t.length!==e.length)throw new Za("Error when checking model ".concat(r,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(e.length," Tensor(s),")+" but instead got ".concat(t.length," Tensors(s)."));a=t}else{if(e.length>1)throw new Za("The model expects ".concat(e.length," ").concat(r," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(t.shape),"."));a=[t]}if(null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=a[o];if(t.shape.length!==n[o].length)throw new Za("Error when checking ".concat(r,": expected ").concat(e[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(t.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!s)continue;const i=t.shape[a],c=n[o][a];if(null!=c&&c!==i)throw new Za("Error when checking ".concat(r,": expected ")+"".concat(e[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(t.shape),"."))}}}class xi extends ti{constructor(t){super(t),this.isTraining=!1}summary(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new Za("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Xo(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"===typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>s.p_j.adagrad(.01),Adadelta:()=>s.p_j.adadelta(1,.95,Gs()),Adam:()=>s.p_j.adam(.001,.9,.999,Gs()),Adamax:()=>s.p_j.adamax(.002,.9,.999,Gs(),0),RMSProp:()=>s.p_j.rmsprop(.001,.9,0,Gs()),SGD:()=>s.p_j.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Za("Unknown Optimizer ".concat(t))}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof s.gaJ))throw new Za("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"===typeof t.loss||"function"===typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Za("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(t.loss,"."));const n=t.loss;e=n.map((t=>Ro(t)))}else{const n=Ro(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Za('Unknown entry in loss dictionary: "'.concat(e,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==t.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),e.push(Ro(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const t=this.internalOutputShapes[s],e=this.outputNames[s];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Os("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const a=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"===typeof t||"function"===typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!==typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(t));n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const a of e){let e=n.hasOwnProperty(a)?n[a]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),r=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Os("metric",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,a,s;for(const o of e){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[t];let r;1===e[e.length-1]||this.lossFunctions[t]===Eo?-1!==["accuracy","acc"].indexOf(o)?a=Oo:-1!==["crossentropy","ce"].indexOf(o)&&(a=Bo):this.lossFunctions[t]===Co?-1!==["accuracy","acc"].indexOf(o)?a=Lo:-1!==["crossentropy","ce"].indexOf(o)&&(a=Uo):-1!==["accuracy","acc"].indexOf(o)?a=Fo:-1!==["crossentropy","ce"].indexOf(o)&&(a=zo),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const t=Vo(o);s=t,n=""+Wo(o)}let e;Os(n,(()=>{e=s})),r(t,n,e)}})(a[t])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;li(a);const s=this.standardizeUserDataXY(t,e,!0,a);try{const t=s[0].concat(s[1]);this.makeTestFunction();const e=this.testFunction;return ns(this.testLoop(e,t,a,n.verbose,n.steps))}finally{fi(s[0],t),fi(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const a=null!=(n=n||{}).batches,r=t.testFunction;let o=[];if(n.verbose>0)throw new Ya("Verbose mode is not implemented yet.");s.D5U.assert(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const i="function"===typeof e.next?e:await e.iterator();let c=0,l=0;for(;!a||l<n.batches;){const e=await i.next();if(o=s.lub((()=>{if(e.value){const{xs:n,ys:a}=ri(t,e.value),i=n.concat(a),u=s.lub((()=>r(i)));if(s.B90(i),0===l)for(let t=0;t<u.length;++t)o.push((0,s.iD$)(0));const h=i[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=o[t];o[t]=s.lub((()=>s.IHx(o[t],s.dC7(h,e)))),l>0&&s.B90(n)}s.B90(u),c+=h,++l}return o})),e.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let u=0;u<o.length;++u){const t=o[u];o[u]=s.hiC(o[u],c),s.B90(t)}return ns(o)}(this,t,e)}checkNumSamples(t,e,n){let a,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=e)throw new Za("If ".concat(s," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(e))}else{if(null==t)throw new Za("Either the input data should have a defined shape, or "+"".concat(s," shoud be specified."));a=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return a}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Za("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),a=n?e:[e],r=this.retrieveSymbolicTensors(a),o=new jr;if(t instanceof s.esB&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Za("The number of inputs provided (".concat(t.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let e=0;e<this.inputs.length;++e)o.add(this.inputs[e],t[e])}else for(const s of this.inputs){const e=t[s.name];if(null==e)throw new Za("No value is provided for the model's input ".concat(s.name));o.add(s,e)}const i=Kr(r,o);return n?i:i[0]}retrieveSymbolicTensors(t){const e=$a(null,t.length);let n=t.length;for(const a of this.layers){const s=Array.isArray(a.output)?a.output:[a.output],r=s.map((t=>t.name));for(let a=0;a<t.length;++a){const o=r.indexOf(t[a]);if(-1!==o&&(e[a]=s[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,a)=>{null==e&&n.push(t[a])})),new Za("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return e}predictLoop(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return s.lub((()=>{const a=this.checkNumSamples(t);if(n)throw new Ya("Verbose predictLoop() is not implemented yet.");const r=di(a,e),o=this.outputs.map((t=>[]));for(let e=0;e<r.length;++e){s.lub((()=>{const n=r[e][0],a=r[e][1],s=ui(t,n,a),o=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)o.push({key:this.inputs[t],value:s[t]});else o.push({key:this.inputs[0],value:s});const i=new jr(o);return Kr(this.outputs,i)})).forEach(((t,e)=>o[e].push(t)))}return ns(o.map((t=>s.zoF(t,0))))}))}predict(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=pi(t);bi(n,this.inputNames,this.feedInputShapes,!1);try{const t=null==e.batchSize?32:e.batchSize;return li(t),this.predictLoop(n,t)}finally{fi(n,t)}}predictOnBatch(t){bi(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Ka("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let s=0;s<this.feedOutputShapes.length;++s){const t=this.feedOutputShapes[s];this.feedLossFns[s]===Co?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(t,e,n){const a=hs(t.map((t=>t.shape[0])));a.sort();const r=hs(e.map((t=>t.shape[0])));if(r.sort(),a.length>1)throw new Za("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((t=>t.shape)))));if(r.length>1)throw new Za("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((t=>t.shape)))));if(a.length>0&&r.length>0&&!s.D5U.arraysEqual(a,r))throw new Za("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(a[0]," input sample(s) and ").concat(r[0]," target ")+"sample(s).")}(t=yi(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=yi(e,this.feedOutputNames,a,!1,"target")),function(t,e,n){const a=[ko,Eo,To];for(let s=0;s<t.length;++s){const r=t[s],o=e[s],i=n[s];if(null!=o){if(o===To&&1===r.shape[r.shape.length-1])throw new Za("You are passing a target array of shape ".concat(r.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const t=r.shape.slice(1),e=i.slice(1);for(let n=0;n<t.length;++n){const a=t[n],s=e[n];if(null!=s&&a!==s)throw new Za("A target Tensor with shape ".concat(r.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&t[0].shape[0]%n!==0)throw new Za("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(t[0].shape[0]," sample(s)."));return[t,e]}async standardizeUserData(t,e,n,a){let s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],r=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(t,e,s,r);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const t=ni(a,this.outputNames);c=[];for(let e=0;e<t.length;++e)c.push(await ai(i[e],null,t[e]))}return[o,i,c]}testLoop(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return s.lub((()=>{const o=this.checkNumSamples(e,n,r,"steps"),i=[];if(a>0)throw new Ya("Verbose mode is not implemented yet.");if(null!=r)throw new Ya("steps mode in testLoop() is not implemented yet");{const a=di(o,n),r=(0,s.RRF)(Vs(0,o));for(let n=0;n<a.length;++n){const o=a[n][0],c=a[n][1],l=Xs(r,o,c-o),u=hi(e,l),h=t(u);if(0===n)for(let t=0;t<h.length;++t)i.push((0,s.iD$)(0));for(let t=0;t<h.length;++t){const e=h[t];i[t]=s.IHx(i[t],s.dC7(c-o,e))}}for(let t=0;t<i.length;++t)i[t]=s.hiC(i[t],o)}return i}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const a=t[n];let s=a;if(es(t,a)>1){const e=es(t.slice(0,n),a);s+="_".concat(e)}e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],i=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new jr(t),c=Kr(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(a[n],c[n]);null!=r[n]&&(t=si(t,r[n]));const o=s.J69(t);e.push(o),l=0===n?t:s.IHx(l,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],r=this.metricsTensors[n][1];t=s.J69(e(a[r],c[r]))}s.CnY(t),o.push(t)}return l=s.J69(l),this.calculateLosses().forEach((t=>{l=s.IHx(l,t)})),l}),!0,i)].concat(o)}}makeTestFunction(){this.testFunction=t=>s.lub((()=>{const e=[];let n;const a=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let t=0;t<this.inputs.length;++t)o.push({key:this.inputs[t],value:a[t]});const i=new jr(o),c=Kr(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const a=this.lossFunctions[t],o=s.J69(a(r[t],c[t]));n=0===t?o:s.IHx(n,o),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],a=this.metricsTensors[t][1],o=s.J69(n(r[a],c[a]));e.push(o)}return e}))}async fit(t,e){let n,a,r,o,i,c,l,u,h,d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const s=null==d.batchSize?32:d.batchSize;li(s);const p=!1,f=await this.standardizeUserData(t,e,d.sampleWeight,d.classWeight,p,s);n=f[0],a=f[1],h=f[2];let m,g=!1;if(null!=d.validationData&&d.validationData.length>0){if(g=!0,2!==d.validationData.length)throw 3===d.validationData.length?new Ya("validationData including sample weights is not supported yet."):new Za("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(d.validationData," is invalid."));i=d.validationData[0],c=d.validationData[1];const t=!0,e=await this.standardizeUserData(i,c,null,null,t,s);l=e[0],u=e[1],m=l.concat(u)}else if(null!=d.validationSplit&&d.validationSplit>0&&d.validationSplit<1){g=!0;const t=Math.floor(n[0].shape[0]*(1-d.validationSplit)),e=n[0].shape[0];l=ui(n,t,e),r=n,n=ui(n,0,t),u=ui(a,t,e),o=a,a=ui(a,0,t),m=l.concat(u)}else null!=d.validationSteps&&(g=!0);const y=n.concat(a).concat(h);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;g?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map((t=>"val_"+t)))):(v=null,m=[],w=x.slice());const k=yo(d.callbacks,d.yieldEvery);return await this.fitLoop(b,y,x,s,d.epochs,d.verbose,k,v,m,d.shuffle,w,d.initialEpoch,null,null)}finally{this.isTraining=!1,fi(n,t),fi(a,e),fi(r,t),fi(o,e),fi(l,i),fi(u,c),null!=h&&s.B90(h)}}async fitLoop(t,e,n,a,r,o,i,c,l,u,h,d,p,f){null==a&&(a=32),null==r&&(r=1),null==u&&(u=!0),null==d&&(d=0);let m=!1;if(null!=c&&null!=l&&(m=!0),null!=f&&(m=!0,null==p))throw new Za("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(e,a,p,"steps_per_epoch");let y;null!=g&&(y=Vs(0,g)),null==o&&(o=1);const{callbackList:b,history:x}=xo(i,o,r,d,g,p,a,m,h);b.setModel(this),this.history=x,await b.onTrainBegin(),this.stopTraining_=!1;for(let v=d;v<r;++v){await b.onEpochBegin(v);const r={};if(null!=p)throw new Ya("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new Ya("batch shuffling is not implemneted yet");u&&s.D5U.shuffle(y);const o=(0,s.RRF)(y),i=di(g,a);for(let u=0;u<i.length;++u){const h={};if(await b.onBatchBegin(u,h),s.lub((()=>{const d=i[u][0],p=i[u][1],f=Xs(o,d,p-d);h.batch=u,h.size=p-d;const g=hi(e,f),y=t(g);for(let t=0;t<n.length;++t){const e=n[t],a=y[t];h[e]=a,s.CnY(a)}if(u===i.length-1&&m){const t=this.testLoop(c,l,a);for(let e=0;e<n.length;++e){const a=n[e],o=t[e];s.CnY(o),r["val_"+a]=o}}})),await b.onBatchEnd(u,h),lo(h),this.stopTraining_)break}o.dispose()}if(await b.onEpochEnd(v,r),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return ii(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),a=n[0],r=n[1],o=this.makeTrainFunction()(a.concat(r)),i=[];for(const s of o){const t=await s.data();i.push(t[0])}return s.B90(o),fi(n[0],t),fi(n[1],e),ns(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,a=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let r=0;r<a.length;++r)n&&!a[r].trainable||e.push({name:a[r].originalName,tensor:s[r]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=s.sq6().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-s.sq6().numTensors}return t}getLossIdentifiers(){let t;if("string"===typeof this.loss)t=ss(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!==typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>ss(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const a of e){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");t[a]=ss(n[a])}}return t}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[ss(Wo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>ss(Wo(t))));{const t={};for(const e in this.metrics)t[e]=ss(Wo(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=vo(Qo(t.optimizer_config));let n,a;if("string"===typeof t.loss)n=rs(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>rs(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=rs(t.loss[e])}if(Array.isArray(t.metrics))a=t.metrics.map((t=>rs(t)));else if(null!=t.metrics){a={};for(const e in t.metrics)a[e]=rs(t.metrics[e])}this.compile({loss:n,metrics:a,optimizer:e})}async save(t,e){if("string"===typeof t){const e=s.io.getSaveHandlers(t);if(0===e.length)throw new Za("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new Za("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}if(null==t.save)throw new Za("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await s.io.encodeWeights(this.getNamedWeights(e)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat($o),convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:r}=await s.io.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...r),n.data=s.io.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Ho(this.userDefinedMetadata,this.name,t),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,t.save(a)}setUserDefinedMetadata(t){Ho(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}xi.className="Model",s.m7h.registerClass(xi);class vi extends xi{}vi.className="Functional",s.m7h.registerClass(vi);class wi extends xi{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:ws("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Za("Negative dimension size caused by adding layer "+"".concat(t.name," with input shape [")+"".concat(t.inboundNodes[0].inputTensors[0].shape,"]"))}add(t){const e=t instanceof wi||t instanceof xi;let n;if(e){if(n=t,1!==n.outputs.length)throw new Za("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Za("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Za("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Za("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Hr({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Za("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(t.name," ")+"which has ".concat(t.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==t.inboundNodes[0].outputTensors.length)throw new Za("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Gr(this.outputs[0])}this.inboundNodes=[],new Pr({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:$a(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Dr(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new xi({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Ka("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Ka("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Ka("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Ka("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Za("Legacy serialization format not supported yet.");n=e}else s.D5U.assert(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=e.layers,delete e.layers,r=e;const o=new t(r);if(!(o instanceof wi))throw new Ya("Sequential.fromConfig called on non-Sequential input: ".concat(o));for(const s of n){const t=vo(s,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(t){if(null==this.model)throw new Za("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Za("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}wi.className="Sequential",s.m7h.registerClass(wi);class ki extends s.m7h.Serializable{getConfig(){return{}}}class Ii extends ki{apply(t){return function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==e)throw new Ya("Support for alpha values other than 1 (".concat(e,") is not implemented ")+"yet.");return s.pyx(t)}(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Ii.className="elu",s.m7h.registerClass(Ii);class Si extends ki{apply(t){return s.U8D(t)}}Si.className="selu",s.m7h.registerClass(Si);class Ni extends ki{apply(t){return s.UYe(t)}}Ni.className="relu",s.m7h.registerClass(Ni);class Ti extends ki{apply(t){return(0,s.lub)((()=>s.LTh(6,s.UYe(t))))}}Ti.className="relu6",s.m7h.registerClass(Ti);class Ci extends ki{apply(t){return t}}Ci.className="linear",s.m7h.registerClass(Ci);class Ei extends ki{apply(t){return s.XD2(t)}}Ei.className="sigmoid",s.m7h.registerClass(Ei);class _i extends ki{apply(t){return function(t){return(0,s.lub)((()=>{const e=s.IHx(.5,s.dC7(.2,t));return s.iUl(e,0,1)}))}(t)}}_i.className="hardSigmoid",s.m7h.registerClass(_i);class Ai extends ki{apply(t){return s.Wvh(t)}}Ai.className="softplus",s.m7h.registerClass(Ai);class Di extends ki{apply(t){return function(t){return(0,s.lub)((()=>s.hiC(t,s.IHx(s.WnP(t),1))))}(t)}}Di.className="softsign",s.m7h.registerClass(Di);class Ri extends ki{apply(t){return s.AEp(t)}}Ri.className="tanh",s.m7h.registerClass(Ri);class Oi extends ki{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return s.XAC(t,e)}}Oi.className="softmax",s.m7h.registerClass(Oi);class Fi extends ki{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return s.CmS(t,e)}}Fi.className="logSoftmax",s.m7h.registerClass(Fi);class Mi extends ki{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return(0,s.lub)((()=>s.dC7(s.XD2(s.dC7(t,e)),t)))}}Mi.className="swish",s.m7h.registerClass(Mi);class Bi extends ki{apply(t){return(0,s.lub)((()=>s.dC7(t,s.AEp(s.Wvh(t)))))}}function Li(t){return t.getClassName()}function zi(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ls(t,s.m7h.SerializationMap.getMap().classNameMap,e,"activation")}function Ui(t){if(null==t){const t={className:"linear",config:{}};return zi(t)}if("string"===typeof t){const e={};return e.className=t,e.config={},zi(e)}return t instanceof ki?t:zi(t)}function Pi(t){if(null!=t&&"object"!==typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(t))}Bi.className="mish",s.m7h.registerClass(Bi);class Vi extends s.m7h.Serializable{}class Wi extends Vi{constructor(t){super(),Pi(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return(0,s.lub)((()=>{let e=(0,s.lls)([1]);return this.hasL1&&(e=(0,s.IHx)(e,(0,s.Smz)(s.dC7(this.l1,(0,s.WnP)(t))))),this.hasL2&&(e=(0,s.IHx)(e,(0,s.Smz)(s.dC7(this.l2,er(t))))),s.XLQ(e,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Wi.className="L1L2",s.m7h.registerClass(Wi);const Gi={l1l2:"L1L2"};function Hi(t){return is(t)}function ji(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ls(t,s.m7h.SerializationMap.getMap().classNameMap,e,"regularizer")}function Xi(t){if(null==t)return null;if("string"===typeof t){return ji({className:t in Gi?Gi[t]:t,config:{}})}return t instanceof Vi?t:ji(t)}class qi extends Wr{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Ar(t);let n=(0,s.UYe)(t);return null!=this.maxValue&&(n=(0,s.iUl)(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}qi.className="ReLU",s.m7h.registerClass(qi);class Ki extends Wr{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Ar(t);return(0,s.hi7)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Ki.className="LeakyReLU",s.m7h.registerClass(Ki);class Zi extends Wr{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Cr(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Xi(t.alphaRegularizer),this.alphaConstraint=io(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!==typeof t.sharedAxes)throw new Za("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(t.sharedAxes));this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Dr(t)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)e[a-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<t.length;++a)n[a]=t[a];this.inputSpec=[new Lr({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Ar(t),(0,s.AL3)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Tr(this.alphaInitializer),alphaRegularizer:Hi(this.alphaRegularizer),alphaConstraint:ro(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Zi.className="PReLU",s.m7h.registerClass(Zi);class Yi extends Wr{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Ya("Non-default alpha value (".concat(t.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Ar(t);return(0,s.pyx)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Yi.className="ELU",s.m7h.registerClass(Yi);class Qi extends Wr{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Ar(t);return(0,s.dC7)(n,(0,s.pju)((0,s.pjt)(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Qi.className="ThresholdedReLU",s.m7h.registerClass(Qi);class Ji extends Wr{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Oi).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){return(0,s.lub)((()=>{let n=Ar(t);const a=e.mask;if(null!=a){const t=(0,s.dC7)((0,s.luU)((0,s.iUs)(n.shape),(0,s.pju)(a,n.dtype)),(0,s.iD$)(-1e9));n=(0,s.IHx)(n,t)}return this.axis instanceof Array?this.axis.length>1?(0,s.Qqt)((0,s.luU)(n,(0,s.l_t)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function $i(t,e,n){if("number"===typeof t)return $a(t,e);if(t.length!==e)throw new Za("The ".concat(n," argument must be an integer or tuple of ").concat(e," integers.")+" Received: ".concat(t.length," elements."));for(let s=0;s<e;++s){const r=t[s];if((a=r)!==parseInt(a.toString(),10))throw new Za("The ".concat(n," argument must be an integer or tuple of ").concat(e)+" integers. Received: ".concat(JSON.stringify(t)," including a")+" non-integer number ".concat(r))}return t;var a}function tc(t,e,n,a){if(null==t)return t;let s;return s="same"===n?t:t-(e+(e-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((s+a-1)/a)}function ec(t,e,n,a){if(null==t)return null;if("valid"===a)t=t*e+Ps([n-e,0]);else{if("same"!==a)throw new Za("Unsupport padding mode: ".concat(a,"."));t*=e}return t}function nc(t,e){return(0,s.lub)((()=>(Es(e),"channelsFirst"===e?s.p4s(t,[0,2,3,1]):t)))}function ac(t,e){return(0,s.lub)((()=>(Es(e),"channelsFirst"===e?s.p4s(t,[0,2,3,4,1]):t)))}function sc(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return(0,s.lub)((()=>{if(null==o&&(o="channelsLast"),Es(o),3!==t.shape.length)throw new Za("The input of a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead."));if(3!==e.shape.length)throw new Za("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new Za("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(e.shape.length," instead"));if("channelsFirst"===o&&(t=s.p4s(t,[0,2,1])),"causal"===r)throw new Ya("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=s.PAt(t,e,a,"same"===r?"same":"valid","NWC",i);return null!=n&&(c=ar(c,n)),c}))}function rc(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return(0,s.lub)((()=>{if(null==o&&(o="channelsLast"),Es(o),3!==t.rank&&4!==t.rank)throw new Za("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));if(3!==e.rank&&4!==e.rank)throw new Za("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));let l=nc(t,o);if("causal"===r)throw new Ya("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=s.imm.conv2d({x:l,filter:e,strides:a,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:c}),"channelsFirst"===o&&(l=s.p4s(l,[0,3,1,2])),l}))}function oc(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return(0,s.lub)((()=>{if(null==o&&(o="channelsLast"),Es(o),4!==t.rank&&5!==t.rank)throw new Za("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(t.rank,"."));if(4!==e.rank&&5!==e.rank)throw new Za("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(t.rank,"."));let c=ac(t,o);if("causal"===r)throw new Ya("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=s.pdZ(c,e,a,"same"===r?"same":"valid","NDHWC",i),null!=n&&(c=ar(c,n)),"channelsFirst"===o&&(c=s.p4s(c,[0,4,1,2,3])),c}))}Ji.className="Softmax",s.m7h.registerClass(Ji);class ic extends Wr{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ic.verifyArgs(e),this.rank=t,ms(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Ya("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=$i(e.kernelSize,t,"kernelSize"),this.strides=$i(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,_s(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Es(this.dataFormat),this.activation=Ui(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Cr(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=io(e.biasConstraint),this.biasRegularizer=Xi(e.biasRegularizer),this.activityRegularizer=Xi(e.activityRegularizer),this.dilationRate=$i(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Za("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Za("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Za("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(t){if(ts("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!==typeof t.kernelSize&&!fs(t.kernelSize,"number",1,3))throw new Za("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(t.kernelSize),"."))}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Li(this.activation),useBias:this.useBias,biasInitializer:Tr(this.biasInitializer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),biasConstraint:ro(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class cc extends ic{constructor(t,e){super(t,e),this.kernel=null,cc.verifyArgs(e),this.filters=e.filters,ms(this.filters,"filters"),this.kernelInitializer=Cr(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=io(e.kernelConstraint),this.kernelRegularizer=Xi(e.kernelRegularizer)}build(t){t=Dr(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Za("The channel dimension of the input should be defined. "+"Found ".concat(t[e]));const n=t[e],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return(0,s.lub)((()=>{let e;t=Ar(t);const n=null==this.bias?null:this.bias.read(),a=ys(this.activation.getClassName());if(null!=a&&2===this.rank)e=rc(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)e=sc(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=rc(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Ya("convolutions greater than 3D are not implemented yet.");e=oc(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Dr(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<n.length;++s){const t=tc(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);e.push(t)}let a=[t[0]];return"channelsLast"===this.dataFormat?(a=a.concat(e),a.push(this.filters)):(a.push(this.filters),a=a.concat(e)),a}getConfig(){const t={filters:this.filters,kernelInitializer:Tr(this.kernelInitializer),kernelRegularizer:Hi(this.kernelRegularizer),kernelConstraint:ro(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!==typeof t.filters||t.filters<1)throw new Za("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(t.filters)))}}class lc extends cc{constructor(t){super(2,t),lc.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!fs(t.kernelSize,"number",1,2))throw new Za("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(t.kernelSize),"."))}}lc.className="Conv2D",s.m7h.registerClass(lc);class uc extends cc{constructor(t){super(3,t),uc.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Za("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(t.kernelSize),"."))}}uc.className="Conv3D",s.m7h.registerClass(uc);class hc extends lc{constructor(t){if(super(t),this.inputSpec=[new Lr({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Za("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(4!==(t=Dr(t)).length)throw new Za("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Za("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Lr({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return s.lub((()=>{let e=Ar(t);if(4!==e.shape.length)throw new Za("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,a=n[0];let r,o;"channelsFirst"===this.dataFormat?(r=2,o=3):(r=1,o=2);const i=n[r],c=n[o],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],d=this.strides[1],p=[a,ec(i,h,l,this.padding),ec(c,d,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=s.p4s(e,[0,2,3,1]));let f=s.bc(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=s.p4s(f,[0,3,1,2])),null!=this.bias&&(f=ar(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(t){const e=(t=Dr(t)).slice();let n,a,s;"channelsFirst"===this.dataFormat?(n=1,a=2,s=3):(n=3,a=1,s=2);const r=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[a]=ec(e[a],i,r,this.padding),e[s]=ec(e[s],c,o,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}hc.className="Conv2DTranspose",s.m7h.registerClass(hc);class dc extends uc{constructor(t){if(super(t),this.inputSpec=[new Lr({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Za("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(5!==(t=Dr(t)).length)throw new Za("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Za("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Lr({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return s.lub((()=>{let e=Ar(t);if(5!==e.shape.length)throw new Za("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,a=n[0];let r,o,i;"channelsFirst"===this.dataFormat?(i=2,r=3,o=4):(i=1,r=2,o=3);const c=n[i],l=n[r],u=n[o],h=this.kernelSize[0],d=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=[a,ec(c,f,h,this.padding),ec(l,m,d,this.padding),ec(u,g,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=s.p4s(e,[0,2,3,4,1]));let b=s.$QV(e,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=s.p4s(b,[0,4,1,2,3])),null!==this.bias&&(b=ar(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(t){const e=(t=Dr(t)).slice();let n,a,s,r;"channelsFirst"===this.dataFormat?(n=1,a=2,s=3,r=4):(n=4,a=1,s=2,r=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[a]=ec(e[a],l,o,this.padding),e[s]=ec(e[s],u,i,this.padding),e[r]=ec(e[r],h,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}dc.className="Conv3DTranspose",s.m7h.registerClass(dc);class pc extends cc{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Za("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Za("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Za("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(e.padding)));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Cr(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Xi(e.depthwiseRegularizer),this.depthwiseConstraint=io(e.depthwiseConstraint),this.pointwiseInitializer=Cr(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Xi(e.pointwiseRegularizer),this.pointwiseConstraint=io(e.pointwiseConstraint)}build(t){if((t=Dr(t)).length<this.rank+2)throw new Za("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(t)));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Za("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(t[e])));const n=t[e],a=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let o=0;o<this.rank;++o)s.push(1);s.push(n*this.depthMultiplier,this.filters);const r=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,r,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,r,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,r,this.biasConstraint):this.bias=null,this.inputSpec=[new Lr({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return(0,s.lub)((()=>{let e;if(t=Ar(t),1===this.rank)throw new Ya("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=s.p4s(t,[0,2,3,1])),e=s.U_I(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=ar(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=s.p4s(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Tr(this.depthwiseInitializer),t.pointwiseInitializer=Tr(this.pointwiseInitializer),t.depthwiseRegularizer=Hi(this.depthwiseRegularizer),t.pointwiseRegularizer=Hi(this.pointwiseRegularizer),t.depthwiseConstraint=ro(this.depthwiseConstraint),t.pointwiseConstraint=ro(this.pointwiseConstraint),t}}pc.className="SeparableConv";class fc extends pc{constructor(t){super(2,t)}}fc.className="SeparableConv2D",s.m7h.registerClass(fc);class mc extends cc{constructor(t){super(1,t),mc.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!fs(t.kernelSize,"number",1,1))throw new Za("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(t.kernelSize),"."))}}mc.className="Conv1D",s.m7h.registerClass(mc);class gc extends Wr{constructor(t){super(t),"number"===typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"===typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return(0,s.lub)((()=>{if(t=Ar(t),"channelsLast"===this.dataFormat){const e=Ks(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ks(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Ks(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ks(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}gc.className="Cropping2D",s.m7h.registerClass(gc);class yc extends Wr{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Es(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,ps(Is,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return s.lub((()=>{let e=Ar(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=s.p4s(e,[0,2,3,1]);const t=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?s.image.resizeNearestNeighbor(e,[t,a]):s.image.resizeBilinear(e,[t,a]);return s.p4s(r,[0,3,1,2])}{const t=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?s.image.resizeNearestNeighbor(e,[t,a]):s.image.resizeBilinear(e,[t,a])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}yc.className="UpSampling2D",s.m7h.registerClass(yc);class bc extends ic{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Cr(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=io(t.depthwiseConstraint),this.depthwiseRegularizer=Xi(t.depthwiseRegularizer)}build(t){if((t=Dr(t)).length<4)throw new Za("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(t),"."));const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Za("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(t[e],")."));const n=t[e],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return(0,s.lub)((()=>{let e=function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0;return(0,s.lub)((()=>{null==r&&(r="channelsLast"),Es(r);let i=nc(t,r);if(4!==t.rank)throw new Za("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));if(4!==e.rank)throw new Za("depthwiseKernel is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));return i=s.B10(i,e,n,"same"===a?"same":"valid","NHWC",o),"channelsFirst"===r&&(i=s.p4s(i,[0,3,1,2])),i}))}(t=Ar(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=ar(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Dr(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=tc(e,this.kernelSize[0],this.padding,this.strides[0]),r=tc(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],a,s,r]:[t[0],s,r,a]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Tr(this.depthwiseInitializer),t.depthwiseRegularizer=Hi(this.depthwiseRegularizer),t.depthwiseConstraint=ro(this.depthwiseRegularizer),t}}function xc(t,e,n,a){if(Array.isArray(t)){if(null!=e||null!=n)throw new Za("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=t.slice(t.length-a,t.length),t=t.slice(0,t.length-a)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function vc(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return s.lub((()=>{const l=e.shape.length;if(l<3)throw new Za("Input should be at least 3D, but is ".concat(l,"D."));const u=[1,0].concat(Vs(2,l));if(e=s.p4s(e,u),null!=o)throw new Ya("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=s.pju(s.pju(r,"bool"),"float32"),r.rank===l-1&&(r=s.dt4(r,-1)),r=s.p4s(r,u)),a&&(e=s.GYS(e,0),null!=r&&(r=s.GYS(r,0)));const h=[];let d,p=n;const f=e.shape[0],m=s.HHK(e);let g,y;null!=r&&(g=s.HHK(r));for(let e=0;e<f;++e){const n=m[e],a=s.lub((()=>t(n,p)));if(null==r)d=a[0],p=a[1];else{const t=s.lub((()=>{const t=g[e],n=s.luU(s.JpU(t),t);return{output:s.IHx(s.dC7(a[0],t),s.dC7(p[0],n)),newStates:p.map(((e,r)=>s.IHx(s.dC7(a[1][r],t),s.dC7(e,n))))}}));d=t.output,p=t.newStates}c&&h.push(d)}if(c){const t=1;y=s.knu(h,t)}return[d,y,p]}))}bc.className="DepthwiseConv2D",s.m7h.registerClass(bc);class wc extends Wr{constructor(t){let e;if(super(t),null==t.cell)throw new Za("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new _c({cells:t.cell}):t.cell,null==e.stateSize)throw new Za("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Lr({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Vs(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null))}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Er(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let a;if(a=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const a of e)n.push([t[0],a]);return[a].concat(n)}return a}computeMask(t,e){return s.lub((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Ya("Constants support is not implemented in RNN yet.");Er(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Lr({shape:[e,null,...n]});const a=[t[0]].concat(t.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!s.D5U.arraysEqual(this.stateSpec.map((t=>t.shape[t.shape.length-1])),r))throw new Za("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((t=>new Lr({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,s.lub)((()=>{if(!this.stateful)throw new qa("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Za("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>s.lls([n,t]))):this.states_=[s.lls([n,this.cell.stateSize])];else if(null==t)s.B90(this.states_),null!=this.keptStates&&(s.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>s.lls([n,t]))):this.states_[0]=s.lls([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Za("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));!0===e?this.keptStates.push(this.states_.slice()):s.B90(this.states_);for(let e=0;e<this.states_.length;++e){const a=t[e],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,o=[n,r];if(!s.D5U.arraysEqual(a.shape,o))throw new Za("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(o,", received shape=").concat(a.shape));this.states_[e]=a}}this.states_=this.states_.map((t=>s.CnY(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,a=null==e?null:e.constants;null==e&&(e={});const s=xc(t,n,a,this.numConstants);t=s.inputs,n=s.initialState,a=s.constants;let r=[],o=[];if(null!=n){e.initialState=n,r=r.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Lr({shape:t.shape}));o=o.concat(this.stateSpec)}null!=a&&(e.constants=a,r=r.concat(a),this.numConstants=a.length);if(r[0]instanceof zr){const n=[t].concat(r),a=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=a;const i=super.apply(n,e);return this.inputSpec=s,i}return super.apply(t,e)}call(t,e){return(0,s.lub)((()=>{const n=null==e?null:e.mask,a=null==e?null:e.training;let s=null==e?null:e.initialState;t=Ar(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const r=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==r)throw new Za("RNN Layer has ".concat(r," state(s) but was passed ")+"".concat(s.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=vc(((t,e)=>{const n=this.cell.call([t].concat(e),o);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const h=this.returnSequences?l:c;return this.returnState?[h].concat(u):h}))}getInitialState(t){return(0,s.lub)((()=>{let e=s.lls(t.shape);return e=s.Smz(e,[1,2]),e=js(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?Qs(e,[1,t]):e)):this.cell.stateSize>1?[Qs(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===wc.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),e)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=vo(e.cell,n);return new t(Object.assign(e,{cell:a}))}}wc.className="RNN",s.m7h.registerClass(wc);class kc extends Wr{}class Ic extends kc{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,ms(this.units,"units"),this.activation=Ui(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Cr(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cr(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cr(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Xi(t.kernelRegularizer),this.recurrentRegularizer=Xi(t.recurrentRegularizer),this.biasRegularizer=Xi(t.biasRegularizer),this.kernelConstraint=io(t.kernelConstraint),this.recurrentConstraint=io(t.recurrentConstraint),this.biasConstraint=io(t.biasConstraint),this.dropout=Us([1,Ps([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Us([1,Ps([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Dr(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return(0,s.lub)((()=>{if(2!==t.length)throw new Za("SimpleRNNCell expects 2 input Tensors, got ".concat(t.length,"."));let n=t[1];t=t[0];const a=null!=e.training&&e.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ac({ones:()=>s.JpU(t),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ac({ones:()=>s.JpU(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;r=$s(null!=o?s.dC7(t,o):t,this.kernel.read()),null!=this.bias&&(r=ar(r,this.bias.read())),null!=i&&(n=s.dC7(n,i));let c=s.IHx(r,$s(n,this.recurrentKernel.read()));return null!=this.activation&&(c=this.activation.apply(c)),[c,c]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Li(this.activation),useBias:this.useBias,kernelInitializer:Tr(this.kernelInitializer),recurrentInitializer:Tr(this.recurrentInitializer),biasInitializer:Tr(this.biasInitializer),kernelRegularizer:Hi(this.kernelRegularizer),recurrentRegularizer:Hi(this.recurrentRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:ro(this.kernelConstraint),recurrentConstraint:ro(this.recurrentConstraint),biasConstraint:ro(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}Ic.className="SimpleRNNCell",s.m7h.registerClass(Ic);class Sc extends wc{constructor(t){t.cell=new Ic(t),super(t)}call(t,e){return(0,s.lub)((()=>{null!=this.cell.dropoutMask&&(s.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:r})}))}static fromConfig(t,e){return new t(e)}}Sc.className="SimpleRNN",s.m7h.registerClass(Sc);class Nc extends kc{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Za("GRUCell does not support reset_after parameter set to true.");this.units=t.units,ms(this.units,"units"),this.activation=Ui(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ui(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Cr(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cr(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cr(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Xi(t.kernelRegularizer),this.recurrentRegularizer=Xi(t.recurrentRegularizer),this.biasRegularizer=Xi(t.biasRegularizer),this.kernelConstraint=io(t.kernelConstraint),this.recurrentConstraint=io(t.recurrentConstraint),this.biasConstraint=io(t.biasConstraint),this.dropout=Us([1,Ps([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Us([1,Ps([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Dr(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return(0,s.lub)((()=>{if(2!==t.length)throw new Za("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=null!=e.training&&e.training;let a=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ac({ones:()=>s.JpU(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ac({ones:()=>s.JpU(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l;0<this.dropout&&this.dropout<1&&(t=s.dC7(t,r[0]));let u=$s(t,this.kernel.read());this.useBias&&(u=ar(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=s.dC7(a,o[0]));const h=this.recurrentKernel.read(),[d,p]=s.Vl2(h,[2*this.units,this.units],h.rank-1),f=$s(a,d),[m,g,y]=s.Vl2(u,3,u.rank-1),[b,x]=s.Vl2(f,2,f.rank-1);i=this.recurrentActivation.apply(s.IHx(m,b)),c=this.recurrentActivation.apply(s.IHx(g,x));const v=$s(s.dC7(c,a),p);l=this.activation.apply(s.IHx(y,v));const w=s.IHx(s.dC7(i,a),s.dC7(s.IHx(1,s.W76(i)),l));return[w,w]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Li(this.activation),recurrentActivation:Li(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tr(this.kernelInitializer),recurrentInitializer:Tr(this.recurrentInitializer),biasInitializer:Tr(this.biasInitializer),kernelRegularizer:Hi(this.kernelRegularizer),recurrentRegularizer:Hi(this.recurrentRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:ro(this.kernelConstraint),recurrentConstraint:ro(this.recurrentConstraint),biasConstraint:ro(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}Nc.className="GRUCell",s.m7h.registerClass(Nc);class Tc extends wc{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Nc(t),super(t)}call(t,e){return(0,s.lub)((()=>{null!=this.cell.dropoutMask&&(s.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Tc.className="GRU",s.m7h.registerClass(Tc);class Cc extends kc{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,ms(this.units,"units"),this.activation=Ui(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ui(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Cr(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cr(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cr(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Xi(t.kernelRegularizer),this.recurrentRegularizer=Xi(t.recurrentRegularizer),this.biasRegularizer=Xi(t.biasRegularizer),this.kernelConstraint=io(t.kernelConstraint),this.recurrentConstraint=io(t.recurrentConstraint),this.biasConstraint=io(t.biasConstraint),this.dropout=Us([1,Ps([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Us([1,Ps([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Dr(t))[t.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;a=new((e=class extends cr{apply(e,a){const s=t.apply([n]),r=(new ur).apply([n]),o=t.apply([2*n]);return Ys(Ys(s,r),o)}}).className="CustomInit",e)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return(0,s.lub)((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new Za("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));let a=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ac({ones:()=>s.JpU(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ac({ones:()=>s.JpU(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let c,l,u,h;0<this.dropout&&this.dropout<1&&(t=s.dC7(t,o[0]));let d=$s(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=s.dC7(a,i[0])),d=s.IHx(d,$s(a,this.recurrentKernel.read())),this.useBias&&(d=ar(d,this.bias.read()));const[p,f,m,g]=s.Vl2(d,4,d.rank-1);c=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(f),u=s.IHx(s.dC7(l,r),s.dC7(c,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const y=s.dC7(h,this.activation.apply(u));return[y,y,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Li(this.activation),recurrentActivation:Li(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tr(this.kernelInitializer),recurrentInitializer:Tr(this.recurrentInitializer),biasInitializer:Tr(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Hi(this.kernelRegularizer),recurrentRegularizer:Hi(this.recurrentRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:ro(this.kernelConstraint),recurrentConstraint:ro(this.recurrentConstraint),biasConstraint:ro(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}Cc.className="LSTMCell",s.m7h.registerClass(Cc);class Ec extends wc{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Cc(t),super(t)}call(t,e){return(0,s.lub)((()=>{null!=this.cell.dropoutMask&&(s.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Ec.className="LSTM",s.m7h.registerClass(Ec);class _c extends kc{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return(0,s.lub)((()=>{let n=t.slice(1);const a=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?a.push(n.splice(0,t.stateSize.length)):a.push(n.splice(0,1));a.reverse();const s=[];let r;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],r=0===o?[t[0]].concat(n):[r[0]].concat(n),r=i.call(r,e),s.push(r.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[r[0]].concat(n)}))}build(t){let e;Er(t)&&(t=t[0]),this.cells.forEach(((n,a)=>{Os("RNNCell_".concat(a),(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign(Object.assign({},t),e)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const s of e.cells)a.push(vo(s,n));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Mr(t)}setWeights(t){const e=[];for(const n of this.cells){const a=n.weights.length,s=t.splice(a);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Br(e)}}function Ac(t){const{ones:e,rate:n,training:a=!1,count:r=1,dropoutFunc:o}=t,i=()=>null!=o?o(e(),n):sr(e(),n),c=()=>rr(i,e,a);if(!r||r<=1)return s.CnY(c().clone());return Array(r).fill(void 0).map(c).map((t=>s.CnY(t.clone())))}_c.className="StackedRNNCells",s.m7h.registerClass(_c);var Dc=function(t,e){var n={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(a=Object.getOwnPropertySymbols(t);s<a.length;s++)e.indexOf(a[s])<0&&Object.prototype.propertyIsEnumerable.call(t,a[s])&&(n[a[s]]=t[a[s]])}return n};class Rc extends wc{constructor(t){if(t.unroll)throw new Ya("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Ya("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Lr({ndim:5})]}call(t,e){return s.lub((()=>{if(null!=this.cell.dropoutMask&&(s.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Za("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,a=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:r})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return s.lub((()=>{const{stateSize:e}=this.cell,n=t.shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)],o=s.lls(r);return Array.isArray(e)?Array(e.length).fill(o):[o]}))}resetStates(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];s.lub((()=>{if(!this.stateful)throw new qa("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new Za("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>s.lls(r))):this.states_=[s.lls(r)];else if(null==t)s.B90(this.states_),null!=this.keptStates&&(s.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>s.lls(r))):this.states_[0]=s.lls(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Za("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));e?this.keptStates.push(this.states_.slice()):s.B90(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],a=r;if(!s.D5U.arraysEqual(n.shape,a))throw new Za("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[e]=n}}this.states_=this.states_.map((t=>s.CnY(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:a,padding:s,strides:r,dilationRate:o}=this.cell,i="channelsFirst"===e,c=t[i?3:2],l=t[i?4:3],u=tc(c,a[0],s,r[0],o[0]),h=tc(l,a[1],s,r[1],o[1]);return[...t.slice(0,2),...i?[n,u,h]:[u,h,n]]}}Rc.className="ConvRNN2D";class Oc extends Cc{constructor(t){const{filters:e,kernelSize:n,strides:a,padding:s,dataFormat:r,dilationRate:o}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,ms(this.filters,"filters"),this.kernelSize=$i(n,2,"kernelSize"),this.kernelSize.forEach((t=>ms(t,"kernelSize"))),this.strides=$i(a||1,2,"strides"),this.strides.forEach((t=>ms(t,"strides"))),this.padding=s||"valid",_s(this.padding),this.dataFormat=r||"channelsLast",Es(this.dataFormat),this.dilationRate=$i(o||1,2,"dilationRate"),this.dilationRate.forEach((t=>ms(t,"dilationRate")))}build(t){var e;t=Dr(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Za("The channel dimension of the input should be defined. "+"Found ".concat(t[n]));const a=t[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;t=new((e=class extends cr{apply(t,e){return Zs([n.apply([a]),s.iUs([a]),n.apply([2*a])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return s.lub((()=>{if(3!==t.length)throw new Za("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=e.training||!1,a=t[0],r=t[1],o=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ac({ones:()=>s.JpU(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,c=(t,e,n)=>e&&e[n]?s.dC7(e[n],t):t;let l=c(a,i,0),u=c(a,i,1),h=c(a,i,2),d=c(a,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ac({ones:()=>s.JpU(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=c(r,p,0),m=c(r,p,1),g=c(r,p,2),y=c(r,p,3);const[b,x,v,w]=s.Vl2(this.kernel.read(),4,3),[k,I,S,N]=this.useBias?s.Vl2(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,k,this.padding),u=this.inputConv(u,x,I,this.padding),h=this.inputConv(h,v,S,this.padding),d=this.inputConv(d,w,N,this.padding);const[T,C,E,_]=s.Vl2(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E),y=this.recurrentConv(y,_);const A=this.recurrentActivation.apply(s.IHx(l,f)),D=this.recurrentActivation.apply(s.IHx(u,m)),R=s.IHx(s.dC7(D,o),s.dC7(A,this.activation.apply(s.IHx(h,g)))),O=s.dC7(this.recurrentActivation.apply(s.IHx(d,y)),this.activation.apply(R));return[O,O,R]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=Dc(t,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(t,e,n,a){const r=s.Tek(t,e,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ar(r,n,this.dataFormat):r}recurrentConv(t,e){return s.Tek(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Oc.className="ConvLSTM2DCell",s.m7h.registerClass(Oc);class Fc extends Rc{constructor(t){const e=new Oc(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}Fc.className="ConvLSTM2D",s.m7h.registerClass(Fc);class Mc extends Wr{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?e[a]:this.noiseShape[a]);return n}call(t,e){return(0,s.lub)((()=>{this.invokeCallHook(t,e);const n=Ar(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,a=this.getNoiseShape(n);return rr((()=>sr(n,this.rate,a,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Mc.className="Dropout",s.m7h.registerClass(Mc);class Bc extends Mc{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Bc.className="SpatialDropout1D",s.m7h.registerClass(Bc);class Lc extends Wr{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,ms(this.units,"units"),this.activation=Ui(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Cr(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Cr(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=io(t.kernelConstraint),this.biasConstraint=io(t.biasConstraint),this.kernelRegularizer=Xi(t.kernelRegularizer),this.biasRegularizer=Xi(t.biasRegularizer),this.activityRegularizer=Xi(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Dr(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Dr(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return(0,s.lub)((()=>{this.invokeCallHook(t,e);const n=Ar(t),a=ys(this.activation.getClassName());let s;return null!=a?s=$s(n,this.kernel.read(),a,this.bias?this.bias.read():null):(s=$s(n,this.kernel.read()),null!=this.bias&&(s=ar(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:Li(this.activation),useBias:this.useBias,kernelInitializer:Tr(this.kernelInitializer),biasInitializer:Tr(this.biasInitializer),kernelRegularizer:Hi(this.kernelRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:ro(this.kernelConstraint),biasConstraint:ro(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Lc.className="Dense",s.m7h.registerClass(Lc);class zc extends Wr{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Dr(t);for(const e of t.slice(1))if(null==e)throw new Za('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(t.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[t[0],zs(t,1)]}call(t,e){return(0,s.lub)((()=>{this.invokeCallHook(t,e);let n=Ar(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=(0,s.p4s)(n,t)}return function(t){if(t.rank<=1)throw new Za("batchFlatten requires a minimum rank of 2. Got rank: ".concat(t.rank,"."));const e=[t.shape[0],zs(t.shape,1)];return s.XLQ(t,e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}zc.className="Flatten",s.m7h.registerClass(zc);class Uc extends Wr{constructor(t){super(t),this.supportsMasking=!0,this.activation=Ui(t.activation)}call(t,e){return(0,s.lub)((()=>{this.invokeCallHook(t,e);const n=Ar(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Li(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Uc.className="Activation",s.m7h.registerClass(Uc);class Pc extends Wr{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return(0,s.lub)((()=>{return t=Ar(t),e=t,n=this.n,(0,s.lub)((()=>{if(2!==e.shape.length)throw new Za("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(e.shape.length," tensor."));return Qs(js(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Pc.className="RepeatVector",s.m7h.registerClass(Pc);class Vc extends Wr{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",a=e.slice();let s=1,r=null;for(let i=0;i<a.length;++i){const t=a[i];if(this.isUnknown(t)){if(null!==r)throw new Za("Can only specifiy one unknown dimension.");r=i}else s*=t}const o=zs(t);if(null!==r){if(0===s||o%s!==0)throw new Za(n);a[r]=o/s}else if(o!==s)throw new Za(n);return a}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return(0,s.lub)((()=>{this.invokeCallHook(t,e);const n=Ar(t),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return(0,s.XLQ)(n,r)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Vc.className="Reshape",s.m7h.registerClass(Vc);class Wc extends Wr{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(t.dims," instead."));const e=Vs(1,t.dims.length+1);if(!s.D5U.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Lr({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Dr(t)).slice();return this.dims.forEach(((n,a)=>{e[a+1]=t[n]})),e}call(t,e){return(0,s.p4s)(Ar(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Wc.className="Permute",s.m7h.registerClass(Wc);class Gc extends Wr{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Ar(t);return(0,s.YjB)((0,s.Quu)(n,this.maskValue),-1)}call(t,e){return(0,s.lub)((()=>{this.invokeCallHook(t,e);const n=Ar(t),a=(0,s.YjB)((0,s.Quu)(n,this.maskValue),-1,!0);return(0,s.dC7)(n,(0,s.pju)(a,n.dtype))}))}}Gc.className="Masking",s.m7h.registerClass(Gc);class Hc extends Wr{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(as(t.inputLength))}this.inputDim=t.inputDim,ms(this.inputDim,"inputDim"),this.outputDim=t.outputDim,ms(this.outputDim,"outputDim"),this.embeddingsInitializer=Cr(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Xi(t.embeddingsRegularizer),this.activityRegularizer=Xi(t.activityRegularizer),this.embeddingsConstraint=io(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return(0,s.lub)((()=>this.maskZero?(t=Ar(t),(0,s.Quu)(t,(0,s.P84)(t))):null))}computeOutputShape(t){if(t=Dr(t),null==this.inputLength)return[...t,this.outputDim];const e=as(this.inputLength);if(e.length!==t.length-1)throw new Za('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));{let n=0;for(let a=0;a<e.length;++a){const s=e[a],r=t[a+1];if(null!=s&&null!=r&&s!==r)throw new Za('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));null==s&&(e[n]=r),n++}}return[t[0],...e,this.outputDim]}call(t,e){return(0,s.lub)((()=>{this.invokeCallHook(t,e);let n=Ar(t);"int32"!==n.dtype&&(n=Hs(n,"int32"));const a=tr(this.embeddings.read(),(0,s.XLQ)(n,[n.size]));return(0,s.XLQ)(a,Dr(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Tr(this.embeddingsInitializer),embeddingsRegularizer:Hi(this.embeddingsRegularizer),activityRegularizer:Hi(this.activityRegularizer),embeddingsConstraint:ro(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Hc.className="Embedding",s.m7h.registerClass(Hc);class jc extends Wr{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Ya}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let a=0;a<e.length;++a){const s=t[t.length-e.length+a],r=e[a];if(null==s||null==r||s<0||r<0)n.push(null);else if(1===s)n.push(r);else if(1===r)n.push(s);else{if(s!==r)throw new Za("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Dr(t)]),t.length<2)throw new Za("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(t.length," input(s)."));let e=[];for(const s of t)null!=s&&null!==s[0]&&e.push(s[0]);if(e=hs(e),e.length>1)throw new Za("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(t),"."));let n=null==t[0]?null:t[0].slice(1);for(let s=1;s<t.length;++s){const e=null==t[s]?null:t[s].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const a=t.map((t=>t.length));-1===t.indexOf(null)&&1===hs(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return(0,s.lub)((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const a=Ps(n);for(let n of t){const t=n.rank;for(let e=0;e<a-t;++e)n=js(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const o of t){const t=o.rank;if(null==t){const t=o.shape,a=t[0],r=t.slice(1).concat([a]);let i=s.XLQ(o,[a].concat(zs(t.slice(1))));i=s.p4s(i,[1,0]),i=s.XLQ(i,r),e.push(i),n=!0}else if(t>1){const a=Vs(1,t).concat([0]);e.push(s.p4s(o,a)),n=!0}else e.push(o)}let a=this.mergeFunction(e);const r=a.rank;if(n)if(null==r){const t=a.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));a=s.XLQ(s.p4s(s.XLQ(a,[-1,e]),[1,0]),n)}else if(r>1){const t=[r-1].concat(Vs(0,r-1));a=s.p4s(a,t)}return a}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const n=null==t[a]?null:t[a].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const a of t)null!=a&&null!==a[0]&&n.push(a[0]);return n=hs(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return s.lub((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Za("`mask` should be an Array");if(!Array.isArray(t))throw new Za("`inputs` should be an Array");if(e.length!==t.length)throw new Za("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(t.length," vs ").concat(e.length,")"));if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:s.dt4(t,0))))[0];for(let t=1;t<e.length-1;++t)n=s.HvI(n,e[t]);return n}))}}class Xc extends jc{constructor(t){super(t)}mergeFunction(t){return(0,s.lub)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=s.IHx(e,t[n]);return e}))}}Xc.className="Add",s.m7h.registerClass(Xc);class qc extends jc{constructor(t){super(t)}mergeFunction(t){return(0,s.lub)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=s.dC7(e,t[n]);return e}))}}qc.className="Multiply",s.m7h.registerClass(qc);class Kc extends jc{constructor(t){super(t)}mergeFunction(t){return(0,s.lub)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=s.IHx(e,t[n]);return s.dC7(1/t.length,e)}))}}Kc.className="Average",s.m7h.registerClass(Kc);class Zc extends jc{constructor(t){super(t)}mergeFunction(t){return(0,s.lub)((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=s.gWQ(e,t[n]);return e}))}}Zc.className="Maximum",s.m7h.registerClass(Zc);class Yc extends jc{constructor(t){super(t)}mergeFunction(t){return(0,s.lub)((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=s.LTh(e,t[n]);return e}))}}Yc.className="Minimum",s.m7h.registerClass(Yc);class Qc extends jc{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Za("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const a of t)if(null!=a){e=!1;break}if(e)return;const n=[];for(let a=0;a<t.length;++a){const e=t[a].slice();e.splice(this.axis,1);let r=!1;for(const t of n)if(s.D5U.arraysEqual(t,e)){r=!0;break}r||n.push(e)}if(n.length>1)throw new Za("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return(0,s.lub)((()=>Zs(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Za("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const s of e.slice(1)){if(null==n[a]||null==s[a]){n[a]=null;break}n[a]+=s[a]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Za("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Za("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Za("Mismatch in the length of mask (".concat(e.length,") ")+"and the legnth of inputs (".concat(t.length,")"));return s.lub((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const a=[];for(let o=0;o<t.length;++o)null==e[o]?a.push(s.pju(s.JpU(t[o]),"bool")):e[o].rank<t[o].rank?a.push(s.dt4(e[o],-1)):a.push(e[o]);const r=s.zoF(a,this.axis);return s.$6P(r,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Jc(t,e){for(;t<0;)t+=e;return t}Qc.className="Concatenate",s.m7h.registerClass(Qc);class $c extends jc{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){s.D5U.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Ya("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,n);if(e[a[0]]!==n[a[1]])throw new Za("Dimension incompatibility: "+"".concat(e[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(t){if(2!==t.length)throw new Za("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(t.length," input(s)."));let e,n=t[0],a=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>Jc(e,t[n].shape.length))):[Jc(this.axes,n.shape.length),Jc(this.axes,a.shape.length)],this.normalize&&(n=wo(n,e[0]),a=wo(a,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Ya("batchDot is not implemented for tensors of 4D or higher rank yet");if(s.D5U.assert(t.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(t.shape.length))),s.D5U.assert(t.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(e.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Ya("batchDot is not implemented for complex64-type Tensors yet.");const a=t.shape.length,r=e.shape.length;null==n&&(n=[a-1,r-2]);const o=n;return s.lub((()=>{let n,i;if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=s.XLQ(e,e.shape.concat(t))}else if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=s.XLQ(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=o[0]===o[1]?s.Smz(s.dC7(t,e),o[0]):s.Smz(s.dC7(s.p4s(t,[1,0]),e),o[1]);else{const n=o[0]!==t.shape.length-1,a=o[1]===e.shape.length-1;i=s.OI3(t,e,n,a)}if(n>0){let t;t=a>r?a+r-3:a-1;const e=[];for(let a=t;a<t+n;++a)e.push(a);i=s.L9e(i,e)}return 1===i.shape.length&&(i=s.dt4(i,1)),i}))}(n,a,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Jc(this.axes,t.length),Jc(this.axes,e.length)],n}computeOutputShape(t){s.D5U.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Ya("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,n);e.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=e.concat(n);return 1===r.length&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}$c.className="Dot",s.m7h.registerClass($c);class tl extends Wr{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return(0,s.lub)((()=>{this.invokeCallHook(t,e);const n=Ar(t);return rr((()=>(0,s.IHx)(Js(n.shape,0,this.stddev),n)),(()=>n),e.training||!1)}))}}tl.className="GaussianNoise",s.m7h.registerClass(tl);class el extends Wr{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return(0,s.lub)((()=>{this.invokeCallHook(t,e);const n=Ar(t);if(this.rate>0&&this.rate<1){return rr((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return(0,s.dC7)(n,Js(n.shape,1,t))}),(()=>n),e.training||!1)}return n}))}}el.className="GaussianDropout",s.m7h.registerClass(el);class nl extends Wr{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Ar(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return(0,s.lub)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t),a=()=>{const e=Ar(t),a=-1.7580993408473766;let r=(0,s.brS)((0,s.LGj)(n),this.rate);r=Hs(r,"float32");const o=((1-this.rate)*(1+this.rate*a**2))**-.5,i=-o*a*this.rate,c=(0,s.IHx)((0,s.dC7)(e,r),(0,s.dC7)((0,s.IHx)(r,-1),a));return(0,s.IHx)((0,s.dC7)(c,o),i)};return rr(a,(()=>Ar(t)),e.training||!1)}return t}))}}function al(t,e,n,a,r){let o,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===t.rank)o=s.Dxk(t,e,n,a,r,i);else if(3===t.rank)o=s.JY5(t,e,n,a,r,i);else{if(4!==t.rank)throw new Ya("batchNormalization is not implemented for array of rank ".concat(t.rank," ")+"yet");o=s.p3b(t,e,n,a,r,i)}return o}function sl(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return s.D5U.arraysEqual(a.slice().sort(),Vs(0,t.rank-1))?function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,s.lub)((()=>{const o=s.Gi7(t,a),i=o.mean,c=o.variance;return[al(t,i,c,n,e,r),i,c]}))}(t,e,n,a,r):function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,s.lub)((()=>{const o=s.Gi7(t,a),i=o.mean,c=o.variance,l=[];for(const e of Vs(0,t.rank))-1!==a.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=(0,s.XLQ)(i,l),h=(0,s.XLQ)(c,l),d=null==e?null:(0,s.XLQ)(e,l),p=null==n?null:(0,s.XLQ)(n,l);return[al(t,u,h,p,d,r),i,c]}))}(t,e,n,a,r)}nl.className="AlphaDropout",s.m7h.registerClass(nl);class rl extends Wr{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Cr(t.betaInitializer||"zeros"),this.gammaInitializer=Cr(t.gammaInitializer||"ones"),this.movingMeanInitializer=Cr(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Cr(t.movingVarianceInitializer||"ones"),this.betaConstraint=io(t.betaConstraint),this.gammaConstraint=io(t.gammaConstraint),this.betaRegularizer=Xi(t.betaRegularizer),this.gammaRegularizer=Xi(t.gammaRegularizer)}build(t){t=Dr(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Za("Axis ".concat(e," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(t),"."));this.inputSpec=[new Lr({ndim:t.length,axes:{[e]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return(0,s.lub)((()=>{const n=null!=e.training&&e.training,a=Ar(t),r=a.shape,o=r.length,i=Vs(0,o),c=this.axis>=0?this.axis:this.axis+o;i.splice(c,1);const l=$a(1,o);l[c]=r[c];const u=i.slice();u.sort();const h=!s.D5U.arraysEqual(u,Vs(0,o).slice(0,o-1));if(!n)return(()=>{if(h){const t=(0,s.XLQ)(this.movingMean.read(),l),e=(0,s.XLQ)(this.movingVariance.read(),l),n=this.center?(0,s.XLQ)(this.beta.read(),l):null,r=this.scale?(0,s.XLQ)(this.gamma.read(),l):null;return al(a,t,e,n,r,this.epsilon)}return al(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,p,f]=sl(a,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(t,e,n)=>{s.lub((()=>{const a=1-n,r=t.read(),o=s.dC7(s.luU(r,e),a);t.write(s.luU(r,o))}))};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),d}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tr(this.betaInitializer),gammaInitializer:Tr(this.gammaInitializer),movingMeanInitializer:Tr(this.movingMeanInitializer),movingVarianceInitializer:Tr(this.movingVarianceInitializer),betaRegularizer:Hi(this.betaRegularizer),gammaRegularizer:Hi(this.gammaRegularizer),betaConstraint:ro(this.betaConstraint),gammaConstraint:ro(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}rl.className="BatchNormalization",s.m7h.registerClass(rl);class ol extends Wr{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Cr(t.betaInitializer||"zeros"),this.gammaInitializer=Cr(t.gammaInitializer||"ones"),this.betaRegularizer=Xi(t.betaRegularizer),this.gammaRegularizer=Xi(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Dr(t)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=e);for(const a of this.axis)if(a<0||a>=e)throw new Error("Invalid axis: ".concat(a));if(this.axis.length!==hs(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(t,e){const n=Ar(t),a=n.shape,r=a.length;return(0,s.lub)((()=>{let{mean:t,variance:e}=(0,s.Gi7)(n,this.axis,!0);const o=$a(1,r);for(const n of this.axis)o[n]=a[n];const i=t=>null!=t&&t.shape.length!==r?s.XLQ(t,o):t;let c=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],h=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(u.push(a[n]),h.push(1)):(u.push(1),h.push(a[n]));return t=s.Gg6(t,u),e=s.Gg6(e,u),null!=c&&(c=s.Gg6(c,h)),null!=l&&(l=s.Gg6(l,h)),al(n,t,e,l,c,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tr(this.betaInitializer),gammaInitializer:Tr(this.gammaInitializer),betaRegularizer:Hi(this.betaRegularizer),gammaRegularizer:Hi(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}ol.className="LayerNormalization",s.m7h.registerClass(ol);class il extends Wr{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Za("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(t.padding.length," array."));let e,n;if("number"===typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Za("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(t.padding[0].length," array."));if(e=t.padding[0],2!==t.padding[1].length)throw new Za("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(t.padding[1].length," array."));n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Lr({ndim:4})]}computeOutputShape(t){let e,n;return t=Dr(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return(0,s.lub)((()=>{return e=Ar(t),n=this.padding,a=this.dataFormat,(0,s.lub)((()=>{if(4!==e.rank)throw new Za("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(e.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Za("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new Za("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let t;return t="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],s.vku(e,t)}));var e,n,a}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function cl(t,e,n,a,r,o){return(0,s.lub)((()=>{let i;Es(r),As(o),_s(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),t=nc(t,r);const c="same"===a?"same":"valid";return i="max"===o?s._sB(t,e,n,c):s.wS1(t,e,n,c),"channelsFirst"===r&&(i=s.p4s(i,[0,3,1,2])),i}))}function ll(t,e,n,a,r,o){return(0,s.lub)((()=>{let i;Es(r),As(o),_s(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),t=ac(t,r);const c="same"===a?"same":"valid";return i="max"===o?s.YQQ(t,e,n,c):s.uR5(t,e,n,c),"channelsFirst"===r&&(i=s.p4s(i,[0,4,1,2,3])),i}))}il.className="ZeroPadding2D",s.m7h.registerClass(il);class ul extends Wr{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"===typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!==typeof t.poolSize[0])throw new Za("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.poolSize)));this.poolSize=t.poolSize}if(ms(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"===typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!==typeof t.strides[0])throw new Za("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.strides)));this.strides=t.strides}ms(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,_s(this.padding),this.inputSpec=[new Lr({ndim:3})]}computeOutputShape(t){const e=tc((t=Dr(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return(0,s.lub)((()=>{this.invokeCallHook(t,e),t=js(Ar(t),2);const n=this.poolingFunction(Ar(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return s.L9e(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class hl extends ul{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Es(s),_s(a),cl(t,e,n,a,s,"max")}}hl.className="MaxPooling1D",s.m7h.registerClass(hl);class dl extends ul{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Es(s),_s(a),cl(t,e,n,a,s,"avg")}}dl.className="AveragePooling1D",s.m7h.registerClass(dl);class pl extends Wr{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Za("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides];ms(this.poolSize,"poolSize"),ms(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Es(this.dataFormat),_s(this.padding),this.inputSpec=[new Lr({ndim:4})]}computeOutputShape(t){t=Dr(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=tc(e,this.poolSize[0],this.padding,this.strides[0]),n=tc(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return(0,s.lub)((()=>(this.invokeCallHook(t,e),this.poolingFunction(Ar(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class fl extends pl{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Es(s),_s(a),cl(t,e,n,a,s,"max")}}fl.className="MaxPooling2D",s.m7h.registerClass(fl);class ml extends pl{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Es(s),_s(a),cl(t,e,n,a,s,"avg")}}ml.className="AveragePooling2D",s.m7h.registerClass(ml);class gl extends Wr{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Za("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];ms(this.poolSize,"poolSize"),ms(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Es(this.dataFormat),_s(this.padding),this.inputSpec=[new Lr({ndim:5})]}computeOutputShape(t){t=Dr(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[4]:t[3];return e=tc(e,this.poolSize[0],this.padding,this.strides[0]),n=tc(n,this.poolSize[1],this.padding,this.strides[1]),a=tc(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,a]:[t[0],e,n,a,t[4]]}call(t,e){return(0,s.lub)((()=>(this.invokeCallHook(t,e),this.poolingFunction(Ar(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class yl extends gl{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Es(s),_s(a),ll(t,e,n,a,s,"max")}}yl.className="MaxPooling3D",s.m7h.registerClass(yl);class bl extends gl{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Es(s),_s(a),ll(t,e,n,a,s,"avg")}}bl.className="AveragePooling3D",s.m7h.registerClass(bl);class xl extends Wr{constructor(t){super(t),this.inputSpec=[new Lr({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Ya}}class vl extends xl{constructor(t){super(t||{})}call(t,e){return(0,s.lub)((()=>{const e=Ar(t);return s.J69(e,1)}))}}vl.className="GlobalAveragePooling1D",s.m7h.registerClass(vl);class wl extends xl{constructor(t){super(t||{})}call(t,e){return(0,s.lub)((()=>{const e=Ar(t);return s.Fp7(e,1)}))}}wl.className="GlobalMaxPooling1D",s.m7h.registerClass(wl);class kl extends Wr{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Es(this.dataFormat),this.inputSpec=[new Lr({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Ya}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Il extends kl{call(t,e){return(0,s.lub)((()=>{const e=Ar(t);return"channelsLast"===this.dataFormat?s.J69(e,[1,2]):s.J69(e,[2,3])}))}}Il.className="GlobalAveragePooling2D",s.m7h.registerClass(Il);class Sl extends kl{call(t,e){return(0,s.lub)((()=>{const e=Ar(t);return"channelsLast"===this.dataFormat?s.Fp7(e,[1,2]):s.Fp7(e,[2,3])}))}}Sl.className="GlobalMaxPooling2D",s.m7h.registerClass(Sl);class Nl extends Wr{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=vo(e.layer,n);delete e.layer;const s={layer:a};return Object.assign(s,e),new t(s)}}class Tl extends Nl{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Dr(t)).length<3)throw new Za("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(t)));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Dr(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),a=t[1];return[n[0],a].concat(n.slice(1))}call(t,e){return(0,s.lub)((()=>vc(((t,n)=>[Ar(this.layer.call(t,e)),[]]),t=Ar(t),[],!1,null,null,!1,!0)[1]))}}Tl.className="TimeDistributed",s.m7h.registerClass(Tl);class Cl extends Nl{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=vo(n),e.goBackwards=!0!==e.goBackwards;const a={};var s;if(a.className=t.layer.getClassName(),a.config=e,this.backwardLayer=vo(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,ps(Ts,"BidirectionalMergeMode",s),t.weights)throw new Ya("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,a,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(a=s.slice(1),e=s[0]):e=s[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[e].concat(a).concat(a.slice()):ns(n)}apply(t,e){let n=null==e?null:e.initialState,a=null==e?null:e.constants;null==e&&(e={});const s=xc(t,n,a,this.numConstants);if(t=s.inputs,n=s.initialState,a=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==a)return super.apply(t,e);const r=[],o=[];if(null!=n){const t=n.length;if(t%2>0)throw new Za("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,r.push(...n);const a=n.map((t=>new Lr({shape:t.shape})));this.forwardLayer.stateSpec=a.slice(0,t/2),this.backwardLayer.stateSpec=a.slice(t/2),o.push(...a)}if(null!=a)throw new Ya("Support for constants in Bidirectional layers is not implemented yet.");const i=r[0]instanceof zr;for(const c of r)if(c instanceof zr!==i)throw new Za("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[t].concat(r),a=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=a;const i=super.apply(n,e);return this.inputSpec=s,i}return super.apply(t,e)}call(t,e){return(0,s.lub)((()=>{const n=e.initialState;let a,r,o,i;if(null==n)a=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(t,Object.assign(e,{initialState:s})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(o=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=s.GYS(r,1)),"concat"===this.mergeMode?i=Zs([a,r]):"sum"===this.mergeMode?i=s.IHx(a,r):"ave"===this.mergeMode?i=s.dC7(.5,s.IHx(a,r)):"mul"===this.mergeMode?i=s.dC7(a,r):null==this.mergeMode&&(i=[a,r]),this.returnState?null==this.mergeMode?i.concat(o):[i].concat(o):i}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Os(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Os(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=vo(e.layer);if(delete e.layer,null!=e.numConstants)throw new Ya("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=e;return a.layer=n,new t(a)}}Cl.className="Bidirectional",s.m7h.registerClass(Cl);class El extends Wr{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return(0,s.lub)((()=>("float32"!==(t=Ar(t)).dtype&&(t=Hs(t,"float32")),(0,s.IHx)((0,s.dC7)(t,this.scale),this.offset))))}}El.className="Rescaling",s.m7h.registerClass(El);const{resizeBilinear:_l,cropAndResize:Al}=s.image;class Dl extends Wr{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,n,a,r,o,i,c){return(0,s.lub)((()=>{let l,u=!1;const h=[e/o,n/i,(a+e)/o,(r+n)/i],d=[];3===t.rank?(u=!0,l=(0,s.knu)([t])):l=t;for(let t=0;t<l.shape[0];t++)d.push(h);const p=(0,s.XeE)(d,[d.length,4]),f=(0,s.w6H)(0,d.length,1,"int32"),m=Al(l,p,f,[a,r],"nearest");return Hs(u?Ar((0,s.HHK)(m)):m,c)}))}upsize(t,e,n,a){return(0,s.lub)((()=>Hs(_l(t,[e,n]),a)))}call(t,e){return(0,s.lub)((()=>{const e=Ar(t),n=e.dtype,a=e.shape,s=a[a.length-3],r=a[a.length-2];let o=0;s!==this.height&&(o=Math.floor((s-this.height)/2));let i=0;return r!==this.width&&(i=Math.floor((r-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(e,o,i,this.height,this.width,s,r,n):this.upsize(t,this.height,this.width,n)}))}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){const e=(t=Dr(t)).length-3,n=t.length-2;return t[e]=this.height,t[n]=this.width,t}}Dl.className="CenterCrop",s.m7h.registerClass(Dl);class Rl extends Wr{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return null==(t=Dr(t))?[this.numTokens]:"oneHot"===this.outputMode&&1!==t[t.length-1]?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return(0,s.lub)((()=>{let n;if("int32"!==(t=Ar(t)).dtype&&(t=Hs(t,"int32")),"undefined"!==typeof e.countWeights){if("count"!==this.outputMode)throw new Za("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(e.countWeights));n=Ar(e.countWeights)}const a=(0,s.Fp7)(t),r=(0,s.VV$)(t),o=(0,s.pjt)(this.numTokens,a).bufferSync().get(0),i=(0,s.brS)(r,0).bufferSync().get(0);if(!o||!i)throw new Za("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(t,e,n,a){let r=Ar(t);if("int32"!==r.dtype&&(r=Hs(r,"int32")),"int"===e)return r;const o=r.shape;if(0===r.rank&&(r=(0,s.dt4)(r,-1)),"oneHot"===e&&1!==r.shape[r.shape.length-1]&&(r=(0,s.dt4)(r,-1)),r.rank>2)throw new Za("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(e," and input shape ").concat(o)+" which would result in output rank ".concat(r.rank,"."));const i=["multiHot","oneHot"].includes(e),c=r;let l;if(l="undefined"!==typeof a&&"count"===e?(0,s.ppE)(c,a,n,i):(0,s.ppE)(c,[],n,i),"tfIdf"!==e)return l;if(a)return(0,s.dC7)(l,a);throw new Za("When outputMode is 'tfIdf', weights must be provided.")}(t,this.outputMode,this.numTokens,n)}))}}Rl.className="CategoryEncoding",s.m7h.registerClass(Rl);const Ol=new Set(["bilinear","nearest"]);class Fl extends Wr{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation){if(!Ol.has(t.interpolation))throw new Za("Invalid interpolation parameter: ".concat(t.interpolation," is not implemented"));this.interpolation=t.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){const e=(t=Dr(t))[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return(0,s.lub)((()=>{const e=[this.height,this.width];if("bilinear"===this.interpolation)return s.image.resizeBilinear(t,e,!this.cropToAspectRatio);if("nearest"===this.interpolation)return s.image.resizeNearestNeighbor(t,e,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Ol]," are supported"))}))}}Fl.className="Resizing",s.m7h.registerClass(Fl);class Ml{constructor(t){this.seed=t}next(){if(void 0!==this.seed)return this.seed++}}Ml.className="RandomSeed";class Bl extends Wr{constructor(t){super(t),this.randomGenerator=new Ml(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}Bl.className="BaseRandomLayer";const Ll=new Set(["bilinear","nearest"]);class zl extends Bl{constructor(t){super(t);const{factor:e,interpolation:n="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Za("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Za("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new Za("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!Ll.has(n))throw new Za("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){const e=(t=Dr(t))[2];return[this.imgHeight,-1,e]}call(t,e){return(0,s.lub)((()=>{const e=Ar(t);this.imgHeight=e.shape[e.shape.length-3];const n=e.shape[e.shape.length-2];this.widthFactor=(0,s.LGj)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return s.image.resizeBilinear(t,r);case"nearest":return s.image.resizeNearestNeighbor(t,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...Ll]," are supported"))}}))}}zl.className="RandomWidth",s.m7h.registerClass(zl);var Ul,Pl=n(1447),Vl=n(6699);function Wl(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==t)return null;if("function"===typeof Blob&&t instanceof Blob)return t.slice();if(a.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Xl(t)){const s=Array.isArray(t)?[]:{};a.add(t);for(const r in t){const o=Wl(t[r],e,n,a);s[r]=o}return a.delete(t),t.__proto__&&(s.__proto__=t.__proto__),s}throw new Error("Can't recurse into non-iterable type: ".concat(t))}return n.set(t,s.value),s.value}function Gl(t){return Hl(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:jl)}function Hl(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=t[0];if(n.has(a))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Xl(a)){const s=Array.isArray(a)?[]:{};n.add(a);for(const r in a){const a=Hl(t.map((t=>t[r])),e,n);s[r]=a}return n.delete(a),s}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return s.value}function jl(t){return null===t?null:Xl(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function Xl(t){let e=!1;if(s.OBj().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:a}=n(4977);e=t instanceof a}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"===typeof t&&!(t instanceof s.esB)&&!(t instanceof Promise)&&!e)}function ql(t){return function(t,e){return Wl(t,e)}(t,Kl)}function Kl(t){return t instanceof s.esB?{value:t.clone(),recurse:!1}:Xl(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class Zl{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class Yl extends Zl{constructor(){super(Yl.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let a=0;a<n;a++)e[a]=this.get(this.wrap(this.begin+a));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Ql(t){return new eu(t)}function Jl(t,e){return new du(t,e)}Yl.INITIAL_CAPACITY=32;class $l{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new cu(this,t)}filter(t){return new ou(this,t)}map(t){return new iu(this,t)}mapAsync(t){return new lu(this,t)}serialMapAsync(t){return new lu(this,t).serial()}flatmap(t){return new hu(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t){return new ru(this,t,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:jl;return this.rowMajorBatch(t,e).map((t=>Gl(t,n)))}concatenate(t,e){return new du(new tu([this,t]),e)}take(t){return t<0||null==t?this:new su(this,t)}skip(t){return t<0||null==t?this:new au(this,t)}prefetch(t){return new pu(this,t)}shuffle(t,e){return new fu(this,t,e)}serial(){return new nu(this)}}class tu extends $l{constructor(t){super(),this.items=t,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:ql(t),done:!1}}}class eu extends $l{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: ".concat(t.message),t}}}class nu extends $l{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class au extends $l{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;s.B90(t.value)}return this.upstream.next()}}class su extends $l{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class ru extends $l{constructor(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class ou extends $l{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;s.B90(t.value)}}}class iu extends $l{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=s.piX.getTensorsInContainer(t.value),n=this.transform(t.value),a=s.piX.getTensorsInContainer(n);for(const r of e)s.piX.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}}class cu extends $l{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class lu extends $l{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=s.piX.getTensorsInContainer(t.value),n=await this.transform(t.value),a=s.piX.getTensorsInContainer(n);for(const r of e)s.piX.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}}class uu extends $l{constructor(){super(),this.outputQueue=new Yl,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class hu extends uu{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=s.piX.getTensorsInContainer(t.value),n=this.transform(t.value),a=s.piX.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const r of e)s.piX.isTensorInList(r,a)||r.dispose();return!0}}class du extends $l{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(Ul||(Ul={}));class pu extends $l{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Zl(e)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class fu extends pu{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Vl.alea(n||s.D5U.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class mu{constructor(){this.size=null}batch(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return s.D5U.assert(t>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(t))),a=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),gu((async()=>(await n.iterator()).columnMajorBatch(t,e,yu)),a)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,gu((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,gu((async()=>(await e.iterator()).filter((e=>s.lub((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return gu((async()=>(await e.iterator()).map((e=>s.lub((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return gu((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return gu((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,gu((async()=>Jl(Ql((async()=>({value:await e.iterator(),done:!1}))).take(t))),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,gu((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=Vl.alea(e||s.D5U.now().toString());return gu((async()=>{let e=r.int32();return n&&(e+=r.int32()),(await a.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,gu((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function gu(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends mu{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function yu(t){if(null===t)return null;if(function(t){return null==t||null===(e=t)||"object"!==typeof e&&"function"!==typeof e||Array.isArray(t)||"object"===typeof t&&t instanceof s.esB||s.D5U.isTypedArray(t);var e}(t[0])){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof s.esB?s.knu(t):s.XeE(t)}(t),recurse:!1}}return{value:null,recurse:!0}}mu.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function bu(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&s.D5U.assert("complex64"!==t.dtype,(()=>"".concat(e," does not support complex64 tensors in the CPU backend.")))}))}const xu=s.GDt.ZA;class vu extends s.Zuw{nextDataId(){return vu.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new s.JLz(this,(0,s.SRH)())}write(t,e,n){this.firstUse&&(this.firstUse=!1,(0,s.OBj)().get("IS_NODE")&&s.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:t,dtype:n,refCount:1}),a}makeTensorInfo(t,e,n){let a;if("string"===e&&null!=n&&n.length>0&&s.D5U.isString(n[0])){const r=n.map((t=>s.D5U.encodeString(t)));a=this.write(r,t,e)}else a=this.write(n,t,e);return{dataId:a,shape:t,dtype:e}}refCount(t){if(this.data.has(t)){return this.data.get(t).refCount}return 0}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,a,s){this.data.set(t,{values:e,dtype:a,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return s.backend_util.mergeRealAndImagArrays(t,e)}return s.D5U.convertBackendValuesAndArrayBuffer(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>s.D5U.decodeString(t)));return(0,s.f3b)(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,s.f3b)(t.shape,t.dtype,e)}makeOutput(t,e,n){return(0,s.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=s.D5U.now();t();return{kernelMs:s.D5U.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){bu([t],"where");const e=this.readSync(t.dataId);return xu(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}vu.nextDataId=0;function wu(t){return(e,n,a)=>{const r=s.D5U.getArrayFromDType(n,e.length);for(let s=0;s<e.length;++s)r[s]=t(e[s],a);return r}}function ku(t,e,n){return Iu(t,wu(e),n)}function Iu(t,e,n){return a=>{let{inputs:r,attrs:o,backend:i}=a;const{x:c}=r;bu(c,t);const l=i,u=l.data.get(c.dataId).values;let h;if("string"===c.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");h=s.backend_util.fromUint8ToStringArray(u)}else h=u;const d=n||c.dtype,p=e(h,d,o);return l.makeTensorInfo(c.shape,d,p)}}(0,s.jqO)("cpu",(()=>new vu),1);const Su=ku(s.SX0,(t=>t>=0?t:Math.exp(t)-1)),Nu={kernelName:s.SX0,backendName:"cpu",kernelFunc:Su};function Tu(t){const{inputs:e,backend:n}=t,{x:a}=e;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Cu={kernelName:s.iJz,backendName:"cpu",kernelFunc:Tu};function Eu(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{alpha:o}=a;bu([r],"leakyRelu");const i=s.D5U.sizeFromShape(r.shape),c=n.data.get(r.dataId).values,l=s.D5U.getTypedArrayFromDType("float32",i);for(let s=0;s<c.length;s++)l[s]=c[s]<0?o*c[s]:c[s];return n.makeTensorInfo(r.shape,"float32",l)}const _u={kernelName:s.J$2,backendName:"cpu",kernelFunc:Eu};function Au(t){return(e,n,a,r,o)=>{const i=s.backend_util.assertAndGetBroadcastShape(e,n),c=i.length,l=s.D5U.computeStrides(i),u=s.D5U.sizeFromShape(i),h=s.D5U.getTypedArrayFromDType(o,u),d=e.length,p=n.length,f=s.D5U.computeStrides(e),m=s.D5U.computeStrides(n),g=s.backend_util.getBroadcastDims(e,i),y=s.backend_util.getBroadcastDims(n,i);if(g.length+y.length===0)for(let s=0;s<h.length;++s)h[s]=t(a[s%a.length],r[s%r.length]);else for(let b=0;b<h.length;++b){const e=s.D5U.indexToLoc(b,c,l),n=e.slice(-d);g.forEach((t=>n[t]=0));const o=s.D5U.locToIndex(n,d,f),i=e.slice(-p);y.forEach((t=>i[t]=0));const u=s.D5U.locToIndex(i,p,m);h[b]=t(a[o],r[u])}return[h,i]}}const Du=Au(((t,e)=>t<0?e*t:t));function Ru(t){const{inputs:e,backend:n}=t,{x:a,alpha:s}=e;bu([a,s],"prelu");const r=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,[i,c]=Du(a.shape,s.shape,r,o,"float32");return n.makeTensorInfo(c,"float32",i)}const Ou={kernelName:s.o0g,backendName:"cpu",kernelFunc:Ru},Fu=ku(s.qkr,(t=>Math.max(0,t))),Mu={kernelName:s.qkr,backendName:"cpu",kernelFunc:Fu},Bu=ku(s.SbG,(t=>Math.min(Math.max(0,t),6))),Lu={kernelName:s.SbG,backendName:"cpu",kernelFunc:Bu},zu=wu((t=>1/(1+Math.exp(-t)))),Uu=ku(s.a5O,(t=>1/(1+Math.exp(-t)))),Pu={kernelName:s.a5O,backendName:"cpu",kernelFunc:Uu};function Vu(t,e,n,a,s){if("linear"===n)return Tu({inputs:{x:e},backend:t});if("relu"===n)return Fu({inputs:{x:e},backend:t});if("elu"===n)return Su({inputs:{x:e},backend:t});if("relu6"===n)return Bu({inputs:{x:e},backend:t});if("prelu"===n)return Ru({inputs:{x:e,alpha:a},backend:t});if("leakyrelu"===n)return Eu({inputs:{x:e},backend:t,attrs:{alpha:s}});if("sigmoid"===n)return Uu({inputs:{x:e},backend:t});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function Wu(t){const{inputs:e,backend:n}=t,{real:a,imag:s}=e,r=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",r),imag:n.makeTensorInfo(s.shape,"float32",o)},i}const Gu={kernelName:s.Zz9,backendName:"cpu",kernelFunc:Wu};function Hu(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return Wu({inputs:{real:Hu(t,e,"float32"),imag:Hu(t,e,"float32")},backend:t})}const a=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(e),n);return t.makeTensorInfo(e,n,a)}function ju(t){const{inputs:e,backend:n}=t,{input:a}=e,s=n.data.get(a.dataId).complexTensorInfos.real,r=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,r)}const Xu={kernelName:s.xJR,backendName:"cpu",kernelFunc:ju};function qu(t,e,n,a){if("int32"===a){return[e,"int32",Int32Array.from(t)]}if("bool"===a){const a=s.D5U.toTypedArray([0],n),[r,o]=Au(((t,e)=>t!==e?1:0))(e,[],t,a,"bool");return[o,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function Ku(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{dtype:o}=a;if("complex64"===o){if("complex64"===r.dtype)return Tu({inputs:{x:r},backend:n});const t=Hu(n,r.shape,r.dtype),e=Ku({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=Wu({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),a}if("complex64"===r.dtype){const t=ju({inputs:{input:r},backend:n}),e=Ku({inputs:{x:t},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(t),e}if(!s.D5U.hasEncodingLoss(r.dtype,o)){const t=Tu({inputs:{x:r},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:o}}const i=n.data.get(r.dataId).values,[c,l,u]=qu(i,r.shape,r.dtype,o);return n.makeTensorInfo(c,l,u)}const Zu={kernelName:s.RFZ,backendName:"cpu",kernelFunc:Ku};function Yu(t,e,n,a){return null==n?n=>{let{inputs:r,backend:o}=n;const{a:i,b:c}=r,l=o;bu([i,c],t);const u=l.data.get(i.dataId).values,h=l.data.get(c.dataId).values,d="string"===i.dtype?s.backend_util.fromUint8ToStringArray(u):u,p="string"===i.dtype?s.backend_util.fromUint8ToStringArray(h):h,f=a||i.dtype,[m,g]=e(i.shape,c.shape,d,p,f);return l.makeTensorInfo(g,f,m)}:t=>{let{inputs:s,backend:r}=t;const{a:o,b:i}=s,c=r;if("complex64"===o.dtype||"complex64"===i.dtype){const t=Ku({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),e=c.data.get(t.dataId),a=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,r=c.data.get(a.dataId).values,l=c.data.get(s.dataId).values,u=Ku({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(u.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=c.data.get(d.dataId).values,m=c.data.get(p.dataId).values,[g,y,b]=n(o.shape,i.shape,r,l,f,m),x=c.makeTensorInfo(b,"float32",g),v=c.makeTensorInfo(b,"float32",y),w=Wu({inputs:{real:x,imag:v},backend:c});return c.disposeIntermediateTensorInfo(t),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(v),w}{const t=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,s=a||o.dtype,[r,l]=e(o.shape,i.shape,t,n,s);return c.makeTensorInfo(l,s,r)}}}function Qu(t){return(e,n,a,r,o,i)=>{const c=s.backend_util.assertAndGetBroadcastShape(e,n),l=s.D5U.sizeFromShape(c),u=c.length,h=s.D5U.computeStrides(c),d=s.D5U.getTypedArrayFromDType("float32",l),p=s.D5U.getTypedArrayFromDType("float32",l),f=s.backend_util.getBroadcastDims(e,c),m=s.backend_util.getBroadcastDims(n,c),g=s.backend_util.mergeRealAndImagArrays(a,r),y=s.backend_util.mergeRealAndImagArrays(o,i),b=e.length,x=s.D5U.computeStrides(e),v=n.length,w=s.D5U.computeStrides(n);if(f.length+m.length===0)for(let s=0;s<d.length;s++){const e=s%g.length,n=s%y.length,a=t(g[2*e],g[2*e+1],y[2*n],y[2*n+1]);d[s]=a.real,p[s]=a.imag}else for(let k=0;k<d.length;k++){const e=s.D5U.indexToLoc(k,u,h),n=e.slice(-b);f.forEach((t=>n[t]=0));const a=s.D5U.locToIndex(n,b,x),r=e.slice(-v);m.forEach((t=>r[t]=0));const o=s.D5U.locToIndex(r,v,w),i=t(g[2*a],g[2*a+1],y[2*o],y[2*o+1]);d[k]=i.real,p[k]=i.imag}return[d,p,c]}}const Ju=Au(((t,e)=>t+e)),$u=Qu(((t,e,n,a)=>({real:t+n,imag:e+a}))),th=Yu(s.mm_,Ju,$u),eh={kernelName:s.mm_,backendName:"cpu",kernelFunc:th};function nh(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{shape:o}=a,i=s.D5U.sizeFromShape(r.shape),c=s.D5U.inferFromImplicitShape(o,i),l=s.D5U.sizeFromShape(c);s.D5U.assert(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=c,e.shape=c}return{dataId:r.dataId,shape:c,dtype:r.dtype}}const ah={kernelName:s.HZH,backendName:"cpu",kernelFunc:nh};function sh(t){const{inputs:e,backend:n,attrs:a}=t,{a:r,b:o}=e,{transposeA:i,transposeB:c}=a;bu([r,o],"matMul");const l=r.shape.length,u=o.shape.length,h=i?r.shape[l-2]:r.shape[l-1],d=c?o.shape[u-1]:o.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],f=c?o.shape[u-2]:o.shape[u-1],m=r.shape.slice(0,-2),g=o.shape.slice(0,-2),y=s.D5U.sizeFromShape(m),b=s.D5U.sizeFromShape(g),x=s.Jyw.assertAndGetBroadcastShape(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([p,f]);s.D5U.assert(h===d,(()=>"Error in matMul: inner shapes (".concat(h,") and (")+"".concat(d,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(o.shape," and transposeA=").concat(i)+" and transposeB=".concat(c," must match.")));const v=c?[b,f,d]:[b,d,f],w=nh({inputs:{x:r},backend:n,attrs:{shape:i?[y,h,p]:[y,p,h]}}),k=nh({inputs:{x:o},backend:n,attrs:{shape:v}}),I=i?w.shape[1]:w.shape[2],S=i?w.shape[2]:w.shape[1],N=c?k.shape[1]:k.shape[2],T=Math.max(y,b),C=n.data.get(w.dataId).values,E=n.data.get(k.dataId).values,_=s.D5U.computeStrides(w.shape),A=s.D5U.computeStrides(k.shape),[D,R,O]=i?[_[0],1,_[1]]:[_[0],_[1],1],[F,M,B]=c?[1,A[1],A[0]]:[A[1],1,A[0]],L=S*N,z=(0,s.f3b)([T,S,N],w.dtype),U=z.values,P=n.blockSize;for(let s=0;s<T;s++){const t=s%y,e=s%b;for(let n=0;n<S;n+=P){const a=Math.min(n+P,S);for(let r=0;r<N;r+=P){const o=Math.min(r+P,N);for(let i=0;i<I;i+=P){const c=Math.min(i+P,I);for(let l=n;l<a;l++)for(let n=r;n<o;n++){let a=0;for(let s=i;s<c;s++){a+=C[t*D+l*R+s*O]*E[s*F+n*M+e*B]}U[s*L+(l*N+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,z.dtype,z.values)}const rh={kernelName:s.XLW,backendName:"cpu",kernelFunc:sh};const oh={kernelName:s.usg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:s,b:r,bias:o,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;let d,p,f;const m=[];d=sh({inputs:{a:s,b:r},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(p=th({inputs:{a:d,b:o},backend:n}),m.push(d),d=p),u&&(f=Vu(n,d,u,i,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function ih(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const ch={kernelName:s.SYM,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;bu(e,"abs");let a=new Float32Array(s.D5U.sizeFromShape(e.shape));return a=ih(n.data.get(e.dataId).values),n.makeOutput(a,e.shape,e.dtype)}},lh=ku(s.VGw,(t=>Math.acos(t))),uh={kernelName:s.VGw,backendName:"cpu",kernelFunc:lh},hh=ku(s.SpW,(t=>Math.acosh(t))),dh={kernelName:s.SpW,backendName:"cpu",kernelFunc:hh};const ph={kernelName:s.Xze,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,a=e;bu(e,"addN");const r=a.map((t=>n.data.get(t.dataId).values)),o=(0,s.f3b)(a[0].shape,a[0].dtype),i=o.values;for(let s=0;s<a.length;s++){const t=r[s];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function fh(t,e,n,a,r){const o=e.length,i=s.D5U.sizeFromShape(e),c=s.D5U.computeStrides(e),l=s.D5U.computeStrides(r),u=s.D5U.getTypedArrayFromDType(n,s.D5U.sizeFromShape(r));for(let h=0;h<i;++h){const e=s.D5U.indexToLoc(h,o,c),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[a[t]];u[s.D5U.locToIndex(n,o,l)]=t[h]}return u}function mh(t){const{inputs:e,attrs:n,backend:a}=t,{x:s}=e,{perm:r}=n;bu(s,"transpose");const o=s.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=s.shape[r[l]];const c=fh(a.data.get(s.dataId).values,s.shape,s.dtype,r,i);return{dataId:a.write(c,i,s.dtype),shape:i,dtype:s.dtype}}const gh={kernelName:s.G3Y,backendName:"cpu",kernelFunc:mh};const yh={kernelName:s.oT6,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a;bu(r,"all");const c=s.D5U.parseAxisParam(o,r.shape);let l=c;const u=s.backend_util.getAxesPermutation(l,r.shape.length);let h=r;null!=u&&(h=mh({inputs:{x:r},backend:n,attrs:{perm:u}}),l=s.backend_util.getInnerMostAxes(l.length,r.shape.length)),s.backend_util.assertAxesAreInnerMostDims("all",l,h.shape.length);const[d,p]=s.backend_util.computeOutAndReduceShapes(h.shape,l),f=s.D5U.sizeFromShape(p),m=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(d),h.dtype),g=n.data.get(h.dataId).values;for(let s=0;s<m.length;++s){const t=s*f;let e=g[t];for(let n=0;n<f;++n){const a=g[t+n];e=e&&a}m[s]=e}null!=u&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(d,h.dtype,m);if(i){const t=nh({inputs:{x:y},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(d,c)}});return n.disposeIntermediateTensorInfo(y),t}return y}};const bh={kernelName:s.IKK,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a;bu(r,"any");const c=s.D5U.parseAxisParam(o,r.shape);let l=c;const u=s.backend_util.getAxesPermutation(l,r.shape.length);let h=r;null!=u&&(h=mh({inputs:{x:r},backend:n,attrs:{perm:u}}),l=s.backend_util.getInnerMostAxes(l.length,r.shape.length)),s.backend_util.assertAxesAreInnerMostDims("any",l,h.shape.length);const[d,p]=s.backend_util.computeOutAndReduceShapes(h.shape,l),f=s.D5U.sizeFromShape(p),m=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(d),h.dtype),g=n.data.get(h.dataId).values;for(let s=0;s<m.length;++s){const t=s*f;let e=g[t];for(let n=0;n<f;++n){const a=g[t+n];e=e||a}m[s]=e}null!=u&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(d,h.dtype,m);if(i){const t=nh({inputs:{x:y},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(d,c)}});return n.disposeIntermediateTensorInfo(y),t}return y}};const xh={kernelName:s.sJF,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o}=a;bu(r,"argMax");let i=s.D5U.parseAxisParam(o,r.shape);const c=s.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=mh({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=s.backend_util.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],s.backend_util.assertAxesAreInnerMostDims("argMax",i,l.shape.length);const[h,d]=s.backend_util.computeOutAndReduceShapes(l.shape,i),p=s.D5U.sizeFromShape(h),f=s.D5U.makeZerosTypedArray(p,"int32"),m=s.D5U.sizeFromShape(d),g=n.data.get(l.dataId).values;for(let s=0;s<f.length;++s){const t=s*m;let e=g[t],n=0;for(let a=0;a<m;++a){const s=g[t+a];s>e&&(e=s,n=a)}f[s]=n}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(h,"int32",f)}};const vh={kernelName:s.aJk,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o}=a;bu(r,"argMin");let i=s.D5U.parseAxisParam(o,r.shape);const c=s.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=mh({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=s.backend_util.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],s.backend_util.assertAxesAreInnerMostDims("argMin",i,l.shape.length);const[h,d]=s.backend_util.computeOutAndReduceShapes(l.shape,i),p=s.D5U.sizeFromShape(h),f=s.D5U.makeZerosTypedArray(p,"int32"),m=s.D5U.sizeFromShape(d),g=n.data.get(l.dataId).values;for(let s=0;s<f.length;++s){const t=s*m;let e=g[t],n=0;for(let a=0;a<m;++a){const s=g[t+a];s<e&&(e=s,n=a)}f[s]=n}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(h,"int32",f)}},wh=ku(s.M2y,(t=>Math.asin(t))),kh={kernelName:s.M2y,backendName:"cpu",kernelFunc:wh},Ih=ku(s.qw7,(t=>Math.asinh(t))),Sh={kernelName:s.qw7,backendName:"cpu",kernelFunc:Ih},Nh=ku(s.jMg,(t=>Math.atan(t))),Th={kernelName:s.jMg,backendName:"cpu",kernelFunc:Nh},Ch=Au(((t,e)=>Math.atan2(t,e))),Eh=Yu(s.QCc,Ch),_h={kernelName:s.QCc,backendName:"cpu",kernelFunc:Eh},Ah=ku(s.Oyi,(t=>Math.atanh(t))),Dh={kernelName:s.Oyi,backendName:"cpu",kernelFunc:Ah};function Rh(t,e,n,a,r,o){const i=r.strideHeight,c=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,s.f3b)(r.outShape,n),y=g.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let s=0;s<r.batchSize;++s){const e=s*b,n=s*a[0];for(let s=0;s<r.inChannels;++s)for(let g=0;g<r.outHeight;++g){const b=g*i-p,w=Math.max(0,b),k=Math.min(r.inHeight,h+b),I=e+g*x;for(let e=0;e<r.outWidth;++e){const i=e*c-f,h=Math.max(0,i),p=Math.min(r.inWidth,d+i);let g=m,b=0,x=0;for(let e=w;e<k;e+=l){const r=n+e*a[1];for(let e=h;e<p;e+=u){const n=t[r+e*a[2]+s];"max"===o&&n>g?g=n:"avg"===o&&(b+=n,x++)}if(isNaN(g))break}y[I+e*v+s]="avg"===o?b/x:g}}}return g}function Oh(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=(0,s.f3b)(a.outShape,"int32"),c=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterHeight,p=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,g=(0,s.f3b)(e,n,t);for(let s=0;s<a.batchSize;++s)for(let t=0;t<a.inChannels;++t)for(let e=0;e<a.outHeight;++e){const n=e*c-f;let y=n;for(;y<0;)y+=u;const b=Math.min(a.inHeight,d+n);for(let c=0;c<a.outWidth;++c){const d=c*l-m;let f=d;for(;f<0;)f+=h;const x=Math.min(a.inWidth,p+d);let v=Number.NEGATIVE_INFINITY,w=-1;for(let e=y;e<b;e+=u){const i=e-n;for(let n=f;n<x;n+=h){const c=n-d,l=g.get(s,e,n,t);l>v&&(v=l,w=r?o?((s*a.inHeight+e)*a.inWidth+n)*a.inChannels+t:(e*a.inWidth+n)*a.inChannels+t:i*p+c)}}i.set(w,s,e,c,t)}}return i}function Fh(t,e,n,a,r,o){const i=r.strideDepth,c=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,h=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterDepth,f=r.effectiveFilterHeight,m=r.effectiveFilterWidth,g=r.padInfo.front,y=r.padInfo.top,b=r.padInfo.left,x="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=(0,s.f3b)(r.outShape,n),w=v.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],N=r.outShape[4];for(let s=0;s<r.batchSize;++s){const e=s*k,n=s*a[0];for(let s=0;s<r.inChannels;++s)for(let v=0;v<r.outDepth;++v){const k=v*i-g;let T=k;for(;T<0;)T+=u;const C=Math.min(r.inDepth,p+k),E=e+v*I;for(let e=0;e<r.outHeight;++e){const i=e*c-y;let p=i;for(;p<0;)p+=h;const g=Math.min(r.inHeight,f+i),v=E+e*S;for(let e=0;e<r.outWidth;++e){const i=e*l-b;let c=i;for(;c<0;)c+=d;const f=Math.min(r.inWidth,m+i),y=v+e*N;let k=x,I=0,S=0;for(let e=T;e<C;e+=u){const r=n+e*a[1];for(let e=p;e<g;e+=h){const n=r+e*a[2];for(let e=c;e<f;e+=d){const r=t[n+e*a[3]+s];if("max"===o&&r>k?k=r:"avg"===o&&(I+=r,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[y+s]="avg"===o?I/Math.max(S,1):k}}}}return v}const Mh={kernelName:s.JhU,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;bu(r,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;s.D5U.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=s.backend_util.computePool2DInfo(r.shape,o,i,1,c,l);let h;if(1===u.filterWidth&&1===u.filterHeight&&s.D5U.arraysEqual(u.inShape,u.outShape))h=Tu({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=s.D5U.computeStrides(r.shape),a=Rh(t,r.shape,r.dtype,e,u,"avg");h=n.makeTensorInfo(u.outShape,r.dtype,a.values)}return h}};const Bh={kernelName:s._k9,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=a;bu(r,"avgPool3d");const h=s.backend_util.computePool3DInfo(r.shape,o,i,1,c,l,u),d=Fh(n.data.get(r.dataId).values,r.shape,r.dtype,s.D5U.computeStrides(r.shape),h,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};const Lh={kernelName:s.IMb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:o}=e,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a;bu([r,o],"avgPool3DGrad");const h=s.backend_util.computePool3DInfo(o.shape,i,c,1,l,u),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=h.dilationDepth,x=h.dilationHeight,v=h.dilationWidth,w=h.effectiveFilterDepth,k=h.effectiveFilterHeight,I=h.effectiveFilterWidth,S=w-1-h.padInfo.front,N=I-1-h.padInfo.left,T=k-1-h.padInfo.top,C=(0,s.f3b)(o.shape,"float32"),E=1/(m*g*y),_=n.bufferSync(r);for(let s=0;s<h.batchSize;++s)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inDepth;++e)for(let n=0;n<h.inHeight;++n)for(let a=0;a<h.inWidth;++a){const r=e-S,o=n-T,i=a-N;let c=0;for(let e=0;e<w;e+=b){const n=(r+e)/d;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let e=0;e<k;e+=x){const a=(o+e)/p;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let e=0;e<I;e+=v){const r=(i+e)/f;if(r<0||r>=h.outWidth||Math.floor(r)!==r)continue;c+=_.get(s,n,a,r,t)}}}C.set(c*E,s,e,n,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const zh={kernelName:s.ROF,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:o}=e,i=o;bu([r,o],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=a,h=s.backend_util.computePool2DInfo(i.shape,c,l,1,u),d=h.strideHeight,p=h.strideWidth,f=h.filterHeight,m=h.filterWidth,g=h.dilationHeight,y=h.dilationWidth,b=h.effectiveFilterHeight,x=h.effectiveFilterWidth,v=x-1-h.padInfo.left,w=b-1-h.padInfo.top,k=(0,s.f3b)(i.shape,"float32"),I=1/(f*m),S=n.data.get(r.dataId).values,N=(0,s.f3b)(r.shape,"float32",S);for(let s=0;s<h.batchSize;++s)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inHeight;++e)for(let n=0;n<h.inWidth;++n){const a=e-w,r=n-v;let o=0;for(let e=0;e<b;e+=g){const n=(a+e)/d;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let e=0;e<x;e+=y){const a=(r+e)/p;if(a<0||a>=h.outWidth||Math.floor(a)!==a)continue;o+=N.get(s,n,a,t)}}k.set(o*I,s,e,n,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const Uh={kernelName:s.sHE,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,scale:o,offset:i,mean:c,variance:l}=e;s.D5U.assert(c.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.D5U.assert(null==i||c.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.D5U.assert(null==o||c.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),bu([r,c,l,o,i],"batchNorm");let{varianceEpsilon:u}=a;null==u&&(u=.001);const h=n.data.get(r.dataId).values,d=n.data.get(c.dataId).values,p=n.data.get(l.dataId).values,f=o?n.data.get(o.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=m.length,b=f.length,x=p.length,v=d.length;let w=0,k=0,I=0,S=0;for(let s=0;s<h.length;++s)g[s]=m[w++]+(h[s]-d[k++])*f[I++]/Math.sqrt(p[S++]+u),w>=y&&(w=0),k>=v&&(k=0),I>=b&&(I=0),S>=x&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,g)}};function Ph(t,e,n,a,r){const o=s.kuN.isSliceContinous(a,e,n),i=s.D5U.sizeFromShape(n),c=s.D5U.computeStrides(a);if(o){const n=s.kuN.computeFlatOffset(e,c);return"string"===r?t.slice(n,n+i):t.subarray(n,n+i)}const l="string"===r?s.backend_util.fromUint8ToStringArray(t):t,u=(0,s.f3b)(a,r,l),h=(0,s.f3b)(n,r);for(let s=0;s<h.size;++s){const t=h.indexToLoc(s),n=t.map(((t,n)=>t+e[n]));h.set(u.get(...n),...t)}return"string"===r?s.backend_util.fromStringArrayToUint8(h.values):h.values}function Vh(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:o,size:i}=a;bu(r,"slice");const[c,l]=s.kuN.parseSliceParams(r,o,i);s.kuN.assertParamsValid(r,c,l);const u=Ph(n.data.get(r.dataId).values,c,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const Wh={kernelName:s.p2w,backendName:"cpu",kernelFunc:Vh};const Gh={kernelName:s.zws,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:o,crops:i}=a;bu([r],"batchToSpaceND");const c=o.reduce(((t,e)=>t*e)),l=s.backend_util.getReshaped(r.shape,o,c),u=s.backend_util.getPermuted(l.length,o.length),h=s.backend_util.getReshapedPermuted(r.shape,o,c),d=s.backend_util.getSliceBeginCoords(i,o.length),p=s.backend_util.getSliceSize(h,i,o.length),f=nh({inputs:{x:r},backend:n,attrs:{shape:l}}),m=mh({inputs:{x:f},backend:n,attrs:{perm:u}}),g=nh({inputs:{x:m},backend:n,attrs:{shape:h}}),y=Vh({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};function Hh(t,e,n,a,r){const o=s.D5U.sizeFromShape(a),i=s.D5U.makeZerosTypedArray(r,n);for(let s=0;s<t.length;s++){const n=t[s];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(i[n]+=o>0?e[s]:1)}return i}function jh(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=t.shape[0],o=t.shape[1],i=(0,s.f3b)([r,n],e.dtype);for(let s=0;s<r;s++)for(let r=0;r<o;r++){const o=t.get(s,r);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(a?i.set(1,s,o):e.size>0?i.set(i.get(s,o)+e.get(s,r),s,o):i.set(i.get(s,o)+1,s,o))}return i}const Xh={kernelName:s.zvY,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,weights:r}=e,{size:o}=a,i=Hh(n.data.get(s.dataId).values,n.data.get(r.dataId).values,r.dtype,r.shape,o);return n.makeTensorInfo([o],r.dtype,i)}},qh=Au(((t,e)=>t&e)),Kh=Yu(s.hCO,qh),Zh={kernelName:s.hCO,backendName:"cpu",kernelFunc:Kh};const Yh={kernelName:s.eEB,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:a,s1:r}=e,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=s.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},Qh=wu((t=>Math.ceil(t))),Jh=Iu(s.gJX,Qh),$h={kernelName:s.gJX,backendName:"cpu",kernelFunc:Jh},td=ku(s.xnO,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),ed={kernelName:s.xnO,backendName:"cpu",kernelFunc:td},nd={kernelName:s.yj2,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,a=new Float32Array(s.D5U.sizeFromShape(e.shape)),r=n.data.get(e.dataId),o=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,c=n.data.get(o.dataId).values,l=n.data.get(i.dataId).values;for(let s=0;s<c.length;s++){const t=c[s],e=l[s];a[s]=Math.hypot(t,e)}return n.makeOutput(a,e.shape,"float32")}};function ad(t,e,n,a){const r=s.D5U.getArrayFromDType(n,s.D5U.sizeFromShape(e));if(a&&"string"!==n){let e=0;t.forEach((t=>{const n=s.D5U.sizeFromShape(t.shape);r.set(t.vals,e),e+=n}))}else{let a=0;t.forEach((t=>{const o="string"===n?s.backend_util.fromUint8ToStringArray(t.vals):t.vals;let i=0;for(let n=0;n<t.shape[0];++n){const s=n*e[1]+a;for(let e=0;e<t.shape[1];++e)r[s+e]=o[i++]}a+=t.shape[1]}))}return r}function sd(t){const{inputs:e,backend:n}=t,{input:a}=e,s=n.data.get(a.dataId).complexTensorInfos.imag,r=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,r)}const rd={kernelName:s.J_u,backendName:"cpu",kernelFunc:sd};function od(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a,o=s.D5U.parseAxisParam(r,e[0].shape)[0],i=e.map((t=>t.shape));s.backend_util.assertParamsConsistent(i,o);let c=s.backend_util.computeOutShape(e.map((t=>t.shape)),o);if(0===s.D5U.sizeFromShape(c))return n.makeTensorInfo(c,e[0].dtype,[]);const l=e.filter((t=>s.D5U.sizeFromShape(t.shape)>0));if(1===l.length)return Tu({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const t=l.map((t=>ju({inputs:{input:t},backend:n}))),e=l.map((t=>sd({inputs:{input:t},backend:n}))),a=od({inputs:t,backend:n,attrs:{axis:o}}),s=od({inputs:e,backend:n,attrs:{axis:o}}),r=Wu({inputs:{real:a,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),r}const u=l.map((t=>{const e=s.D5U.sizeFromShape(t.shape.slice(o));return nh({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),h=u.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));c=s.backend_util.computeOutShape(u.map((t=>t.shape)),1);const d=1===u[0].shape[0],p=ad(h,c,e[0].dtype,d),f=s.backend_util.computeOutShape(l.map((t=>t.shape)),o),m=n.makeTensorInfo(f,e[0].dtype,p);return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),m}const id={kernelName:s.Eh3,backendName:"cpu",kernelFunc:od};function cd(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o}=e,{strides:i,pad:c,dataFormat:l,dilations:u,dimRoundingMode:h}=a;bu([r,o],"conv2d");const d=s.backend_util.convertConv2DDataFormat(l),p=s.backend_util.computeConv2DInfo(r.shape,o.shape,i,u,c,h,!1,d),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,y=p.dilationWidth,b=p.padInfo.left,x=p.padInfo.top,v="channelsLast"===p.dataFormat,w=new s.YDk(p.outShape,r.dtype),k=s.D5U.computeStrides(r.shape),I=s.D5U.computeStrides(o.shape),S=k[0],N=v?k[1]:k[2],T=v?k[2]:1,C=v?1:k[1],E=w.strides[0],_=v?w.strides[1]:w.strides[2],A=v?w.strides[2]:1,D=v?1:w.strides[1],R=n.data.get(r.dataId).values,O=n.data.get(o.dataId).values,F=w.values;for(let s=0;s<p.batchSize;++s){const t=s*S,e=s*E;for(let n=0;n<p.outHeight;++n){const a=e+n*_,s=n*p.strideHeight-x;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=p.inHeight)continue;const r=e*I[0],o=t+n*N;for(let t=0;t<p.outWidth;++t){const e=a+t*A,n=t*p.strideWidth-b;for(let t=0;t<m;++t){const a=n+t*y;if(a<0||a>=p.inWidth)continue;const s=o+a*T;let i=r+t*I[1];for(let t=0;t<p.inChannels;++t){const n=R[s+t*C];for(let t=0;t<p.outChannels;++t)F[e+t*D]+=n*O[i+t];i+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const ld={kernelName:s.mhS,backendName:"cpu",kernelFunc:cd};const ud={kernelName:s.wUP,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:o}=e,{strides:i,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:h}=a;bu([r,o],"conv2dBackpropFilter");const d=s.backend_util.convertConv2DDataFormat(l),p=s.backend_util.computeConv2DInfo(r.shape,h,i,1,c,u,!1,d),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=p,b="channelsLast"===p.dataFormat,x=new s.YDk(p.filterShape,"float32"),v=p.padInfo.left,w=p.padInfo.top,k=n.data.get(r.dataId).values,I=n.data.get(o.dataId).values,S=new s.YDk(r.shape,r.dtype,k),N=new s.YDk(o.shape,o.dtype,I);for(let s=0;s<g;++s){const t=Math.max(0,Math.ceil((w-s)/f)),e=Math.min(p.outHeight,(p.inHeight+w-s)/f);for(let n=0;n<y;++n){const a=Math.max(0,Math.ceil((v-n)/m)),r=Math.min(p.outWidth,(p.inWidth+v-n)/m);for(let o=0;o<p.inChannels;++o)for(let i=0;i<p.outChannels;++i){let c=0;for(let l=0;l<p.batchSize;++l)for(let u=t;u<e;++u){const t=s+u*f-w;for(let e=a;e<r;++e){const a=n+e*m-v;c+=b?S.get(l,t,a,o)*N.get(l,u,e,i):S.get(l,o,t,a)*N.get(l,i,u,e)}}x.set(c,s,n,o,i)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const hd={kernelName:s.wm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:o}=e,{inputShape:i,strides:c,pad:l,dataFormat:u,dimRoundingMode:h}=a;bu([r,o],"conv2dBackpropInput");const d=s.D5U.computeStrides(o.shape),p=s.D5U.computeStrides(r.shape);let f=s.backend_util.convertConv2DDataFormat(u);const m=s.backend_util.computeConv2DInfo(i,o.shape,c,1,l,h,!1,f),g=new s.YDk(m.inShape,"float32"),y=g.values,b=n.data.get(r.dataId).values,x=n.data.get(o.dataId).values,[v,w,k]=d,{batchSize:I,filterHeight:S,filterWidth:N,inChannels:T,inHeight:C,inWidth:E,outChannels:_,outHeight:A,outWidth:D,strideHeight:R,strideWidth:O}=m;f=m.dataFormat;const F=S-1-m.padInfo.top,M=N-1-m.padInfo.left,B="channelsLast"===f,L=g.strides[0],z=B?g.strides[1]:g.strides[2],U=B?g.strides[2]:1,P=B?1:g.strides[1],V=p[0],W=B?p[1]:p[2],G=B?p[2]:1,H=B?1:p[1];for(let s=0;s<I;++s)for(let t=0;t<T;++t)for(let e=0;e<C;++e){const n=e-F,a=Math.max(0,Math.ceil(n/R)),r=Math.min(A,(S+n)/R);for(let o=0;o<E;++o){const i=o-M,c=Math.max(0,Math.ceil(i/O)),l=Math.min(D,(N+i)/O);let u=0;for(let e=a;e<r;++e){const a=e*R-n;for(let n=c;n<l;++n){const r=V*s+W*e+G*n,o=v*(S-1-a)+w*(N-1-(n*O-i))+k*t;for(let t=0;t<_;++t){u+=b[r+H*t]*x[o+t]}}}y[L*s+z*e+U*o+P*t]=u}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const dd={kernelName:s.x12,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o}=e,{strides:i,pad:c,dilations:l}=a;bu([r,o],"conv3d");const u=s.backend_util.computeConv3DInfo(r.shape,o.shape,i,l,c),{filterDepth:h,filterHeight:d,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=u,b=y.front,x=y.left,v=y.top,w=new s.YDk(u.outShape,r.dtype),k=n.data.get(r.dataId).values,I=n.data.get(o.dataId).values,S=w.values,N=s.D5U.computeStrides(r.shape),T=s.D5U.computeStrides(o.shape);for(let s=0;s<u.batchSize;++s){const t=s*N[0],e=s*w.strides[0];for(let n=0;n<u.outDepth;++n){const a=e+n*w.strides[1],s=n*u.strideDepth-b;for(let e=0;e<h;++e){const n=s+e*f;if(n<0||n>=u.inDepth)continue;const r=e*T[0],o=t+n*N[1];for(let t=0;t<u.outHeight;++t){const e=a+t*w.strides[2],n=t*u.strideHeight-v;for(let t=0;t<d;++t){const a=n+t*m;if(a<0||a>=u.inHeight)continue;const s=r+t*T[1],i=o+a*N[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,a=t*u.strideWidth-x;for(let t=0;t<p;++t){const e=a+t*g;if(e<0||e>=u.inWidth)continue;const r=s+t*T[2],o=i+e*u.inChannels;let c=r;for(let t=0;t<u.inChannels;++t){const e=k[o+t];for(let t=0;t<u.outChannels;++t)S[n+t]+=e*I[c+t];c+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const pd={kernelName:s.o2y,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:o}=e,{strides:i,pad:c,filterShape:l}=a;bu([r,o],"conv3dBackpropFilterV2");const u=s.D5U.computeStrides(r.shape),h=s.D5U.computeStrides(o.shape),d=s.backend_util.computeConv3DInfo(r.shape,l,i,1,c),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.filterDepth,y=d.filterHeight,b=d.filterWidth,x=new s.YDk(d.filterShape,"float32"),v=x.values,[w,k,I,S]=x.strides,N=n.data.get(o.dataId).values,[T,C,E,_]=h,A=n.data.get(r.dataId).values,[D,R,O,F]=u,M=d.padInfo.front,B=d.padInfo.left,L=d.padInfo.top;for(let s=0;s<g;++s){const t=Math.max(0,Math.ceil((M-s)/p)),e=Math.min(d.outDepth,(d.inDepth+M-s)/p),n=s*w;for(let a=0;a<y;++a){const r=Math.max(0,Math.ceil((L-a)/f)),o=Math.min(d.outHeight,(d.inHeight+L-a)/f),i=a*k+n;for(let n=0;n<b;++n){const c=Math.max(0,Math.ceil((B-n)/m)),l=Math.min(d.outWidth,(d.inWidth+B-n)/m),u=n*I+i;for(let i=0;i<d.inChannels;++i){const h=i*S+u;for(let u=0;u<d.outChannels;++u){let g=0;for(let h=0;h<d.batchSize;++h){const d=h*D,y=h*T;for(let h=t;h<e;++h){const t=(s+h*p-M)*R+d,e=h*C+y;for(let s=r;s<o;++s){const r=(a+s*f-L)*O+t,o=s*E+e;for(let t=c;t<l;++t){const e=t*_+o;g+=A[(n+t*m-B)*F+r+i]*N[e+u]}}}}v[h+u]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const fd={kernelName:s.ik2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:o}=e,{pad:i,strides:c,inputShape:l}=a;bu([r],"conv3dBackpropInputV2");const u=s.D5U.computeStrides(r.shape),h=s.D5U.computeStrides(o.shape),d=s.backend_util.computeConv3DInfo(l,o.shape,c,1,i),p=new s.YDk(d.inShape,"float32"),f=p.values,[m,g,y,b]=p.strides,x=n.data.get(r.dataId).values,[v,w,k,I]=u,S=n.data.get(o.dataId).values,[N,T,C,E]=h,{batchSize:_,filterDepth:A,filterHeight:D,filterWidth:R,inChannels:O,inDepth:F,inHeight:M,inWidth:B,outChannels:L,outDepth:z,outHeight:U,outWidth:P,strideDepth:V,strideHeight:W,strideWidth:G}=d,H=A-1-d.padInfo.front,j=D-1-d.padInfo.top,X=R-1-d.padInfo.left;for(let s=0;s<_;++s)for(let t=0;t<O;++t)for(let e=0;e<F;++e){const n=e-H,a=Math.max(0,Math.ceil(n/V)),r=Math.min(z,(A+n)/V);for(let o=0;o<M;++o){const i=o-j,c=Math.max(0,Math.ceil(i/W)),l=Math.min(U,(D+i)/W);for(let u=0;u<B;++u){const h=u-X,d=Math.max(0,Math.ceil(h/G)),p=Math.min(P,(R+h)/G);let _=0;for(let e=a;e<r;++e){const a=e*V-n;for(let n=c;n<l;++n){const r=n*W-i;for(let o=d;o<p;++o){const i=v*s+w*e+k*n+I*o,c=N*(A-1-a)+T*(D-1-r)+C*(R-1-(o*G-h))+E*t;for(let t=0;t<L;++t){_+=x[i+t]*S[c+t]}}}}f[m*s+g*e+y*o+b*u+t]=_}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},md=ku(s.mc4,(t=>Math.cos(t))),gd={kernelName:s.mc4,backendName:"cpu",kernelFunc:md},yd=ku(s.TR1,(t=>Math.cosh(t))),bd={kernelName:s.TR1,backendName:"cpu",kernelFunc:yd};const xd={kernelName:s.VcC,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:r,boxes:o,boxInd:i}=e,{cropSize:c,method:l,extrapolationValue:u}=a,[h,d,p,f]=r.shape,m=o.shape[0],[g,y]=c,b=(0,s.f3b)([m,g,y,f],"float32"),x=n.data.get(o.dataId).values,v=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,k=s.D5U.computeStrides(r.shape),I=s.D5U.computeStrides(b.shape);for(let s=0;s<m;s++){const t=4*s,e=x[t],n=x[t+1],a=x[t+2],r=x[t+3],o=v[s];if(o>=h)continue;const i=g>1?(a-e)*(d-1)/(g-1):0,c=y>1?(r-n)*(p-1)/(y-1):0;for(let h=0;h<g;h++){const t=g>1?e*(d-1)+h*i:.5*(e+a)*(d-1);if(t<0||t>d-1)for(let e=0;e<y;e++)for(let t=0;t<f;t++){const n=t+e*I[2]+h*I[1]+s*I[0];b.values[n]=u}else if("bilinear"===l){const e=Math.floor(t),a=Math.ceil(t),i=t-e;for(let t=0;t<y;t++){const l=y>1?n*(p-1)+t*c:.5*(n+r)*(p-1);if(l<0||l>p-1){for(let e=0;e<f;e++){const n=e+t*I[2]+h*I[1]+s*I[0];b.values[n]=u}continue}const d=Math.floor(l),m=Math.ceil(l),g=l-d;for(let n=0;n<f;n++){let r=n+d*k[2]+e*k[1]+o*k[0];const c=w[r];r=n+m*k[2]+e*k[1]+o*k[0];const l=w[r];r=n+d*k[2]+a*k[1]+o*k[0];const u=w[r];r=n+m*k[2]+a*k[1]+o*k[0];const p=c+(l-c)*g,f=u+(w[r]-u)*g;r=n+t*I[2]+h*I[1]+s*I[0],b.values[r]=p+(f-p)*i}}}else for(let e=0;e<y;++e){const a=y>1?n*(p-1)+e*c:.5*(n+r)*(p-1);if(a<0||a>p-1){for(let t=0;t<f;t++){const n=t+e*I[2]+h*I[1]+s*I[0];b.values[n]=u}continue}const i=Math.round(a),l=Math.round(t);for(let t=0;t<f;t++){const n=t+i*k[2]+l*k[1]+o*k[0],a=t+e*I[2]+h*I[1]+s*I[0];b.values[a]=w[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const vd={kernelName:s.Byc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,exclusive:i,reverse:c}=a;bu(r,"cumprod");const l=s.backend_util.getAxesPermutation([o],r.shape.length);let u=r;null!=l&&(u=mh({inputs:{x:r},backend:n,attrs:{perm:l}}));const h=s.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(h!==u.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(u.shape.length-1," but got axis=").concat(h));const d=(0,s.x8V)(u.dtype,"int32"),p=s.D5U.makeOnesTypedArray(s.D5U.sizeFromShape(u.shape),d),f=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],g=c?(t,e)=>t+m-e-1:(t,e)=>t+e;for(let s=0;s<f.length;s+=m)for(let t=0;t<m;t++){const e=g(s,t);if(0===t)p[e]=i?1:f[e];else{const n=g(s,t-1);p[e]=i?f[n]*p[n]:f[e]*p[n]}}const y=n.makeTensorInfo(u.shape,d,p);if(null!=l){const t=mh({inputs:{x:y},backend:n,attrs:{perm:s.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),t}return y}};const wd={kernelName:s.iHb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,exclusive:i,reverse:c}=a;bu(r,"cumsum");const l=s.backend_util.getAxesPermutation([o],r.shape.length);let u=r;null!=l&&(u=mh({inputs:{x:r},backend:n,attrs:{perm:l}}));const h=s.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(h!==u.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(u.shape.length-1," but got axis=").concat(h));const d=(0,s.x8V)(u.dtype,"int32"),p=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(u.shape),d),f=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],g=c?(t,e)=>t+m-e-1:(t,e)=>t+e;for(let s=0;s<f.length;s+=m)for(let t=0;t<m;t++){const e=g(s,t);if(0===t)p[e]=i?0:f[e];else{const n=g(s,t-1);p[e]=i?f[n]+p[n]:f[e]+p[n]}}const y=n.makeTensorInfo(u.shape,d,p);if(null!=l){const t=mh({inputs:{x:y},backend:n,attrs:{perm:s.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),t}return y}};const kd={kernelName:s.QRR,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,weights:r}=e,{size:o,binaryOutput:i}=a;if(1===s.shape.length){const t=Hh(n.data.get(s.dataId).values,n.data.get(r.dataId).values,r.dtype,r.shape,o);return n.makeTensorInfo([o],r.dtype,t)}if(2===s.shape.length){const t=jh(n.bufferSync(s),n.bufferSync(r),o,i);return n.makeTensorInfo(t.shape,r.dtype,t.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(s.shape.length,"."))}};const Id={kernelName:s.T0n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockSize:o,dataFormat:i}=a;s.D5U.assert("NHWC"===i,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(i)));const c=r.shape[0],l=r.shape[1],u=r.shape[2],h=r.shape[3],d=l*o,p=u*o,f=h/(o*o),m=n.data.get(r.dataId).values,g=new Float32Array(c*d*p*f);let y=0;for(let s=0;s<c;++s)for(let t=0;t<d;++t){const e=Math.floor(t/o),n=t%o;for(let t=0;t<p;++t){const a=Math.floor(t/o),r=(n*o+t%o)*f;for(let t=0;t<f;++t){const n=t+r+h*(a+u*(e+l*s));g[y++]=m[n]}}}return n.makeTensorInfo([c,d,p,f],r.dtype,g)}};function Sd(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o}=e,{strides:i,pad:c,dilations:l,dimRoundingMode:u}=a;bu([r,o],"depthwiseConv2DNative");const h=s.D5U.computeStrides(r.shape),d=s.D5U.computeStrides(o.shape);let p=l;null==p&&(p=[1,1]),s.D5U.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,p),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(p,"'")));const f=s.backend_util.computeConv2DInfo(r.shape,o.shape,i,p,c,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,I=new s.YDk(f.outShape,r.dtype),S=n.data.get(r.dataId).values,N=n.data.get(o.dataId).values,T=I.values;for(let s=0;s<f.batchSize;++s){const t=s*h[0],e=s*I.strides[0];for(let n=0;n<f.outHeight;++n){const a=e+n*I.strides[1],s=n*f.strideHeight-w;for(let e=0;e<m;++e){const n=s+e*y;if(n<0||n>=f.inHeight)continue;const r=e*d[0],o=t+n*h[1];for(let t=0;t<f.outWidth;++t){const e=a+t*I.strides[2],n=t*f.strideWidth-v;for(let t=0;t<g;++t){const a=n+t*b;if(a<0||a>=f.inWidth)continue;const s=r+t*d[1],i=o+a*f.inChannels;let c=e,l=s;for(let t=0;t<f.inChannels;++t){const e=S[i+t];for(let t=0;t<k;++t)T[c+t]+=e*N[l+t];c+=k,l+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Nd={kernelName:s.cie,backendName:"cpu",kernelFunc:Sd};const Td={kernelName:s.sL$,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:o}=e,{strides:i,dilations:c,pad:l,dimRoundingMode:u,filterShape:h}=a;bu([r,o],"depthwiseConv2dNativeBackpropFilter");const d=s.backend_util.computeConv2DInfo(r.shape,h,i,c,l,u,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=new s.YDk(d.filterShape,"float32"),b=d.padInfo.left,x=d.padInfo.top,v=d.outChannels/d.inChannels,w=n.data.get(r.dataId).values,k=new s.YDk(r.shape,r.dtype,w),I=n.data.get(o.dataId).values,S=new s.YDk(o.shape,o.dtype,I);for(let s=0;s<m;++s){const t=Math.max(0,Math.ceil((x-s)/p)),e=Math.min(d.outHeight,(d.inHeight+x-s)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((b-n)/f)),r=Math.min(d.outWidth,(d.inWidth+b-n)/f);for(let o=0;o<d.outChannels;++o){const i=Math.trunc(o/v),c=o%v;let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<e;++c){const t=s+c*p-x;for(let e=a;e<r;++e){const a=n+e*f-b;l+=k.get(u,t,a,i)*S.get(u,c,e,o)}}y.set(l,s,n,i,c)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Cd={kernelName:s.y7R,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:o}=e,{strides:i,dilations:c,pad:l,dimRoundingMode:u,inputShape:h}=a;bu([r,o],"depthwiseConv2DNativeBackpropInput");const d=s.D5U.computeStrides(r.shape),p=s.D5U.computeStrides(o.shape),f=s.backend_util.computeConv2DInfo(h,o.shape,i,c,l,u,!0),m=new s.YDk(f.inShape,"float32"),g=m.values,[y,b,x]=m.strides,v=n.data.get(r.dataId).values,[w,k,I]=d,S=n.data.get(o.dataId).values,[N,T,C]=p,{batchSize:E,filterHeight:_,filterWidth:A,inChannels:D,inHeight:R,inWidth:O,outChannels:F,outHeight:M,outWidth:B,strideHeight:L,strideWidth:z}=f,U=_-1-f.padInfo.top,P=A-1-f.padInfo.left,V=F/D;for(let s=0;s<E;++s)for(let t=0;t<D;++t)for(let e=0;e<R;++e){const n=e-U,a=Math.max(0,Math.ceil(n/L)),r=Math.min(M,(_+n)/L);for(let o=0;o<O;++o){const i=o-P,c=Math.max(0,Math.ceil(i/z)),l=Math.min(B,(A+i)/z);let u=0;for(let e=a;e<r;++e){const a=e*L-n;for(let n=c;n<l;++n){const r=w*s+k*e+I*n,o=N*(_-1-a)+T*(A-1-(n*z-i))+C*t;for(let e=0;e<V;++e){u+=v[r+(t*V+e)]*S[o+e]}}}g[y*s+b*e+x*o+t]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Ed={kernelName:s.$w,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,r=s.D5U.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,i=(0,s.f3b)([r,r],a.dtype),c=i.values;for(let s=0;s<o.length;s++)c[s*r+s]=o[s];const l=[...a.shape,...a.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},_d={kernelName:s.p4S,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,filter:o}=e,{strides:i,pad:c,dilations:l}=a,u=n,h=u.data.get(r.dataId).values,d=r.shape.length,p=u.data.get(o.dataId).values,f=o.shape.length,{batchSize:m,inHeight:g,inWidth:y,inChannels:b,outHeight:x,outWidth:v,padInfo:w,strideHeight:k,strideWidth:I,filterHeight:S,filterWidth:N,dilationHeight:T,dilationWidth:C,outShape:E}=s.backend_util.computeDilation2DInfo(r.shape,o.shape,i,c,"NHWC",l),_=s.D5U.sizeFromShape(E),A=E.length,D=s.D5U.getArrayFromDType(r.dtype,_);for(let R=0;R<m;++R)for(let t=0;t<x;++t){const e=t*k-w.top;for(let n=0;n<v;++n){const a=n*I-w.left;for(let i=0;i<b;++i){let c=Number.MIN_SAFE_INTEGER;for(let t=0;t<S;++t){const n=e+t*T;if(n>=0&&n<g)for(let e=0;e<N;++e){const l=a+e*C;if(l>=0&&l<y){const a=s.D5U.locToIndex([R,n,l,i],d,s.D5U.computeStrides(r.shape)),u=s.D5U.locToIndex([t,e,i],f,s.D5U.computeStrides(o.shape)),m=h[a]+p[u];m>c&&(c=m)}}}D[s.D5U.locToIndex([R,t,n,i],A,s.D5U.computeStrides(E))]=c}}}return{dataId:u.write(s.D5U.toTypedArray(D,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},Ad={kernelName:s.Vn9,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,filter:o,dy:i}=e,{strides:c,pad:l,dilations:u}=a,h=n,d=s.D5U.toNestedArray(r.shape,h.data.get(r.dataId).values),p=s.D5U.toNestedArray(o.shape,h.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:T,outShape:C}=s.backend_util.computeDilation2DInfo(r.shape,o.shape,c,l,"NHWC",u);s.D5U.assert(i.rank===C.length,(()=>"Error in ".concat(s.Vn9,", dy ")+"must have the same rank as output ".concat(C.length,", but got ")+"".concat(i.rank)));const E=s.D5U.toNestedArray(C,h.data.get(i.dataId).values),_=s.D5U.makeZerosNestedTypedArray(o.shape,o.dtype);for(let s=0;s<f;++s)for(let t=0;t<b;++t){const e=t*w-v.top;for(let n=0;n<x;++n){const a=n*k-v.left;for(let r=0;r<y;++r){let o=Number.MIN_SAFE_INTEGER,i=0,c=0;for(let t=0;t<I;++t){const n=e+t*N;if(n>=0&&n<m)for(let e=0;e<S;++e){const l=a+e*T;if(l>=0&&l<g){const a=d[s][n][l][r]+p[t][e][r];a>o&&(o=a,i=t,c=e)}}}_[i][c][r]+=E[s][t][n][r]}}}return{dataId:h.write(s.D5U.toTypedArray(_,r.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},Dd={kernelName:s.ekb,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,filter:o,dy:i}=e,{strides:c,pad:l,dilations:u}=a,h=n,d=s.D5U.toNestedArray(r.shape,h.data.get(r.dataId).values),p=s.D5U.toNestedArray(o.shape,h.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:T,outShape:C}=s.backend_util.computeDilation2DInfo(r.shape,o.shape,c,l,"NHWC",u);s.D5U.assert(i.rank===C.length,(()=>"Error in ".concat(s.ekb,", dy ")+"must have the same rank as output ".concat(C.length,", but got ")+"".concat(i.rank)));const E=s.D5U.toNestedArray(C,h.data.get(i.dataId).values),_=s.D5U.makeZerosNestedTypedArray(r.shape,r.dtype);for(let s=0;s<f;++s)for(let t=0;t<b;++t){const e=t*w-v.top;for(let n=0;n<x;++n){const a=n*k-v.left;for(let r=0;r<y;++r){let o=Number.MIN_SAFE_INTEGER,i=e<0?0:e,c=a<0?0:a;for(let t=0;t<I;++t){const n=e+t*N;if(n>=0&&n<m)for(let e=0;e<S;++e){const l=a+e*T;if(l>=0&&l<g){const a=d[s][n][l][r]+p[t][e][r];a>o&&(o=a,i=n,c=l)}}}_[s][i][c][r]+=E[s][t][n][r]}}}return{dataId:h.write(s.D5U.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const Rd={kernelName:s.hGc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:s}=e,{canvas:r,options:o}=a,{contextOptions:i,imageOptions:c}=o||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const h=r.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==h)throw new Error("Could not get the context with ".concat(u," type."));const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let x=0;x<d*p;++x){const t=[0,0,0,255*l];for(let n=0;n<f;n++){const e=m[x*f+n];if("float32"===s.dtype){if(e<0||e>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(e,"."))}else if("int32"===s.dtype&&(e<0||e>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(e,"."));1===f?(t[0]=e*g,t[1]=e*g,t[2]=e*g):t[n]=e*g}const e=4*x;y[e+0]=Math.round(t[0]),y[e+1]=Math.round(t[1]),y[e+2]=Math.round(t[2]),y[e+3]=Math.round(t[3])}r.width=p,r.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),s}},Od=Au(((t,e)=>t*e)),Fd=Qu(((t,e,n,a)=>({real:t*n-e*a,imag:t*a+e*n}))),Md=Yu(s.wYn,Od,Fd),Bd={kernelName:s.wYn,backendName:"cpu",kernelFunc:Md};function Ld(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a;let c;bu(r,"sum"),c="bool"===r.dtype?Ku({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Tu({inputs:{x:r},backend:n});const l=c.shape.length,u=s.D5U.parseAxisParam(o,c.shape),h=s.backend_util.getAxesPermutation(u,l);let d=u,p=c;null!=h&&(p=mh({inputs:{x:c},backend:n,attrs:{perm:h}}),d=s.backend_util.getInnerMostAxes(d.length,l)),s.backend_util.assertAxesAreInnerMostDims("sum",d,p.shape.length);const[f,m]=s.backend_util.computeOutAndReduceShapes(p.shape,d);let g=Hu(n,f,s.backend_util.upcastType(p.dtype,"int32"));const y=s.D5U.sizeFromShape(m),b=n.data.get(g.dataId).values,x=n.data.get(p.dataId).values;for(let s=0;s<b.length;++s){const t=s*y;let e=0;for(let n=0;n<y;++n)e+=x[t+n];b[s]=e}if(i){const t=g;g=nh({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(g.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(c),null!=h&&n.disposeIntermediateTensorInfo(p),g}const zd={kernelName:s.GBy,backendName:"cpu",kernelFunc:Ld};const Ud={kernelName:s.$g6,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{equation:r}=a,o=e,{allDims:i,summedDims:c,idDims:l}=s.backend_util.decodeEinsumEquation(r,o.length);s.backend_util.checkEinsumDimSizes(i.length,l,o);const{path:u,steps:h}=s.backend_util.getEinsumComputePath(c,l),d=h.length;let p=null,f=i.length;const m=[];for(let g=0;g<d;++g){for(const t of h[g]){const{permutationIndices:e,expandDims:a}=s.backend_util.getEinsumPermutation(f,l[t]);let r;s.backend_util.isIdentityPermutation(e)?r=o[t]:(r=mh({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),m.push(r));const i=r.shape.slice();for(let t=0;t<a.length;++t)i.splice(a[t],0,1);s.D5U.arraysEqual(r.shape,i)||(r=nh({inputs:{x:r},backend:n,attrs:{shape:i}}),m.push(r)),null===p?p=r:(p=Md({inputs:{a:r,b:p},backend:n}),m.push(p))}g<d-1&&(u[g]>=0&&(p=Ld({inputs:{x:p},backend:n,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const s of m)s!==p&&n.disposeIntermediateTensorInfo(s);return p}};const Pd={kernelName:s.HEU,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:a,y:r}=e;bu([a,r],"eluGrad");const o=new Float32Array(s.D5U.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values;for(let s=0;s<i.length;++s){const t=i[s];o[s]=t>=0?c[s]:c[s]*(t+1)}return n.makeTensorInfo(r.shape,"float32",o)}},Vd=Au(((t,e)=>t===e?1:0)),Wd=Yu(s.hdR,Vd,null,"bool"),Gd={kernelName:s.hdR,backendName:"cpu",kernelFunc:Wd},Hd=s.backend_util.ERF_P,jd=s.backend_util.ERF_A1,Xd=s.backend_util.ERF_A2,qd=s.backend_util.ERF_A3,Kd=s.backend_util.ERF_A4,Zd=s.backend_util.ERF_A5,Yd=ku(s.Omj,(t=>{const e=Math.sign(t),n=Math.abs(t),a=1/(1+Hd*n);return e*(1-((((Zd*a+Kd)*a+qd)*a+Xd)*a+jd)*a*Math.exp(-n*n))})),Qd={kernelName:s.Omj,backendName:"cpu",kernelFunc:Yd},Jd=wu((t=>Math.exp(t))),$d=Iu(s.NEP,Jd,"float32"),tp={kernelName:s.NEP,backendName:"cpu",kernelFunc:$d};function ep(t){const{inputs:e,backend:n,attrs:a}=t,{input:r}=e,{dim:o}=a,i=r.shape.length,c=r.shape.slice();let l=o;return o<0&&(s.D5U.assert(-(i+1)<=o,(()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]"))),l=i+o+1),c.splice(l,0,1),nh({inputs:{x:r},backend:n,attrs:{shape:c}})}const np={kernelName:s.YFo,backendName:"cpu",kernelFunc:ep},ap=wu((t=>Math.expm1(t))),sp=Iu(s.Y0y,ap),rp={kernelName:s.Y0y,backendName:"cpu",kernelFunc:sp},op=Au(((t,e)=>t/e)),ip=Yu(s.oHH,op),cp={kernelName:s.oHH,backendName:"cpu",kernelFunc:ip},lp=Au(((t,e)=>t-e)),up=Qu(((t,e,n,a)=>({real:t-n,imag:e-a}))),hp=Yu(s.Tr8,lp,up),dp={kernelName:s.Tr8,backendName:"cpu",kernelFunc:hp};function pp(t,e,n){const a=t.shape,r=a[0],o=a[1],i=n.data.get(t.dataId),c=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,o],h=s.D5U.sizeFromShape(u),d=s.D5U.getTypedArrayFromDType("float32",h),p=s.D5U.getTypedArrayFromDType("float32",h);for(let y=0;y<r;y++){const t=Vh({inputs:{x:c},backend:n,attrs:{begin:[y,0],size:[1,o]}}),a=Vh({inputs:{x:l},backend:n,attrs:{begin:[y,0],size:[1,o]}}),r=Wu({inputs:{real:t,imag:a},backend:n}),{real:i,imag:u}=fp(r,e,n),h=s.backend_util.mergeRealAndImagArrays(i,u);for(let e=0;e<o;e++){const t=s.backend_util.getComplexWithIndex(h,e);d[y*o+e]=t.real,p[y*o+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const f=n.makeTensorInfo(u,"float32",d),m=n.makeTensorInfo(u,"float32",p),g=Wu({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function fp(t,e,n){const a=s.D5U.sizeFromShape(t.shape),r=n.data.get(t.dataId),o=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((c=a)&c-1)){const r=mp(o,i,a,e,n),c=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(c,"float32",r.real),e=n.makeTensorInfo(c,"float32",r.imag),o=n.makeTensorInfo([],"float32",s.D5U.createScalarValue(a,"float32")),i=Tu({inputs:{x:o},backend:n}),l=cp.kernelFunc({inputs:{a:t,b:o},backend:n}),u=cp.kernelFunc({inputs:{a:e,b:i},backend:n}),h=n.data.get(l.dataId).values,d=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:d}}return r}{const t=function(t,e,n){const a=new Float32Array(2*e);for(let r=0;r<e;r++){let o=0,i=0;for(let a=0;a<e;a++){const c=s.backend_util.exponent(r*a,e,n),l=s.backend_util.getComplexWithIndex(t,a);o+=l.real*c.real-l.imag*c.imag,i+=l.real*c.imag+l.imag*c.real}n&&(o/=e,i/=e),s.backend_util.assignToTypedArray(a,o,i,r)}return a}(s.backend_util.mergeRealAndImagArrays(o,i),a,e);return s.backend_util.splitRealAndImagArrays(t)}var c}function mp(t,e,n,a,r){if(1===n)return{real:t,imag:e};const o=s.backend_util.mergeRealAndImagArrays(t,e),i=n/2,c=s.backend_util.complexWithEvenIndex(o),l=c.real,u=c.imag,h=[l.length],d=r.makeTensorInfo(h,"float32",l),p=r.makeTensorInfo(h,"float32",u),f=Wu({inputs:{real:d,imag:p},backend:r}),m=s.backend_util.complexWithOddIndex(o),g=m.real,y=m.imag,b=[g.length],x=r.makeTensorInfo(b,"float32",g),v=r.makeTensorInfo(b,"float32",y),w=Wu({inputs:{real:x,imag:v},backend:r}),k=mp(l,u,i,a,r),I=k.real,S=k.imag,N=[I.length],T=r.makeTensorInfo(N,"float32",I),C=r.makeTensorInfo(N,"float32",S),E=Wu({inputs:{real:T,imag:C},backend:r}),_=mp(g,y,i,a,r),A=_.real,D=_.imag,R=[A.length],O=r.makeTensorInfo(R,"float32",A),F=r.makeTensorInfo(R,"float32",D),M=Wu({inputs:{real:O,imag:F},backend:r}),B=s.backend_util.exponents(n,a),L=[B.real.length],z=r.makeTensorInfo(L,"float32",B.real),U=r.makeTensorInfo(L,"float32",B.imag),P=Wu({inputs:{real:z,imag:U},backend:r}),V=Md({inputs:{a:P,b:M},backend:r}),W=th({inputs:{a:E,b:V},backend:r}),G=hp({inputs:{a:E,b:V},backend:r}),H=ju({inputs:{input:W},backend:r}),j=ju({inputs:{input:G},backend:r}),X=sd({inputs:{input:W},backend:r}),q=sd({inputs:{input:G},backend:r}),K=od({inputs:[H,j],backend:r,attrs:{axis:0}}),Z=od({inputs:[X,q],backend:r,attrs:{axis:0}}),Y=r.data.get(K.dataId).values,Q=r.data.get(Z.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(Z),{real:Y,imag:Q}}const gp={kernelName:s.vwp,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e,r=s.D5U.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=nh({inputs:{x:a},backend:n,attrs:{shape:[r/o,o]}}),c=pp(i,!1,n),l=nh({inputs:{x:c},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}};function yp(t){const{backend:e,attrs:n}=t,{shape:a,value:r,dtype:o}=n,i=o||s.D5U.inferDtype(r),c=s.D5U.getArrayFromDType(i,s.D5U.sizeFromShape(a));return function(t,e,n){t.fill(e)}(c,r),e.makeTensorInfo(a,i,c)}const bp={kernelName:s.deh,backendName:"cpu",kernelFunc:yp};const xp={kernelName:s.Uyb,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{image:r}=e,o=a,i=s.D5U.getTypedArrayFromDType(r.dtype,s.D5U.sizeFromShape(r.shape)),[c,l,u,h]=r.shape,d=o.data.get(r.dataId).values;for(let s=0;s<c;s++){const t=s*u*l*h;for(let e=0;e<l;e++){const n=e*(u*h);for(let e=0;e<u;e++){const a=e*h;for(let s=0;s<h;s++){const r=Math.round(u-e-1),o=t+n+a+s;let c=d[o];if(r>=0&&r<u){c=d[t+n+r*h+s]}i[o]=c}}}}return{dataId:o.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},vp=wu((t=>Math.floor(t))),wp=Iu(s.OR,vp),kp={kernelName:s.OR,backendName:"cpu",kernelFunc:wp},Ip=Au(((t,e)=>Math.floor(t/e))),Sp=Yu(s.jeX,Ip,null,"int32"),Np={kernelName:s.jeX,backendName:"cpu",kernelFunc:Sp};const Tp={kernelName:s._V0,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:r,bias:o,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=cd({inputs:{x:s,filter:r},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const t=m;if("NCHW"===u&&1===o.shape.length&&1!==o.shape[0]){const t=nh({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=th({inputs:{a:m,b:t},backend:n}),n.disposeIntermediateTensorInfo(t)}else m=th({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(t)}if(p){const t=m;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const t=nh({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Vu(n,m,p,t,f),n.disposeIntermediateTensorInfo(t)}else m=Vu(n,m,p,i,f);n.disposeIntermediateTensorInfo(t)}return m}};const Cp={kernelName:s.luS,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:r,bias:o,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=Sd({inputs:{x:s,filter:r},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const t=m;m=th({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=Vu(n,m,p,i,f),n.disposeIntermediateTensorInfo(t)}return m}};function Ep(t,e,n,a,r,o,i,c,l){const u=(0,s.f3b)([a,o],n);for(let s=0;s<a;s++){const n=[];let a=0;for(let e=0;e<r;e++){const o=t[s*r+e];a+=o*i[e],n.push(o)}if(a<0||a>=l/o)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(c));for(let t=0;t<o;t++)u.values[s*o+t]=e.get(...e.indexToLoc(a*o+t))}return u}const _p={kernelName:s.q1x,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:a,indices:r}=e,o=s.D5U.sizeFromShape(a.shape),i=r.shape,c=i[i.length-1],[l,u,h,d]=s.backend_util.prepareAndValidate(a,r);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);const p=Ep(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,u,c,h,d,a.shape,o);return n.makeTensorInfo(l,a.dtype,p.values)}};function Ap(t,e,n){const a=(0,s.f3b)(n,t.dtype);for(let s=0;s<a.size;++s){const n=a.indexToLoc(s).slice(),r=n[0],o=n[2],i=e.locToIndex([r,o]);n[2]=e.values[i];const c=t.locToIndex(n);0<=c&&c<t.values.length&&(a.values[s]=t.values[c])}return a}const Dp={kernelName:s.qi_,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,indices:o}=e,{axis:i,batchDims:c}=a;bu([r,o],"gatherV2");const l=s.D5U.parseAxisParam(i,r.shape)[0],u=n.data.get(o.dataId).values,h=r.shape[l];for(let v=0;v<u.length;++v){const t=u[v];s.D5U.assert(t<=h-1&&t>=0,(()=>"GatherV2: the index value ".concat(t," is not in [0, ").concat(h-1,"]")))}let d=c;null==c&&(d=0);const p=s.D5U.sizeFromShape(o.shape),f=s.backend_util.segment_util.collectGatherOpShapeInfo(r,o,l,d),m=nh({inputs:{x:r},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=nh({inputs:{x:o},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),y=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],b=n.bufferSync(g),x=Ap(n.bufferSync(m),b,y);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(f.outputShape,x.dtype,x.values)}},Rp=Au(((t,e)=>t>e?1:0)),Op=Yu(s.iZT,Rp,null,"bool"),Fp={kernelName:s.iZT,backendName:"cpu",kernelFunc:Op},Mp=Au(((t,e)=>t>=e?1:0)),Bp=Yu(s.Acj,Mp,null,"bool"),Lp={kernelName:s.Acj,backendName:"cpu",kernelFunc:Bp};const zp={kernelName:s.Qg5,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e,r=s.D5U.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=nh({inputs:{x:a},backend:n,attrs:{shape:[r/o,o]}}),c=pp(i,!0,n),l=nh({inputs:{x:c},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}},Up=ku(s.avt,(t=>Number.isFinite(t)?1:0),"bool"),Pp={kernelName:s.avt,backendName:"cpu",kernelFunc:Up},Vp=ku(s.iWB,(t=>Math.abs(t)===1/0?1:0),"bool"),Wp={kernelName:s.iWB,backendName:"cpu",kernelFunc:Vp},Gp=ku(s.r7n,(t=>Number.isNaN(t)?1:0),"bool"),Hp={kernelName:s.r7n,backendName:"cpu",kernelFunc:Gp},jp=Au(((t,e)=>t<e?1:0)),Xp=Yu(s.vtC,jp,null,"bool"),qp={kernelName:s.vtC,backendName:"cpu",kernelFunc:Xp},Kp=Au(((t,e)=>t<=e?1:0)),Zp=Yu(s.CAk,Kp,null,"bool"),Yp={kernelName:s.CAk,backendName:"cpu",kernelFunc:Zp};function Qp(t,e,n){const a=(e-t)/(n-1),r=s.D5U.makeZerosTypedArray(n,"float32");r[0]=t;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const Jp={kernelName:s.e7N,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:s,num:r}=n,o=Qp(a,s,r);return e.makeTensorInfo([o.length],"float32",o)}},$p=wu((t=>Math.log(t))),tf=Iu(s.ZbH,$p),ef={kernelName:s.ZbH,backendName:"cpu",kernelFunc:tf},nf=ku(s.kU,(t=>Math.log1p(t))),af={kernelName:s.kU,backendName:"cpu",kernelFunc:nf},sf=Au(((t,e)=>t&&e)),rf=Yu(s.PYm,sf,null,"bool"),of={kernelName:s.PYm,backendName:"cpu",kernelFunc:rf},cf=ku(s.VfG,(t=>t?0:1),"bool"),lf={kernelName:s.VfG,backendName:"cpu",kernelFunc:cf},uf=Au(((t,e)=>t||e)),hf=Yu(s.MZg,uf,null,"bool"),df={kernelName:s.MZg,backendName:"cpu",kernelFunc:hf};const pf={kernelName:s.eZ0,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{depthRadius:o,bias:i,alpha:c,beta:l}=a;bu(r,"LRN");const u=r.shape[3],h=u-1,d=n.data.get(r.dataId).values,p=s.D5U.sizeFromShape(r.shape),f=new Float32Array(p);function m(t){const e=t%u;let n=t-e+Math.max(0,e-o);const a=t-e+Math.min(e+o,h);let s=0;for(;n<=a;n++){const t=d[n];s+=t*t}return s}for(let s=0;s<p;s++){const t=m(s),e=d[s]*Math.pow(i+c*t,-l);f[s]=e}return n.makeTensorInfo(r.shape,r.dtype,f)}};const ff={kernelName:s.Hhh,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,y:o,dy:i}=e,{depthRadius:c,bias:l,alpha:u,beta:h}=a;bu(i,"LRNGrad");const d=s.D5U.sizeFromShape(i.shape),p=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(r.dataId).values,g=n.data.get(o.dataId).values,y=new Float32Array(d),b=d;for(let s=0;s<b;s++){const t=s%p,e=s-t+Math.max(0,t-c),n=s-t+Math.min(p,t+c+1);let a=0;for(let s=e;s<n;s++)a+=Math.pow(m[s],2);a=u*a+l;for(let r=e;r<n;r++){let t=-2*u*h*m[r]*g[s]/a;s===r&&(t+=Math.pow(a,-h)),t*=f[s],y[r]+=t}}return n.makeTensorInfo(i.shape,r.dtype,y)}};function mf(t,e,n,a){const r=s.D5U.getTypedArrayFromDType(a,s.D5U.sizeFromShape(n));for(let s=0;s<r.length;++s){const n=s*e;let a=t[n];for(let s=0;s<e;++s){const e=t[n+s];(Number.isNaN(e)||e>a)&&(a=e)}r[s]=a}return r}function gf(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reductionIndices:o,keepDims:i}=a,c=n;let l=r.shape;const u=l.length,h=s.D5U.parseAxisParam(o,l);let d=h;const p=s.backend_util.getAxesPermutation(d,u);let f=c.data.get(r.dataId).values;if(null!=p){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[p[e]];f=fh(f,l,r.dtype,p,t),d=s.backend_util.getInnerMostAxes(d.length,u),l=t}bu(r,"max"),s.backend_util.assertAxesAreInnerMostDims("max",d,u);const[m,g]=s.backend_util.computeOutAndReduceShapes(l,d),y=mf(f,s.D5U.sizeFromShape(g),m,r.dtype),b=c.write(y,m,r.dtype);let x=m;if(i){x=s.backend_util.expandShapeToKeepDim(m,h)}return{dataId:b,shape:x,dtype:r.dtype}}const yf={kernelName:s.YoZ,backendName:"cpu",kernelFunc:gf},bf=Au(((t,e)=>Math.max(t,e))),xf=Yu(s.BMI,bf),vf={kernelName:s.BMI,backendName:"cpu",kernelFunc:xf};const wf={kernelName:s.mTV,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;bu(r,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;s.D5U.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=s.backend_util.computePool2DInfo(r.shape,o,i,1,c,l);let h;if(1===u.filterWidth&&1===u.filterHeight&&s.D5U.arraysEqual(u.inShape,u.outShape))h=Tu({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=s.D5U.computeStrides(r.shape),a=Rh(t,r.shape,r.dtype,e,u,"max");h=n.makeTensorInfo(u.outShape,r.dtype,a.values)}return h}};const kf={kernelName:s.OAf,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=a;bu(r,"maxPool3d");const h=s.backend_util.computePool3DInfo(r.shape,o,i,1,c,l,u),d=Fh(n.data.get(r.dataId).values,r.shape,r.dtype,s.D5U.computeStrides(r.shape),h,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};const If={kernelName:s.OU7,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:o}=e,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a;bu([r,o],"maxPool3DGrad");const h=s.backend_util.computePool3DInfo(o.shape,i,c,1,l,u),d=function(t,e){const n=(0,s.f3b)(e.outShape,"int32"),a=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left;for(let s=0;s<e.batchSize;++s)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*a-p;let x=b;for(;x<0;)x+=i;const v=Math.min(e.inDepth,u+b);for(let a=0;a<e.outHeight;++a){const u=a*r-f;let p=u;for(;p<0;)p+=c;const w=Math.min(e.inHeight,h+u);for(let r=0;r<e.outWidth;++r){const f=r*o-m;let k=f;for(;k<0;)k+=l;const I=Math.min(e.inWidth,d+f);let S=Number.NEGATIVE_INFINITY,N=-1;for(let e=x;e<v;e+=i){const n=e-b;for(let a=p;a<w;a+=c){const r=a-u;for(let o=k;o<I;o+=l){const i=o-f,c=t.get(s,e,a,o,g);c>=S&&(S=c,N=n*h*d+r*h+i)}}}n.set(N,s,y,a,r,g)}}}return n}(n.bufferSync(o),h),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.dilationDepth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterDepth,v=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=x-1-h.padInfo.front,I=w-1-h.padInfo.left,S=v-1-h.padInfo.top,N=(0,s.f3b)(o.shape,"float32"),T=n.bufferSync(r);for(let s=0;s<h.batchSize;++s)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inDepth;++e)for(let n=0;n<h.inHeight;++n)for(let a=0;a<h.inWidth;++a){const r=e-k,o=n-S,i=a-I;let c=0;for(let e=0;e<x;e+=g){const n=(r+e)/p;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let a=0;a<v;a+=y){const r=(o+a)/f;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let o=0;o<w;o+=b){const l=(i+o)/m;if(l<0||l>=h.outWidth||Math.floor(l)!==l)continue;const u=x*v*w-1-d.get(s,n,r,l,t)===e*v*w+a*w+o?1:0;if(0===u)continue;c+=T.get(s,n,r,l,t)*u}}}N.set(c,s,e,n,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const Sf={kernelName:s.OV7,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:o,output:i}=e,c=o;bu([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:h,dimRoundingMode:d}=a,p=s.backend_util.computePool2DInfo(c.shape,l,u,1,h,d),f=n.data.get(c.dataId).values,m=(0,s.f3b)(p.outShape,c.dtype,Oh(f,c.shape,c.dtype,p).values),g=p.strideHeight,y=p.strideWidth,b=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,I=v-1-p.padInfo.top,S=(0,s.f3b)(c.shape,"float32"),N=n.data.get(r.dataId).values,T=(0,s.f3b)(r.shape,"float32",N);for(let s=0;s<p.batchSize;++s)for(let t=0;t<p.inChannels;++t)for(let e=0;e<p.inHeight;++e)for(let n=0;n<p.inWidth;++n){const a=e-I,r=n-k;let o=0;for(let e=0;e<v;e+=b){const n=(a+e)/g;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let a=0;a<w;a+=x){const i=(r+a)/y;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const c=v*w-1-m.get(s,n,i,t)===e*w+a?1:0;if(0===c)continue;o+=T.get(s,n,i,t)*c}}S.set(o,s,e,n,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const Nf={kernelName:s.vFR,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,{filterSize:o,strides:i,pad:c,includeBatchInIndex:l}=n,u=a;bu(r,"MaxPoolWithArgmax");const h=u.data.get(r.dataId).values,d=s.backend_util.computePool2DInfo(r.shape,o,i,[1,1],c),[p,f]=function(t,e,n,a,r){const o=Rh(t,0,n,s.D5U.computeStrides(e),r,"max"),i=Oh(t,e,n,r,!0,a);return[o.values,i.values]}(h,r.shape,r.dtype,l,d),m=u.write(p,d.outShape,r.dtype),g=u.write(f,d.outShape,r.dtype);return[{dataId:m,shape:d.outShape,dtype:r.dtype},{dataId:g,shape:d.outShape,dtype:"int32"}]}};const Tf={kernelName:s.q2K,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a,c=s.D5U.parseAxisParam(o,r.shape),l=s.backend_util.computeOutAndReduceShapes(r.shape,c)[1],u=s.D5U.sizeFromShape(l),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const p=Ku({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});h.push(p);const f=ip({inputs:{a:p,b:d},backend:n});h.push(f);const m=Ld({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:i}});return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),m}};const Cf={kernelName:s.c17,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a;bu(r,"min");const c=s.D5U.parseAxisParam(o,r.shape);let l=c;const u=s.backend_util.getAxesPermutation(l,r.shape.length);let h=r;null!=u&&(h=mh({inputs:{x:r},backend:n,attrs:{perm:u}}),l=s.backend_util.getInnerMostAxes(l.length,r.shape.length)),s.backend_util.assertAxesAreInnerMostDims("min",l,h.shape.length);const[d,p]=s.backend_util.computeOutAndReduceShapes(h.shape,l),f=s.D5U.sizeFromShape(p),m=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(d),h.dtype),g=n.data.get(h.dataId).values;for(let s=0;s<m.length;++s){const t=s*f;let e=g[t];for(let n=0;n<f;++n){const a=g[t+n];(Number.isNaN(a)||a<e)&&(e=a)}m[s]=e}null!=u&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(d,h.dtype,m);if(i){const t=nh({inputs:{x:y},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(d,c)}});return n.disposeIntermediateTensorInfo(y),t}return y}},Ef=Au(((t,e)=>Math.min(t,e))),_f=Yu(s.q8u,Ef),Af={kernelName:s.q8u,backendName:"cpu",kernelFunc:_f};const Df={kernelName:s.jQs,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{paddings:o,mode:i}=a;bu(r,"mirrorPad");const c=o.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=o.map((t=>t[0])),u=o.map(((t,e)=>t[0]+r.shape[e])),h="reflect"===i?0:1,d=n.data.get(r.dataId).values,p=r.shape.length,f=s.D5U.computeStrides(r.shape),m=s.D5U.sizeFromShape(c),g=c.length,y=s.D5U.computeStrides(c),b=s.D5U.getTypedArrayFromDType(r.dtype,m);for(let x=0;x<m;x++){let t=s.D5U.indexToLoc(x,g,y);for(let n=0;n<g;n++)t[n]<l[n]?t[n]=2*l[n]-t[n]-h:t[n]>=u[n]&&(t[n]=2*(u[n]-1)-t[n]+h);t=t.map(((t,e)=>t-l[e]));const e=s.D5U.locToIndex(t,p,f);b[x]=d[e]}return{dataId:n.write(b,c,r.dtype),shape:c,dtype:r.dtype}}},Rf=Au(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),Of=Yu(s.Vbg,Rf),Ff={kernelName:s.Vbg,backendName:"cpu",kernelFunc:Of};function Mf(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{dim:o}=a,i=r.shape.length;let c=o;if(-1===c&&(c=i-1),c!==i-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(i," and dim was ").concat(c));const l=s.D5U.parseAxisParam([c],r.shape),u=gf({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=s.backend_util.expandShapeToKeepDim(u.shape,l),d=nh({inputs:{x:u},backend:n,attrs:{shape:h}}),p=hp({inputs:{a:r,b:d},backend:n}),f=$d({inputs:{x:p},backend:n}),m=Ld({inputs:{x:f},backend:n,attrs:{axis:l,keepDims:!1}}),g=nh({inputs:{x:m},backend:n,attrs:{shape:h}}),y=ip({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const Bf={kernelName:s.Gcp,backendName:"cpu",kernelFunc:Mf};const Lf={kernelName:s.NZg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{numSamples:o,seed:i,normalized:c}=a;bu(r,"multinomial");const l=c?r:Mf({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],d=n.data.get(l.dataId).values,p=[u,o],f=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(p),"int32");for(let s=0;s<u;++s){const t=s*h,e=new Float32Array(h-1);e[0]=d[t];for(let s=1;s<e.length;++s)e[s]=e[s-1]+d[t+s];const n=Vl.alea(i.toString()),a=s*o;for(let s=0;s<o;++s){const t=n();f[a+s]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){f[a+s]=n;break}}}return c||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",f)}};function zf(t,e,n){const a=s.D5U.createScalarValue(-1,n);return Od([],e,a,t,n)}const Uf={kernelName:s.kuV,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;bu(a,"neg");const s=n.data.get(a.dataId).values,[r,o]=zf(s,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,r)}},Pf=s.GDt.GP;const Vf={kernelName:s.uv1,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:r}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;bu(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,{selectedIndices:h}=Pf(l,u,o,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Wf=s.GDt.qP;const Gf={kernelName:s.cye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:r}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;bu(s,"NonMaxSuppressionPadded");const u=n.data.get(s.dataId).values,h=n.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=Wf(u,h,o,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Hf=s.GDt.pA;const jf={kernelName:s.W0H,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:r}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;bu(s,"NonMaxSuppressionWithScore");const u=n.data.get(s.dataId).values,h=n.data.get(r.dataId).values,d=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=Hf(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Xf=Au(((t,e)=>t!==e?1:0)),qf=Yu(s.yQU,Xf,null,"bool"),Kf={kernelName:s.yQU,backendName:"cpu",kernelFunc:qf};const Zf={kernelName:s.we_,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:r}=e,{dtype:o,depth:i,onValue:c,offValue:l}=a;bu(r,"oneHot");const u=s.D5U.sizeFromShape(r.shape),h=new Float32Array(u*i);h.fill(l);const d=n.data.get(r.dataId).values;for(let s=0;s<u;++s)d[s]>=0&&d[s]<i&&(h[s*i+d[s]]=c);return n.makeTensorInfo([...r.shape,i],o,h)}};function Yf(t){const{inputs:e,backend:n}=t,{x:a}=e;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const t=ju({inputs:{input:a},backend:n}),e=Yf({inputs:{x:t},backend:n}),s=sd({inputs:{input:a},backend:n}),r=Yf({inputs:{x:s},backend:n}),o=Wu({inputs:{real:e,imag:r},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),o}return yp({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const Qf={kernelName:s.RuY,backendName:"cpu",kernelFunc:Yf};const Jf={kernelName:s.qWM,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:a}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=ju({inputs:{input:s},backend:a}),n=t({inputs:{x:e},backend:a}),r=sd({inputs:{input:s},backend:a}),o=Yf({inputs:{x:r},backend:a}),i=Wu({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(o),i}return yp({backend:a,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function $f(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a;if(1===e.length)return ep({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach((t=>{s.D5U.assertShapesMatch(o,t.shape,"All tensors passed to stack must have matching shapes"),s.D5U.assert(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=od({inputs:e.map((t=>{const e=ep({inputs:{input:t},backend:n,attrs:{dim:r}});return c.push(e),e})),backend:n,attrs:{axis:r}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}const tm={kernelName:s.QiL,backendName:"cpu",kernelFunc:$f};const em={kernelName:s.lyA,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{paddings:o,constantValue:i}=a;bu(r,"pad");const c=o.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=o.map((t=>t[0])),u=n.data.get(r.dataId).values,h=s.D5U.sizeFromShape(r.shape),d=r.shape.length,p=s.D5U.computeStrides(r.shape),f=s.D5U.sizeFromShape(c),m=c.length,g=s.D5U.computeStrides(c),y=s.D5U.getTypedArrayFromDType(r.dtype,f);0!==i&&y.fill(i);for(let b=0;b<h;b++){const t=s.D5U.indexToLoc(b,d,p).map(((t,e)=>t+l[e]));y[s.D5U.locToIndex(t,m,g)]=u[b]}return{dataId:n.write(y,c,r.dtype),shape:c,dtype:r.dtype}}},nm=Au(((t,e)=>Math.pow(t,e))),am=Yu(s.pe_,nm),sm={kernelName:s.pe_,backendName:"cpu",kernelFunc:am};function rm(t,e,n,a){const[r,o]=s.backend_util.computeOutAndReduceShapes(t,a),i=(0,s.x8V)(e,"int32"),c=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(r),i),l=s.D5U.sizeFromShape(o);for(let s=0;s<c.length;++s){const t=s*l;let e=1;for(let a=0;a<l;++a)e*=n[t+a];c[s]=e}return{outVals:c,outShape:r,outDtype:i}}const om={kernelName:s.DlI,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a;bu(r,"prod");const c=r.shape.length,l=s.D5U.parseAxisParam(o,r.shape),u=s.backend_util.getAxesPermutation(l,c);let h=l,d=r;const p=[];null!=u&&(d=mh({inputs:{x:r},backend:n,attrs:{perm:u}}),p.push(d),h=s.backend_util.getInnerMostAxes(h.length,c));const f=n.data.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=rm(d.shape,d.dtype,f,h);let b=g;return i&&(b=s.backend_util.expandShapeToKeepDim(g,l)),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(b,y,m)}};function im(t,e,n,a){const s=[];let r=0;const o=e.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(t,e){for(let n=0;n<t.length;++n){const a=t[n],s=n===t.length-1?e:t[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>s)throw new Error("Ragged splits must not point past values");for(let t=1;t<a.length;++t)if(a[t-1]>a[t])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<e.length-1;++l){c*=e[l];const t=e[l+1];for(let e=1;e<c+1;++e)i[l].push(e*t)}for(let l=0;l<t.length;++l){let a=t[l],o=t[l]+1;for(let t=0;t<n.length;++t){const s=n[t],r=t+e.length-1;if(r>=0){const t=i[r],e=t[t.length-1]-s[a];for(let n=a;n<o;++n)i[r].push(s[n+1]+e)}a=s[a],o=s[o]}o!==a&&(s.push([a,o]),r+=o-a)}return{outSplits:i,valueSlices:s,numValues:r}}function cm(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let a=e;a<t.length;a++)n[e-1]*=t[a];return n}function lm(t,e,n,a,r){const o=e.slice();o[0]=r;const i=s.D5U.getArrayFromDType(n,s.D5U.sizeFromShape(o)),c=t.length;return function(t,e,n,a,s,r){const o=cm(e,2)[1],i=cm(r,2)[1];let c=0;for(const l of n)for(let e=l[0];e<l[1];++e){for(let n=0;n<a;++n)s[c*i+n]=t[e*o+n];++c}}(t,e,a,0===c?0:c/e[0],i,o),[i,o]}function um(t,e,n,a,r,o,i,c){if(0===t.length)throw new Error("paramsNestedSplits must be non empty");if(0===e[0].length)throw new Error("Split tensors must not be scalars");if(function(t,e,n){t.forEach(((t,a)=>{if(t<0||t>=n){const r=s.D5U.indexToLoc(a,e.length,s.D5U.computeStrides(e)).join(",");throw new Error("indices[".concat(r,"] = ").concat(t," is not in [0, ").concat(n,")"))}}))}(o,i,e[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const l=a[0],{outSplits:u,valueSlices:h,numValues:d}=im(o,i,t,l),p=function(t){const e=[];for(let n=0;n<t.length;++n){const a=t[n].length,r=s.D5U.getArrayFromDType("int32",a);e.push(r),t[n].forEach(((t,e)=>r[e]=t))}return e}(u),f=lm(n,a,r,h,d);return[p,f[0],f[1]]}const hm={kernelName:s.dDz,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{paramsNestedSplits:s,paramsDenseValues:r,indices:o}=e,{outputRaggedRank:i}=a,c=s.map((t=>n.data.get(t.dataId).values)),l=s.map((t=>t.shape)),u=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,[d,p,f]=um(c,l,u,r.shape,r.dtype,h,o.shape),m=d.map((t=>n.makeTensorInfo([t.length],"int32",t))),g=n.makeTensorInfo(f,r.dtype,p);return m.concat([g])}},dm=2147483647;function pm(t,e,n,a,r,o,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const c=0===e.length,l=0===r.length,u=0===i.length,h=[];c||h.push(e[0]),l||h.push(r[0]),u||h.push(i[0]);for(let s=1;s<h.length;++s)if(h[s]!==h[s-1])throw new Error("starts, limits, and deltas must have the same shape");const d=0===h.length?1:h[0],p=s.D5U.getArrayFromDType("int32",d+1);p[0]=0;for(let s=0;s<d;++s){const e=c?t[0]:t[s],n=l?a[0]:a[s],r=u?o[0]:o[s];if(0===r)throw new Error("Requires delta != 0");let i;if(r>0&&n<e||r<0&&n>e)i=0;else if(i=Math.ceil(Math.abs((n-e)/r)),i>dm)throw new Error("Requires ((limit - start) / delta) <= ".concat(dm));p[s+1]=p[s]+i}const f=p[d],m=s.D5U.getArrayFromDType(n,f);let g=0;for(let s=0;s<d;++s){const e=p[s+1]-p[s];let n=c?t[0]:t[s];const a=u?o[0]:o[s];for(let t=0;t<e;++t)m[g++]=n,n+=a}return[p,m]}const fm={kernelName:s.CQl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{starts:a,limits:s,deltas:r}=e,o=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(r.dataId).values,[l,u]=pm(o,a.shape,a.dtype,i,s.shape,c,r.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var mm=s.backend_util.RowPartitionType;class gm{constructor(t,e,n,a,r,o,i,c,l,u){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=o,this.defaultValueShape=i,this.rowPartitionValues=c,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=s.backend_util.getRowPartitionTypesHelper(u),this.raggedRank=s.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===mm.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===mm.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case mm.VALUE_ROWIDS:return gm.getMaxWidthValueRowID(e);case mm.ROW_SPLITS:return gm.getMaxWidthRowSplit(e);default:throw new Error("Cannot handle partition type ".concat(mm[this.getRowPartitionTypeByDimension(t-1)]))}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let n=0;for(let a=0;a<e-1;++a){const e=t[a+1]-t[a];e>n&&(n=e)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let n=0,a=t[0],s=0;for(let r=1;r<e;++r){const e=t[r];e!==a&&(a=e,s=Math.max(r-n,s),n=r)}return Math.max(e-n,s)}tensorShapeFromTensor(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return bm(t,n)}calculateOutputSize(t){const e=this.valuesShape,n=this.defaultValueShape;s.backend_util.validateDefaultValueShape(n,e);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=s.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,a,e);r[0]<0&&(r[0]=t);for(let s=1;s<=this.raggedRank;++s)r[s]<0&&(r[s]=this.getMaxWidth(s));return r}calculateFirstParentOutputIndex(t,e,n){const a=Math.min(t,n),r=[];let o=0;for(let s=0;s<a;++s,o+=e)r.push(o);for(let s=a;s<t;++s)r.push(-1);return s.D5U.assert(r.length===t,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(t,e,n,a){const s=t.length,r=[];for(let o=0;o<s-1;++o){const s=t[o+1]-t[o];let i=Math.min(a,s),c=e[o];-1===c&&(i=0);for(let t=0;t<i;++t)r.push(c),c+=n;for(let t=0;t<s-i;++t)r.push(-1)}if(s>0&&r.length!==t[s-1])throw new Error("Invalid row split size.");return r}calculateOutputIndexValueRowID(t,e,n,a){const s=t.length,r=[];if(0===s)return[];let o=0,i=t[0];if(i>=e.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(e.length));let c=e[i];r.push(c);for(let l=1;l<s;++l){const s=t[l];if(s===i)c>=0&&(++o,o<a?c+=n:c=-1);else{if(o=0,i=s,s>=e.length)throw new Error("Got nextValueRowId=".concat(s," which is not less than ").concat(e.length));c=e[s]}r.push(c)}if(r.length!==t.length)throw new Error("Invalid row ids.");return r}calculateOutputIndex(t,e,n,a){const s=this.getRowPartitionTensor(t),r=this.getRowPartitionTypeByDimension(t);switch(r){case mm.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,n,a);case mm.ROW_SPLITS:if(s.length-1>e.length)throw new Error("Row partition size is greater than output size: ".concat(s.length-1," > ").concat(e.length));return this.calculateOutputIndexRowSplit(s,e,n,a);default:throw new Error("Unsupported partition type: ".concat(mm[r]))}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case mm.FIRST_DIM_SIZE:return t[0];case mm.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case mm.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(mm[e]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),e=this.calculateOutputSize(t),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*e[s+1];const a=bm(e,!1),r=s.D5U.getArrayFromDType(this.valuesDType,s.D5U.sizeFromShape(a));if(n[0]*e[0]>0){let s=this.calculateFirstParentOutputIndex(t,n[0],e[0]);for(let t=1;t<=this.raggedRank;++t){s=this.calculateOutputIndex(t-1,s,n[t],e[t])}this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(t,e,n,a){if(0===n.length)return;const r=this.values,o=n;let i=a.slice();i=i.slice(t+1);const c=s.D5U.sizeFromShape(i),l=e.length;let u=this.defaultValue;if(u.length!==c&&1!==u.length){const t=this.defaultValueShape;(0,s.lub)((()=>{const e=(0,s.XLQ)(u,t),n=(0,s.UFq)(e,i);u=n.dataSync()}))}let h=0,d=0,p=0;for(let s=0;s<=l;++s){let t=s<l?e[s]:-1;if(t!==p){if(d<p){const t=r.subarray(h*c);ym(o.subarray(d*c),t,(p-d)*c)}if(s>=l){const e=n.length;t=Math.floor(e/c)}if(t>p)if(1===this.defaultValue.length)o.subarray(p*c,t*c).fill(this.defaultValue[0]),p=t;else for(;t>p;){ym(o.slice(p*c),u,c),++p}t<0?(h=s+1,d=p):(h=s,d=p,p=d+1)}else++p}}}function ym(t,e,n){for(let a=0;a<n;a++)t[a]=e[a]}function bm(t,e){const n=[];for(let a of t){if(a<0){if(!e)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function xm(t,e,n,a,s,r,o,i,c,l){return new gm(t,e,n,a,s,r,o,i,c,l).compute()}const vm={kernelName:s.BiW,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{shape:s,values:r,defaultValue:o,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=a,l=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=i.map((t=>n.data.get(t.dataId).values)),p=i.map((t=>t.shape)),[f,m]=xm(l,s.shape,u,r.shape,r.dtype,h,o.shape,d,p,c);return n.makeTensorInfo(f,r.dtype,m)}};function wm(t,e,n,a){if(t===e||t<e&&n<0||e<t&&n>1)return s.D5U.makeZerosTypedArray(0,a);const r=Math.abs(Math.ceil((e-t)/n)),o=s.D5U.makeZerosTypedArray(r,a);e<t&&1===n&&(n=-1),o[0]=t;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}const km={kernelName:s.e6w,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:s,dtype:r,step:o}=n,i=wm(a,s,o,r);return e.makeTensorInfo([i.length],r,i)}},Im=ku(s.$HU,(t=>1/t)),Sm={kernelName:s.$HU,backendName:"cpu",kernelFunc:Im};const Nm={kernelName:s._Yw,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:c}=a;bu(r,"resizeBilinear");const l=s.D5U.computeStrides(r.shape),[u,h]=c,[d,p,f,m]=r.shape,g=n.data.get(r.dataId).values,y=new Float32Array(s.D5U.sizeFromShape([d,u,h,m])),b=[o&&u>1?p-1:p,o&&h>1?f-1:f],x=[o&&u>1?u-1:u,o&&h>1?h-1:h];let v=0;const w=b[0]/x[0],k=b[1]/x[1];for(let s=0;s<d;s++)for(let t=0;t<u;t++){let e;e=i?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),a=e-n,r=Math.min(p-1,Math.ceil(e)),o=s*l[0]+n*l[1],c=s*l[0]+r*l[1];for(let t=0;t<h;t++){let e;e=i?k*(t+.5)-.5:k*t;const n=Math.max(0,Math.floor(e)),s=e-n,r=Math.min(f-1,Math.ceil(e)),u=o+n*l[2],h=c+n*l[2],d=o+r*l[2],p=c+r*l[2];for(let t=0;t<m;t++){const e=g[u+t],n=g[h+t],r=e+(g[d+t]-e)*s,o=r+(n+(g[p+t]-n)*s-r)*a;y[v++]=o}}}return n.makeTensorInfo([d,u,h,m],"float32",y)}};const Tm={kernelName:s.zbQ,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r,dy:o}=e,{alignCorners:i}=a;bu([o,r],"resizeBilinearGrad");const c=s.D5U.computeStrides(r.shape),[l,u,h,d]=r.shape,[,p,f]=o.shape,m=new Float32Array(l*u*h*d),g=[i&&p>1?u-1:u,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],v=n.data.get(o.dataId).values;let w=0;for(let s=0;s<l;s++){const t=s*c[0];for(let e=0;e<p;e++){const n=e*b,a=Math.floor(n),s=Math.min(Math.ceil(n),u-1),r=t+a*c[1],o=t+s*c[1],i=n-a,l=1-i;for(let t=0;t<f;t++){const e=t*x,n=Math.floor(e),a=Math.min(Math.ceil(e),h-1),s=e-n,u=1-s,p=r+n*c[2],f=r+a*c[2],g=o+n*c[2],y=o+a*c[2],b=l*u,k=l*s,I=i*u,S=i*s;for(let t=0;t<d;t++){const e=v[w++];m[p+t]+=e*b,m[f+t]+=e*k,m[g+t]+=e*I,m[y+t]+=e*S}}}}return n.makeTensorInfo([l,h,u,d],"float32",m)}};const Cm={kernelName:s.dpD,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:c}=a;bu(r,"resizeNearestNeighbor");const l=s.D5U.computeStrides(r.shape),[u,h]=c,[d,p,f,m]=r.shape,g=n.data.get(r.dataId).values,y=new Float32Array(d*u*h*m),b=[o&&u>1?p-1:p,o&&h>1?f-1:f],x=[o&&u>1?u-1:u,o&&h>1?h-1:h],v=b[0]/x[0],w=b[1]/x[1];let k=0;for(let s=0;s<d;s++){const t=s*l[0];for(let e=0;e<u;e++){const n=i?v*(e+.5):v*e;let a=Math.min(p-1,o?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));const s=t+a*l[1];for(let t=0;t<h;t++){const e=i?w*(t+.5):w*t;let n=Math.min(f-1,o?Math.round(e):Math.floor(e));i&&(n=Math.max(0,n));const a=s+n*l[2];for(let t=0;t<m;t++){const e=g[a+t];y[k++]=e}}}}return n.makeTensorInfo([d,u,h,m],r.dtype,y)}};const Em={kernelName:s.Hmb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r,dy:o}=e,{alignCorners:i}=a;bu([o,r],"resizeNearestNeighborGrad");const c=s.D5U.computeStrides(r.shape),l=s.D5U.computeStrides(o.shape),[u,h,d,p]=r.shape,[,f,m]=o.shape,g=new Float32Array(u*h*d*p),y=n.data.get(o.dataId).values,b=[i&&f>1?h-1:h,i&&m>1?d-1:d],x=[i&&f>1?f-1:f,i&&m>1?m-1:m],v=b[0]/x[0],w=b[1]/x[1],k=1/v,I=1/w,S=2*Math.ceil(k)+2,N=2*Math.ceil(I)+2;for(let s=0;s<u;s++){const t=s*c[0];for(let e=0;e<h;e++){const n=t+e*c[1],a=Math.floor(e*k),s=Math.floor(a-S/2);for(let r=0;r<d;r++){const a=n+r*c[2],o=Math.floor(r*I),u=Math.floor(o-N/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<S;a++){const c=a+s;if(c<0||c>=f)continue;const p=t+c*l[1],g=c*v;if(e===Math.min(h-1,i?Math.round(g):Math.floor(g)))for(let t=0;t<N;t++){const e=t+u;if(e<0||e>=m)continue;const a=p+e*l[2],s=e*w;r===Math.min(d-1,i?Math.round(s):Math.floor(s))&&(o+=y[a+n])}}g[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,g)}};const _m={kernelName:s.mKl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{dims:o}=a;bu(r,"reverse");const i=r.shape.length,c=s.D5U.parseAxisParam(o,r.shape);if(0===i)return Tu({inputs:{x:r},backend:n});const l=new s.YDk(r.shape,r.dtype),u=n.bufferSync(r);for(let s=0;s<l.size;s++){const t=l.indexToLoc(s),e=t.slice();c.forEach((t=>e[t]=r.shape[t]-1-e[t])),l.set(u.get(...e),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},Am={kernelName:s.b9H,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{image:r}=e,{radians:o,fillValue:i,center:c}=n,l=a,u=s.D5U.getTypedArrayFromDType(r.dtype,s.D5U.sizeFromShape(r.shape)),[h,d,p,f]=r.shape,[m,g]=s.backend_util.getImageCenter(c,d,p),y=Math.sin(o),b=Math.cos(o),x=l.data.get(r.dataId).values;for(let s=0;s<h;s++){const t=s*p*d*f;for(let e=0;e<d;e++){const n=e*(p*f);for(let a=0;a<p;a++){const s=a*f;for(let r=0;r<f;r++){const o=[h,e,a,r],c=o[2],l=o[1];let v=(c-m)*b-(l-g)*y,w=(c-m)*y+(l-g)*b;v=Math.round(v+m),w=Math.round(w+g);let k=i;if("number"!==typeof i&&(k=3===r?255:i[r]),v>=0&&v<p&&w>=0&&w<d){k=x[t+w*(p*f)+v*f+r]}u[t+n+s+r]=k}}}}return{dataId:l.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Dm=ku(s.e07,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1})),Rm={kernelName:s.e07,backendName:"cpu",kernelFunc:Dm},Om=wu((t=>1/Math.sqrt(t))),Fm=Iu(s.bV0,Om),Mm={kernelName:s.bV0,backendName:"cpu",kernelFunc:Fm};function Bm(t,e,n,a,r,o,i,c,l,u){const h=[a/r,r],d=t.values,p=e.values;if(0===a)return(0,s.f3b)(n,e.dtype);const f=l instanceof s.YDk?l:(0,s.f3b)(h,e.dtype);"string"===typeof l||"number"===typeof l?f.values.fill(l):"boolean"===typeof l&&f.values.fill(+l);for(let s=0;s<o;s++){const t=[];let o=0;for(let e=0;e<i;e++){const n=d[s*i+e];t.push(n),o+=n*c[e]}if(o<0||o>=a/r)throw new Error("Invalid indices: ".concat(t," does not index into ").concat(n));for(let n=0;n<r;n++)u?f.values[o*r+n]+=p[s*r+n]:f.values[o*r+n]=0===e.rank?p[0]:p[s*r+n]}return f}const Lm={kernelName:s.xQA,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:r,updates:o}=e,{shape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=s.backend_util.calculateShapes(o,r,i),p=Bm(n.bufferSync(r),n.bufferSync(o),i,d,u,l,c,h,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};function zm(t,e){let n=0,a=t.length,s=0;for(;n<a;)s=Math.floor((n+a)/2),t[s]<e?n=s+1:a=s;return a}function Um(t,e){let n=0,a=t.length,s=0;for(;n<a;)s=Math.floor((n+a)/2),t[s]<=e?n=s+1:a=s;return a}const Pm={kernelName:s.nr8,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sortedSequence:r,values:o}=e,{side:i}=a,c=function(t,e,n,a,r,o){const i=s.D5U.getArrayFromDType("int32",n*r);for(let s=0;s<n;++s){const n=t.slice(s*a,(s+1)*a),c=s*r;for(let t=0;t<r;++t)i[c+t]="left"===o?zm(n,e[t+c]):Um(n,e[t+c])}return i}(n.data.get(r.dataId).values,n.data.get(o.dataId).values,r.shape[0],r.shape[1],o.shape[1],i);return n.makeTensorInfo(o.shape,"int32",c)}};const Vm={kernelName:s.PhF,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:a,t:r,e:o}=e;bu([a,r,o],"select");const i=a.shape.length,c=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,h=(0,s.x8V)(r.dtype,o.dtype),d=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(r.shape),h);let p=0;const f=0===i||i>1||1===r.shape.length?1:s.D5U.sizeFromShape(r.shape.slice(1));for(let s=0;s<c.length;s++)for(let t=0;t<f;t++)1===c[s]?d[p++]=l[s]:d[p++]=u[s];return n.makeTensorInfo(r.shape,h,d)}},Wm=s.backend_util.SELU_SCALEALPHA,Gm=s.backend_util.SELU_SCALE,Hm=ku(s.oFR,(t=>t>=0?Gm*t:Wm*(Math.exp(t)-1))),jm={kernelName:s.oFR,backendName:"cpu",kernelFunc:Hm},Xm=ku(s.i5y,(t=>t<0?-1:t>0?1:0)),qm={kernelName:s.i5y,backendName:"cpu",kernelFunc:Xm},Km=ku(s.RQH,(t=>Math.sin(t))),Zm={kernelName:s.RQH,backendName:"cpu",kernelFunc:Km},Ym=ku(s.wYB,(t=>Math.sinh(t))),Qm={kernelName:s.wYB,backendName:"cpu",kernelFunc:Ym},Jm=Math.log(1.1920928955078125e-7)+2,$m=ku(s.MRv,(t=>{const e=t>-Jm,n=t<Jm,a=Math.exp(t);let s;return s=n?a:e?t:Math.log(1+a),s})),tg={kernelName:s.MRv,backendName:"cpu",kernelFunc:$m};const eg={kernelName:s.TQc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:o,paddings:i}=a;bu([r],"spaceToBatchND");const c=s.D5U.sizeFromShape(o),l=[[0,0]];l.push(...i);for(let s=1+o.length;s<r.shape.length;++s)l.push([0,0]);const u=em.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=s.backend_util.getReshaped(u.shape,o,c,!1),d=s.backend_util.getPermuted(h.length,o.length,!1),p=s.backend_util.getReshapedPermuted(u.shape,o,c,!1),f=nh({inputs:{x:u},backend:n,attrs:{shape:h}}),m=mh({inputs:{x:f},backend:n,attrs:{perm:d}}),g=nh({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function ng(t,e,n,a,r,o,i){const c=e[0],l=o[0],u=new Array(l),h=new Array(c),d=e[1];if(0===l){if(0!==c)throw new Error(s.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(c));return[s.D5U.getArrayFromDType(n,0),[0,d],s.D5U.getArrayFromDType(r,0),u,h]}let p=!0,f=0;const m=new Array(l).fill(0);for(let y=0;y<c;++y){const e=t[y*d];if(e<0)throw new Error(s.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(y,e));if(e>=l)throw new Error(s.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(y,e,l));++m[e],p=p&&e>=f,f=e}let g=!0;for(let s=0;s<l;++s){const t=0===m[s];u[s]=t,g=g&&!t,m[s]=Math.max(m[s],1),s>0&&(m[s]+=m[s-1])}if(g&&p){const e=t,n=a;for(let t=0;t<c;++t)h[t]=t;return[e,[c,d],n,u,h]}{const e=m[l-1],o=s.D5U.getArrayFromDType(n,e*d),p=s.D5U.getArrayFromDType(r,e),f=new Array(l).fill(0);for(let n=0;n<c;++n){const e=t[n*d],s=f[e],r=(0===e?0:m[e-1])+s;f[e]++;for(let a=0;a<d;++a)o[r*d+a]=t[n*d+a];p[r]=a[n],h[n]=r}for(let t=0;t<l;++t){if(0===f[t]){const e=0===t?0:m[t-1];o[e*d+0]=t;for(let t=1;t<d;++t)o[e*d+t]=0;p[e]=i}}return[o,[e,d],p,u,h]}}const ag={kernelName:s.O3z,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:a,values:s,denseShape:r,defaultValue:o}=e;if(1!==r.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(r.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==s.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(s.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values[0],[h,d,p,f,m]=ng(i,a.shape,a.dtype,c,s.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function sg(t,e,n,a,r){const o=s.D5U.sizeFromShape(a),i=e[0],c=r.length,l=[];let u=1,h=-1;for(let g=0;g<c;++g){const t=r[g];if(-1===t){if(-1!==h)throw new Error(s.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,g));h=g,l.push(1)}else{if(t<0)throw new Error(s.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(g,t));u*=t,l.push(t)}}if(-1!==h){if(u<=0)throw new Error(s.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const t=Math.trunc(o/u);if(u*t!==o)throw new Error(s.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(a,l));l[h]=t}if(s.D5U.sizeFromShape(l)!==o)throw new Error(s.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(a,l));const d=a.length,p=[];if(d>0){p[d-1]=1;for(let t=d-2;t>=0;--t)p[t]=p[t+1]*a[t+1]}const f=[];if(c>0){f[c-1]=1;for(let t=c-2;t>=0;--t)f[t]=f[t+1]*l[t+1]}const m=s.D5U.getArrayFromDType(n,i*c);for(let s=0;s<i;++s){let e=0;for(let n=0;n<d;++n)e+=t[s*d+n]*p[n];for(let t=0;t<c;++t)m[s*c+t]=Math.trunc(e/f[t]),e%=f[t]}return[m,[i,c],l]}const rg={kernelName:s.nhH,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:a,inputShape:s,newShape:r}=e;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==s.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(s.shape));if(1!==r.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(r.shape));const o=Array.from(n.data.get(s.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(r.dataId).values),[l,u,h]=sg(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}};function og(t,e,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const c=a.length,l=[e[0],t.length/e[0]],u=l[1],h=c>0?r[c-1]+1:0;if(h<0)throw new Error(s.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const d=e.slice();d[0]=h;const p=d.reduce(((t,e)=>t*e),1),f=s.D5U.getArrayFromDType(n,p);if(0===c)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error(s.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=r[m];for(;;){let e=0;if(g<c){if(e=r[g],b===e){++g;continue}if(b>=e)throw new Error(s.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=h)throw new Error(s.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,h));b>y&&f.fill(i,y*u,b*u);for(let n=m;n<g;++n){const e=a[n];if(e<0||e>=l[0])throw new Error(s.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,a[n],l[0]));for(let n=0;n<u;n++)f[b*u+n]+=t[e*u+n]}if(o)for(let t=0;t<u;t++)f[b*u+t]/=g-m;if(m=g,++g,y=b+1,b=e,g>c)break}return y<h&&f.fill(i,y*u,h*u),[f,d]}const ig={kernelName:s.w3H,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:s,segmentIds:r}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(s.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(r.shape));if(s.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(r.dataId).values,[l,u]=og(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const cg={kernelName:s.ZjV,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:s,segmentIds:r}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(s.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(r.shape));if(s.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(r.dataId).values,[l,u]=og(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const lg={kernelName:s.D2d,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:h,strides:d,outputSize:p}=s.backend_util.calculateShapes(o,r,c),f=!1,m=n.bufferSync(r);let g;switch(o.dtype){case"bool":g=Bm(m,n.bufferSync(o),c,p,h,u,l,d,Boolean(n.data.get(i.dataId).values[0]),f);break;case"float32":g=Bm(m,n.bufferSync(o),c,p,h,u,l,d,n.data.get(i.dataId).values[0],f);break;case"int32":g=Bm(m,n.bufferSync(o),c,p,h,u,l,d,n.data.get(i.dataId).values[0],f);break;case"string":g=Bm(m,n.bufferSync(o),c,p,h,u,l,d,s.D5U.decodeString(n.data.get(i.dataId).values[0]),f);break;default:throw new Error("Unsupported type ".concat(o.dtype))}return n.makeTensorInfo(c,g.dtype,g.values)}};const ug={kernelName:s.L8s,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{numOrSizeSplits:o,axis:i}=a,c=s.D5U.parseAxisParam(i,r.shape)[0],l=s.backend_util.prepareSplitSize(r,o,c),u=new Array(r.shape.length).fill(0),h=r.shape.slice();return l.map((t=>{const e=[...h];e[c]=t;const a=Vh({inputs:{x:r},backend:n,attrs:{begin:u,size:e}});return u[c]+=t,a}))}},hg=wu((t=>Math.sqrt(t))),dg=ku(s.FKq,(t=>Math.sqrt(t))),pg={kernelName:s.FKq,backendName:"cpu",kernelFunc:dg},fg={kernelName:s.bK0,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n}=t;const{x:a}=e,s=n;bu(a,"square");const r=s.data.get(a.dataId).values,o=new Float32Array(r.length);for(let i=0;i<r.length;++i){const t=r[i];o[i]=t*t}return{dataId:s.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},mg=Au(((t,e)=>{const n=t-e;return n*n})),gg=Yu(s._tC,mg),yg={kernelName:s._tC,backendName:"cpu",kernelFunc:gg},bg=wu(((t,e)=>{const{pattern:n,replaceGlobal:a,rewrite:s}=e;return t.replace(new RegExp(n,a?"g":""),s)})),xg=Iu(s.e0R,bg),vg={kernelName:s.e0R,backendName:"cpu",kernelFunc:xg},wg=ku(s.h8e,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),kg={kernelName:s.h8e,backendName:"cpu",kernelFunc:wg};function Ig(t,e,n,a){const r=(0,s.f3b)(t,e.dtype);for(let s=0;s<r.size;s++){const t=r.indexToLoc(s),o=new Array(t.length);for(let e=0;e<o.length;e++)o[e]=t[e]*n[e]+a[e];r.set(e.get(...o),...t)}return r}const Sg={kernelName:s.jQk,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:o,end:i,strides:c,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=a;bu(r,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=s.kuN.sliceInfo(r.shape,o,i,c,l,u,h,d,p);let k;if(g)k=nh({inputs:{x:r},backend:n,attrs:{shape:m}});else if(y||b){s.D5U.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const t=s.kuN.computeOutShape(x,v,w),e=Vh({inputs:{x:r},backend:n,attrs:{begin:x,size:t}});k=nh({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(e)}else{const t=Ig(f,n.bufferSync(r),w,x);k=n.makeTensorInfo(m,t.dtype,t.values)}return k}};class Ng{constructor(t,e,n,a,r,o){this.separator=s.D5U.encodeString(t),this.nGramWidths=e,this.leftPad=s.D5U.encodeString(n),this.rightPad=s.D5U.encodeString(a),this.padWidth=r,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,a,s,r){for(let o=0;o<s;++o){const i=this.getPadWidth(r),c=Math.max(0,i-o),l=Math.max(0,i-(s-(o+1))),u=r-(c+l),h=e+(c>0?0:o-i);let d=0;d+=c*this.leftPad.length;for(let e=0;e<u;++e)d+=t[h+e].length;d+=l*this.rightPad.length;d+=(c+l+u-1)*this.separator.length,n[a+o]=new Uint8Array(d);const p=n[a+o];let f=0;const m=t=>t.forEach((t=>p[f++]=t));for(let t=0;t<c;++t)m(this.leftPad),m(this.separator);for(let e=0;e<u-1;++e)m(t[h+e]),m(this.separator);if(u>0){m(t[h+u-1]);for(let t=0;t<l;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;t<l-1;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,a=e.length;if(a>0){let t=e[0];if(0!==t)throw new Error("First split value must be 0, got ".concat(t));for(let s=1;s<a;++s){let a=e[s]>=t;if(a=a&&e[s]<=n,!a)throw new Error("Invalid split value ".concat(e[s],", must be in [").concat(t,", ").concat(n,"]"));t=e[s]}if(t!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(t))}const r=a-1,o=s.D5U.getArrayFromDType("int32",a);if(0===n||0===a){const t=new Array(n);for(let e=0;e<=r;++e)o[e]=0;return[t,o]}o[0]=0;for(let s=1;s<=r;++s){const t=e[s]-e[s-1];let n=0;this.nGramWidths.forEach((e=>{n+=this.getNumNGrams(t,e)})),this.preserveShort&&t>0&&0===n&&(n=1),o[s]=o[s-1]+n}const i=new Array(o[r]);for(let s=0;s<r;++s){const n=e[s];let a=o[s];if(this.nGramWidths.forEach((r=>{const o=e[s+1]-e[s],c=this.getNumNGrams(o,r);this.createNGrams(t,n,i,a,c,r),a+=c})),this.preserveShort&&a===o[s]){const r=e[s+1]-e[s];if(0===r)continue;const o=r+2*this.padWidth,c=1;this.createNGrams(t,n,i,a,c,o)}}return[i,o]}}function Tg(t,e,n,a,s,r,o,i){return new Ng(n,a,s,r,o,i).compute(t,e)}const Cg={kernelName:s._JP,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{separator:s,nGramWidths:r,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=e,d=n.data.get(u.dataId).values,p=n.data.get(h.dataId).values,[f,m]=Tg(d,p,s,r,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function Eg(t,e,n,a){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)a.push(t.subarray(e,e+1));return}if(1===e.length){const s=e[0];let r=t.indexOf(s);for(;-1!==r;){const e=t.subarray(0,r);n&&0===e.length||a.push(e),r=(t=t.subarray(r+1)).indexOf(s)}return void(n&&0===t.length||a.push(t))}let s=0;for(let r=0;r<t.length+1;r++)if(r===t.length||-1!==e.indexOf(t[r])){const e=t.subarray(s,r);n&&0===e.length||a.push(e),s=r+1}}function _g(t,e,n){const a=t.length,r=[];let o=0,i=0;const c=new Array(a);for(let s=0;s<a;++s){const a=r.length;Eg(t[s],e,n,r);const l=r.length-a;c[s]=l,o+=l,i=Math.max(i,l)}const l=s.D5U.getArrayFromDType("int32",2*o),u=new Array(o),h=[a,i];let d=0;for(let s=0;s<a;++s)for(let t=0;t<c[s];++t)l[2*d]=s,l[2*d+1]=t,u[d]=r[d],++d;return[l,u,h]}const Ag={kernelName:s.s1s,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{skipEmpty:s}=a,{input:r,delimiter:o}=e;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error("Input must be a vector, got shape: ".concat(r.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,h]=_g(i,c,s),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function Dg(t,e){const n=s.D5U.getArrayFromDType("int32",t.length);for(let a=0;a<t.length;++a)n[a]=s.D5U.fingerPrint64(t[a]).modulo(e).getLowBitsUnsigned();return n}const Rg={kernelName:s.XkS,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{numBuckets:s}=a,{input:r}=e;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=Dg(n.data.get(r.dataId).values,s);return n.makeTensorInfo(r.shape,"int32",o)}},Og=ku(s.sEM,(t=>Math.tan(t))),Fg={kernelName:s.sEM,backendName:"cpu",kernelFunc:Og},Mg=ku(s.MIZ,(t=>Math.tanh(t))),Bg={kernelName:s.MIZ,backendName:"cpu",kernelFunc:Mg};const Lg={kernelName:s.SIB,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{tensor:a,indices:r,updates:o}=e,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=s.backend_util.calculateShapes(o,r,a.shape),d=n.bufferSync(r),p=n.bufferSync(o),f=n.bufferSync(a),m=Bm(d,p,a.shape,h,l,c,i,u,f,!1);return n.makeTensorInfo(a.shape,m.dtype,m.values)}};function zg(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const a=(0,s.f3b)(n,t.dtype);for(let s=0;s<a.values.length;++s){const e=a.indexToLoc(s),n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=e[a]%t.shape[a];const r=t.locToIndex(n);a.values[s]=t.values[r]}return a}const Ug={kernelName:s.n9L,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{reps:r}=a;bu(s,"tile");const o=zg(n.bufferSync(s),r);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},Pg=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n};function Vg(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t.length-1;for(;a>n;){if(a-n>600){const s=a-n+1,r=e-n+1,o=Math.log(s),i=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*i*(s-i)/s)*Math.sign(r-s/2);Vg(t,e,Math.max(n,Math.floor(e-r*i/s+c)),Math.min(a,Math.floor(e+(s-r)*i/s+c)))}const r=t[e];let o=n,i=a;for(s.D5U.swap(t,n,e),Pg(t[a],r)>0&&s.D5U.swap(t,n,a);o<i;){for(s.D5U.swap(t,o,i),o++,i--;Pg(t[o],r)<0;)o+=1;for(;Pg(t[i],r)>0;)i-=1}0===Pg(t[n],r)?s.D5U.swap(t,n,i):(i+=1,s.D5U.swap(t,i,a)),i<=e&&(n=i+1),e<=i&&(a=i-1)}}function Wg(t,e,n,a,r){const o=e[e.length-1],[i,c]=[t.length/o,o],l=s.D5U.getTypedArrayFromDType(n,i*a),u=s.D5U.getTypedArrayFromDType("int32",i*a);for(let s=0;s<i;s++){const e=s*c,n=t.subarray(e,e+c);let o=new Array(n.length);n.forEach(((t,e)=>o[e]={value:t,index:e})),a<o.length&&(Vg(o,a),o=o.slice(0,a)),r&&o.sort(Pg);const i=s*a,h=l.subarray(i,i+a),d=u.subarray(i,i+a);for(let t=0;t<a;t++)h[t]=o[t].value,d[t]=o[t].index}const h=e.slice();return h[h.length-1]=a,[(0,s.f3b)(h,n,l),(0,s.f3b)(h,"int32",u)]}const Gg={kernelName:s.cWu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{k:r,sorted:o}=a;bu(s,"topk");const i=n.data.get(s.dataId).values,[c,l]=Wg(i,s.shape,s.dtype,r,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const Hg={kernelName:s.wx7,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{image:r,transforms:o}=e,{interpolation:i,fillMode:c,fillValue:l,outputShape:u}=n,[h,d,p,f]=r.shape,[m,g]=null!=u?u:[d,p],y=[h,m,g,f],b=s.D5U.computeStrides(r.shape),x=b[0],v=b[1],w=b[2],k=s.D5U.computeStrides(y),I=k[0],S=k[1],N=k[2],T=s.D5U.getTypedArrayFromDType(r.dtype,s.D5U.sizeFromShape(y));T.fill(l);const C=a.data.get(r.dataId).values,E=a.data.get(o.dataId).values;for(let s=0;s<h;++s){const t=1===o.shape[0]?E:E.subarray(8*s,8*s+8);for(let e=0;e<m;++e)for(let n=0;n<g;++n)for(let a=0;a<f;++a){let r;const o=t[6]*n+t[7]*e+1;if(0===o)continue;const u=(t[0]*n+t[1]*e+t[2])/o,h=(t[3]*n+t[4]*e+t[5])/o,f=jg(u,p,c),m=jg(h,d,c);switch(i){case"nearest":r=qg(C,d,p,x,v,w,s,m,f,a,l);break;case"bilinear":r=Kg(C,d,p,x,v,w,s,m,f,a,l);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(i))}T[s*I+e*S+n*N+a]=r}return a.makeTensorInfo(y,r.dtype,T)}return{dataId:a.write(T,y,r.dtype),shape:r.shape,dtype:r.dtype}}};function jg(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return s.D5U.clamp(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return s.D5U.clamp(0,n,e-1)}(t,e);case"nearest":return function(t,e){return s.D5U.clamp(0,t,e-1)}(t,e);default:return function(t,e){return t}(t)}}function Xg(t,e,n,a,s,r,o,i,c,l,u){return 0<=i&&i<e&&0<=c&&c<n?t[o*a+i*s+c*r+l]:u}function qg(t,e,n,a,s,r,o,i,c,l,u){return Xg(t,e,n,a,s,r,o,Math.round(i),Math.round(c),l,u)}function Kg(t,e,n,a,s,r,o,i,c,l,u){const h=Math.floor(i),d=Math.floor(c),p=h+1,f=d+1;return(p-i)*((f-c)*Xg(t,e,n,a,s,r,o,h,d,l,u)+(c-d)*Xg(t,e,n,a,s,r,o,h,f,l,u))+(i-h)*((f-c)*Xg(t,e,n,a,s,r,o,p,d,l,u)+(c-d)*Xg(t,e,n,a,s,r,o,p,f,l,u))}function Zg(t,e,n,a){const r=s.D5U.parseAxisParam(e,n)[0],o=[1,n[0],1];for(let s=0;s<r;s++)o[0]*=n[s];o[1]=n[r];for(let s=r+1;s<n.length;s++)o[2]*=n[s];const i=new Map,c=new Int32Array(n[r]),l=new s.YDk(o,a,t),u=[],h=1===o[0]&&1===o[2];for(let s=0;s<n[r];s++){let e;if(h)e=t[s].toString();else{const t=[];for(let e=0;e<o[0];e++)for(let n=0;n<o[2];n++)t.push(l.get(e,s,n));e=t.join(",")}const n=i.get(e);if(null!=n)c[s]=n;else{const t=i.size;i.set(e,t),c[s]=t,u.push(s)}}const d=o.slice();d[1]=i.size;const p=new s.YDk(d,a);u.forEach(((t,e)=>{for(let n=0;n<o[0];n++)for(let a=0;a<o[2];a++)p.set(l.get(n,t,a),n,e,a)}));const f=n.slice();return f[r]=d[1],{outputValues:p.values,outputShape:f,indices:c}}const Yg={kernelName:s.kpP,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{axis:s}=n,{x:r}=e;bu(r,"unique");const o=a.data.get(r.dataId).values,{outputValues:i,outputShape:c,indices:l}=Zg(o,s,r.shape,r.dtype);return[a.makeTensorInfo(c,r.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const Qg={kernelName:s.ToN,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{value:s}=e;let{axis:r}=a;r<0&&(r+=s.shape.length);const o=s.shape.length,i=s.shape[r],c=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==r&&(c[l++]=s.shape[p]);const u=new Array(o).fill(0),h=s.shape.slice();h[r]=1;const d=new Array(i);for(let p=0;p<d.length;p++){u[r]=p;const t=Vh({inputs:{x:s},backend:n,attrs:{begin:u,size:h}});d[p]=nh({inputs:{x:t},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(t)}return d}};const Jg={kernelName:s.Qvg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,segmentIds:o}=e,{numSegments:i}=a;bu(r,"unsortedSegmentSum");const c=[],l=[],u=r.shape.length-o.shape.length;let h=o;for(let s=0;s<u;++s){const t=ep({inputs:{input:h},backend:n,attrs:{dim:s+1}});h=t,l.push(t)}for(let p=0;p<i;++p){const t=s.D5U.createScalarValue(p,"int32"),e=n.makeTensorInfo([],"int32",t),a=Wd({inputs:{a:e,b:h},backend:n}),o=Ku({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),i=Md({inputs:{a:o,b:r},backend:n}),u=Ld({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});c.push(u),l.push(e),l.push(a),l.push(o),l.push(i),l.push(u)}const d=$f({inputs:c,backend:n,attrs:{axis:0}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},$g=[oh,ch,uh,dh,eh,ph,yh,bh,xh,vh,kh,Sh,Th,_h,Dh,Mh,Bh,Lh,zh,rh,Uh,Gh,Xh,Zh,Yh,Zu,$h,ed,Gu,nd,id,ld,ud,hd,dd,pd,fd,gd,bd,xd,vd,wd,kd,Id,Nd,Td,Cd,Ed,_d,Ad,Dd,Rd,Ud,Nu,Pd,Gd,Qd,tp,np,rp,gp,bp,xp,kp,Np,Tp,Cp,_p,Dp,Fp,Lp,Cu,zp,rd,Pp,Wp,Hp,_u,qp,Yp,Jp,ef,af,of,lf,df,pf,ff,yf,vf,wf,kf,If,Sf,Nf,Tf,Cf,Af,Df,Ff,Lf,Bd,Uf,Vf,Gf,jf,Kf,Zf,Jf,tm,em,sm,Ou,om,hm,fm,vm,km,Xu,cp,Sm,Mu,Lu,ah,Nm,Tm,Cm,Em,_m,Am,Rm,Mm,Lm,Pm,Vm,jm,Pu,qm,Zm,Qm,Wh,Bf,tg,eg,ag,rg,ig,cg,lg,ug,pg,fg,yg,vg,kg,Sg,Cg,Ag,Rg,dp,zd,Fg,Bg,Lg,Ug,Gg,Hg,gh,Yg,Qg,Jg,Qf];for(const PT of $g)(0,s.wCN)(PT);const ty={},ey={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ny(t,e){if(!(t in ty)||null!=e){const n=function(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?function(t){if((0,s.OBj)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==t){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(t):e;n.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete ty[t]}),!1),(0,s.OBj)().getBool("SOFTWARE_WEBGL_ENABLED")&&(ey.failIfMajorPerformanceCaveat=!1);if(1===t)return n.getContext("webgl",ey)||n.getContext("experimental-webgl",ey);return n.getContext("webgl2",ey)}(t,e);if(null===n)return console.log("Could not get context for WebGL version",t),null;ty[t]=n}const n=ty[t];return null==n||n.isContextLost()?(delete ty[t],ny(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ty[t])}var ay,sy,ry;function oy(t,e){return[e,t]}function iy(t){const e=s.D5U.sizeFromShape(t),n=Math.ceil(e/4);return s.D5U.sizeToSquarishShape(n)}function cy(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function ly(t,e){const n=t;let a,r,o,i,c,l,u,h,d,p;return 2===(0,s.OBj)().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,o=n.RGBA16F,i=n.RGBA32F,c=n.RED,u=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(a=t.RGBA,r=t.RGBA,o=t.RGBA,i=n.RGBA,c=t.RGBA,u=4,h=4,d=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT,l=t.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}function uy(t,e){const n=e();return(0,s.OBj)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(e)}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(ay||(ay={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(sy||(sy={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(ry||(ry={}));function hy(t){return!!((0,s.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function dy(t,e){return wy(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}const py=/ERROR: [0-9]+:([0-9]+):/g;function fy(t,e){const n=py.exec(e);if(null==n)return console.log("Couldn't parse line number in error: ".concat(e)),void console.log(t);const a=+n[1],r=t.split("\n"),o=r.length.toString().length+2,i=r.map(((t,e)=>s.D5U.rightPad((e+1).toString(),o)+t));let c=0;for(let s=0;s<i.length;s++)c=Math.max(i[s].length,c);const l=i.slice(0,a-1),u=i.slice(a-1,a),h=i.slice(a);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log("%c ".concat(s.D5U.rightPad(u[0],c)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}function my(t,e){if(uy(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function gy(t,e,n,a,s,r,o){const i=t.getAttribLocation(e,n);return-1!==i&&(uy(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,a))),uy(t,(()=>t.vertexAttribPointer(i,s,t.FLOAT,!1,r,o))),uy(t,(()=>t.enableVertexAttribArray(i))),!0)}function yy(t,e,n,a){uy(t,(()=>function(t,e,n){ky(t,n),uy(t,(()=>t.activeTexture(t.TEXTURE0+n))),uy(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,a))),uy(t,(()=>t.uniform1i(n,a)))}function by(t,e,n){uy(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),uy(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function xy(t,e){uy(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),uy(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function vy(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(e)}}(t,e))}function wy(t,e,n){const a=uy(t,(()=>e()));if(null==a)throw new Error(n);return a}function ky(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=e+t.TEXTURE0;if(a<t.TEXTURE0||a>n){const t="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(t,"."))}}function Iy(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return s.D5U.sizeFromShape(t.slice(0,t.length-e))}function Sy(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Ny(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Iy(t),...Sy(t)]),e}function Ty(t){return t%2===0}function Cy(t,e){if(t=t.slice(-2),e=e.slice(-2),s.D5U.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t[t.length-1],a=e[e.length-1];if(n===a)return!0;if(Ty(n)&&Ty(a)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Ty(t[0])&&Ty(e[0])}let Ey,_y;function Ay(t,e){return null!=t.getExtension(e)}function Dy(t){try{if(null!=ny(t))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Ry(t){if(0===t)return!1;const e=ny(t);if(1!==t){if(Ay(e,"EXT_color_buffer_float"))return Oy(e);const t="EXT_color_buffer_half_float";if(Ay(e,t)){const n=e.getExtension(t);return function(t,e){const n=ly(t,e),a=t.createTexture();t.bindTexture(t.TEXTURE_2D,a);const s=1,r=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,s,r,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,a,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(a),t.deleteFramebuffer(o),i}(e,n)}return!1}if(!Ay(e,"OES_texture_float"))return!1;if(!Ay(e,"WEBGL_color_buffer_float"))return!1;return Oy(e)}function Oy(t){const e=ly(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(a),s}function Fy(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&s.D5U.assert("complex64"!==t.dtype,(()=>"".concat(e," does not support complex64 tensors ")+"in the WebGL backend."))}))}const My=(0,s.OBj)();function By(){let t,e,n,a,r,o,i,c,l,u;return 2===(0,s.OBj)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",a="in",r="texture",o="outputColor",i="out vec4 outputColor;",c=(0,s.OBj)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",a="varying",r="texture2D",o="gl_FragColor",i="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:a,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:l,defineRound:u}}function Ly(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=s.D5U.computeStrides(e);return a.map(((e,s)=>{const r="int ".concat(t[s]," = ").concat(n," / ").concat(e),o=s===a.length-1?"int ".concat(t[s+1]," = ").concat(n," - ").concat(t[s]," * ").concat(e):"index -= ".concat(t[s]," * ").concat(e);return"".concat(r,"; ").concat(o,";")})).join("")}function zy(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=s.D5U.computeStrides(e);return a.map(((e,s)=>{const r="int ".concat(t[s]," = ").concat(n," / outShapeStrides[").concat(s,"]"),o=s===a.length-1?"int ".concat(t[s+1]," = ").concat(n," - ").concat(t[s]," * outShapeStrides[").concat(s,"]"):"index -= ".concat(t[s]," * outShapeStrides[").concat(s,"]");return"".concat(r,"; ").concat(o,";")})).join("")}function Uy(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(t,e){const n=t.length,a=t.map((t=>"".concat(e,"[").concat(t,"]"))),s=new Array(n-1);s[n-2]=a[n-1];for(let r=n-3;r>=0;--r)s[r]="(".concat(s[r+1]," * ").concat(a[r+1],")");return s}(t.map(((t,e)=>e)),e);return a.map(((e,s)=>{const r="int ".concat(t[s]," = ").concat(n," / ").concat(a[s]),o=s===a.length-1?"int ".concat(t[s+1]," = ").concat(n," - ").concat(t[s]," * ").concat(a[s]):"index -= ".concat(t[s]," * ").concat(a[s]);return"".concat(r,"; ").concat(o,";")})).join("")}function Py(t){const e=s.D5U.computeStrides(t).map((t=>t.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(e[0]," + coords.y * ").concat(e[1]," + coords.z;\n  }\n")}My.registerFlag("HAS_WEBGL",(()=>My.getNumber("WEBGL_VERSION")>0)),My.registerFlag("WEBGL_VERSION",(()=>Dy(2)?2:Dy(1)?1:0)),My.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),My.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===My.get("WEBGL_VERSION"))),My.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),My.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),My.registerFlag("WEBGL_PACK",(()=>My.getBool("HAS_WEBGL"))),My.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>My.getBool("WEBGL_PACK"))),My.registerFlag("WEBGL_PACK_CLIP",(()=>My.getBool("WEBGL_PACK"))),My.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>My.getBool("WEBGL_PACK"))),My.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>My.getBool("WEBGL_PACK"))),My.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>My.getBool("WEBGL_PACK"))),My.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>My.getBool("WEBGL_PACK"))),My.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>My.getBool("WEBGL_PACK"))),My.registerFlag("WEBGL_PACK_REDUCE",(()=>My.getBool("WEBGL_PACK"))),My.registerFlag("WEBGL_LAZILY_UNPACK",(()=>My.getBool("WEBGL_PACK"))),My.registerFlag("WEBGL_CONV_IM2COL",(()=>My.getBool("WEBGL_PACK"))),My.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>My.getBool("WEBGL_PACK"))),My.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==Ey){const e=ny(t);Ey=e.getParameter(e.MAX_TEXTURE_SIZE)}return Ey}(My.getNumber("WEBGL_VERSION")))),My.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==_y){const e=ny(t);_y=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,_y)}(My.getNumber("WEBGL_VERSION")))),My.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=My.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=ny(t);return e=Ay(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Ay(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),My.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>My.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.C2$.isMobile())),My.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=ny(t);if(1===t){if(!Ay(e,"OES_texture_float"))return!1}else if(!Ay(e,"EXT_color_buffer_float"))return!1;return Oy(e)}(My.getNumber("WEBGL_VERSION")))),My.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!My.getBool("WEBGL_FORCE_F16_TEXTURES")&&My.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),My.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>Ry(My.getNumber("WEBGL_VERSION")))),My.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=My.getNumber("WEBGL_VERSION"))&&null!=ny(t).fenceSync;var t})),My.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>My.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),My.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if("number"!==typeof t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(t,"."));if(t<0&&-1!==t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(t,"."))})),My.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>s.C2$.isMobile()?1:-1),(t=>{if("number"!==typeof t)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(t,"."));if(t<0&&-1!==t)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(t,"."))})),My.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),My.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),My.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),My.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),My.registerFlag("WEBGL_EXP_CONV",(()=>!1)),My.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>My.getBool("IS_TEST"))),My.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),My.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),My.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),My.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const Vy="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Wy}=s.backend_util;function Gy(t,e,n){const a=[];if(t.forEach((t=>{const e=s.D5U.sizeFromShape(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?a.push("uniform float ".concat(t.name).concat(e>1?"[".concat(e,"]"):"",";")):(a.push("uniform sampler2D ".concat(t.name,";")),a.push("uniform int offset".concat(t.name,";"))),n.enableShapeUniforms){const{uniformShape:e}=$y(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:a.push("uniform int ".concat(t.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(t.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(t.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(t.name,"Shape;"))}a.push("uniform ivec2 ".concat(t.name,"TexShape;"))}})),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((t=>{a.push("uniform ".concat(t.type," ").concat(t.name).concat(t.arrayIndex?"[".concat(t.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),o=t.map((t=>function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?jy(t,a):Hy(t,a);const o=t.shapeInfo.logicalShape,i=e.logicalShape;o.length<=i.length&&(r+=n?function(t,e){const n=t.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",o=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,c=Wy(t.shapeInfo.logicalShape,e.logicalShape),l=Jy(i),u=i-o;let h;const d=["x","y","z","w","u","v"];h=0===o?"":i<2&&c.length>=1?"coords = 0;":c.map((t=>"coords.".concat(d[t+u]," = 0;"))).join("\n");let p="";p=i<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords.".concat(d[e+u]))).join(", ");let f="return outputValue;";const m=1===s.D5U.sizeFromShape(t.shapeInfo.logicalShape),g=s.D5U.sizeFromShape(e.logicalShape),y=1===g;if(1!==o||m||y){if(m&&!y)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const t=o-2,e=o-1;c.indexOf(t)>-1&&c.indexOf(e)>-1?f="return vec4(outputValue.x);":c.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(h,"\n      vec4 outputValue = get").concat(a,"(").concat(p,");\n      ").concat(f,"\n    }\n  ")}(t,e):function(t,e){const n=t.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",o=e.texShape,i=t.shapeInfo.texShape,c=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&c===l&&null==t.shapeInfo.flatOffset&&s.D5U.arraysEqual(i,o))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const u=Jy(l),h=Wy(t.shapeInfo.logicalShape,e.logicalShape),d=l-c;let p;const f=["x","y","z","w","u","v"];p=0===c?"":l<2&&h.length>=1?"coords = 0;":h.map((t=>"coords.".concat(f[t+d]," = 0;"))).join("\n");let m="";m=l<2&&c>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords.".concat(f[e+d]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(p,"\n      return get").concat(a,"(").concat(m,");\n    }\n  ")}(t,e));return r}(t,e,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=e.texShape,c=By(),l=function(t){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(t.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(c);let u,h,d=function(t){const e="".concat(t.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(t.varyingFs," vec2 resultUV;\n    ").concat(t.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(t.defineSpecialNaN,"\n    ").concat(t.defineSpecialInf,"\n    ").concat(t.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(Xy,"\n    ").concat(qy,"\n    ").concat(Ky,"\n  ");return e}(c);e.isPacked?(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,e,n);case 2:return function(t,e,n){const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(s.D5U.arraysEqual(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(t[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(t,e,n);case 3:return function(t,e,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),r=s*Math.ceil(t[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(r,";\n      index -= b * ").concat(r,";\n\n      int r = 2 * (index / ").concat(s,");\n      int c = imod(index, ").concat(s,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(t,e,n);default:return function(t,e,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),r=s*Math.ceil(t[t.length-2]/2);let o=r,i="",c="b, r, c";for(let l=2;l<t.length-1;l++)o*=t[t.length-l-1],i="\n      int b".concat(l," = index / ").concat(o,";\n      index -= b").concat(l," * ").concat(o,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(t.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(r,";\n      index -= b * ").concat(r,";\n\n      int r = 2 * (index / ").concat(s,");\n      int c = imod(index, ").concat(s,") * 2;\n\n      return ivec").concat(t.length,"(").concat(c,");\n    }\n  ")}(t,e,n)}}(e.logicalShape,i,n.enableShapeUniforms),h=function(t){return"\n    void setOutput(vec4 val) {\n      ".concat(t.output," = val;\n    }\n  ")}(c)):(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){if(1===e[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(e[1],".0);\n      }\n    ");if(1===e[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(e[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      return resTexRC.x * ").concat(e[1]," + resTexRC.y;\n    }\n  ")}(0,e,n);case 2:return function(t,e,n){if(s.D5U.arraysEqual(t,e))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(e[0],", ").concat(e[1],"));\n      }\n    ");if(1===t[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===t[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      int r = index / ").concat(t[1],";\n      int c = index - r * ").concat(t[1],";\n      return ivec2(r, c);\n    }\n  ")}(t,e,n);case 3:return function(t,e,n){if(n){const e=zy(["r","c","d"],t);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(e,"\n    return ivec3(r, c, d);\n  }\n")}const a=Ly(["r","c","d"],t);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,e,n);case 4:return function(t,e,n){if(n){const e=zy(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(e,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=Ly(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(t,e,n);case 5:return function(t,e){const n=Ly(["r","c","d","d2","d3"],t);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(e[0],",\n                             ").concat(e[1],"));\n\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(t,e);case 6:return function(t,e){const n=Ly(["r","c","d","d2","d3","d4"],t);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(t,e);default:throw new Error("".concat(t.length,"-D output sampling is not yet supported"))}}(e.logicalShape,i,n.enableShapeUniforms),h=function(t){return"\n    void setOutput(float val) {\n      ".concat(t.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(c)),n.packedInputs&&(d+=Zy);return[d,l,h,r,u,o,n.userCode].join("\n")}function Hy(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[s,r]=t.shapeInfo.texShape;if(1===s&&1===r)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=Yy(n);if(e)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=t.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t,e);case 1:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(Qy(t),"\n      }\n    ");const s=t.shapeInfo.texShape,r=s[0],o=s[1];if(1===o&&1===r)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=Yy(n);if(1===o)return e?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(r,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===r)return e?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(e)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(r,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=t.shapeInfo.texShape;if(null!=o&&s.D5U.arraysEqual(n,o)){if(e)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const t=o[0],n=o[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(t,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:i,keptDims:c}=s.D5U.squeezeShape(n),l=i;if(l.length<n.length){const n=tb(t,l),a=["row","col"];return"\n      ".concat(Hy(n,e),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(eb(a,c),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(Qy(t),"\n      }\n    ");const u=o[0],h=o[1],d=Yy(a);if(1===h)return e?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(u,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===u)return e?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(h,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(e)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(d,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(d,";\n    vec2 uv = uvFromFlat(").concat(u,", ").concat(h,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[1]*n[2],i=n[2],{newShape:c,keptDims:l}=s.D5U.squeezeShape(n),u=c;if(u.length<n.length){const n=tb(t,u),a=["row","col","depth"];return"\n        ".concat(Hy(n,e),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(eb(a,l),");\n        }\n      ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(o,", ").concat(i,", 1)));\n        ").concat(Qy(t),"\n      }\n    ");const h=t.shapeInfo.texShape,d=h[0],p=h[1],f=t.shapeInfo.flatOffset;if(p===o&&null==f)return e?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(i,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p,".0, ").concat(d,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(p===i&&null==f)return e?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p,".0, ").concat(d,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const m=Yy(a);if(e)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(o," + col * ").concat(i," + depth + ").concat(m,";\n        vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(t,e);case 4:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[3],i=n[2]*o,c=n[1]*i,{newShape:l,keptDims:u}=s.D5U.squeezeShape(n);if(l.length<n.length){const n=tb(t,l),a=["row","col","depth","depth2"];return"\n      ".concat(Hy(n,e),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(eb(a,u),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(c,", ").concat(i,", ").concat(o,", 1)));\n        ").concat(Qy(t),"\n      }\n    ");const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1],m="int stride2 = ".concat(a,"Shape[3];"),g="int stride1 = ".concat(a,"Shape[2] * stride2;"),y="int stride0 = ".concat(a,"Shape[1] * stride1;");if(f===c&&null==h)return e?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(m,"\n        ").concat(g,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(i,", ").concat(o,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(f===o&&null==h)return e?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const b=Yy(a);if(e)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(m,"\n      ").concat(g,"\n      ").concat(y,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(b,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," +\n          depth * ").concat(o," + depth2;\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index + ").concat(b,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(t,e);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],o=e[3]*r,i=e[2]*o,c=e[1]*i,{newShape:l,keptDims:u}=s.D5U.squeezeShape(e);if(l.length<e.length){const e=tb(t,l),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(Hy(e),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(eb(n,u),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(c,", ").concat(i,", ").concat(o,", ").concat(r,")) +\n          depth3;\n        ").concat(Qy(t),"\n      }\n    ");const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(i,", ").concat(o,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===r&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3],",\n               ").concat(e[2]*e[3],", ").concat(e[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=Yy(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," + depth * ").concat(o," +\n          depth2 * ").concat(r," + depth3 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:o}=s.D5U.squeezeShape(e);if(r.length<e.length){const e=tb(t,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(Hy(e),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(eb(n,o),");\n      }\n    ")}const i=e[5],c=e[4]*i,l=e[3]*c,u=e[2]*l,h=e[1]*u;if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(h,", ").concat(u,", ").concat(l,", ").concat(c,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(i,", 1)));\n        ").concat(Qy(t),"\n      }\n    ");const d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],m=p[1];if(m===h&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(m===i&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3]*e[4],",\n               ").concat(e[2]*e[3]*e[4],",\n               ").concat(e[3]*e[4],",\n               ").concat(e[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const g=Yy(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(h," + col * ").concat(u," + depth * ").concat(l," +\n          depth2 * ").concat(c," + depth3 * ").concat(i," + depth4 + ").concat(g,";\n      vec2 uv = uvFromFlat(").concat(f,", ").concat(m,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function jy(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),a=By();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(e,", halfCR);\n    }\n  ")}(t);case 1:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,r=By();if(e)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=t.shapeInfo.texShape,i=o[0],c=o[1],l=By();if(null!=o&&s.D5U.arraysEqual(n,o))return e?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(c,".0, ").concat(i,".0);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    ");if(e)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ");const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],h=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(h,", ").concat(u[0],", ").concat(u[1],", row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ")}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),r=t.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===n[0]){const a=[1,2],r=tb(t,n.slice(1)),o=["b","row","col"];return"\n        ".concat(jy(r,e),"\n        vec4 ").concat(s,"(int b, int row, int col) {\n          return ").concat(s,"(").concat(eb(o,a),");\n        }\n      ")}const i=By();if(e)return"\n    vec4 ".concat(s,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=o[0],l=o[1],u=Math.ceil(n[2]/2),h=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(s,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(h,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(t,e);default:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=By();if(e)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const r=t.shapeInfo.logicalShape,o=r.length,i=t.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],h=Math.ceil(r[o-1]/2);let d=h*Math.ceil(r[o-2]/2),p="int b, int row, int col",f="b * ".concat(d," + (row / 2) * ").concat(h," + (col / 2)");for(let m=2;m<o-1;m++)p="int b".concat(m,", ")+p,d*=r[o-m-1],f="b".concat(m," * ").concat(d," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t,e)}}const Xy="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",qy="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ky="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Zy="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Yy(t){return"offset".concat(t)}function Qy(t){const e=t.name,n=s.D5U.sizeFromShape(t.shapeInfo.logicalShape);return n<2?"return ".concat(e,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(e,"[i];\n      }\n    }\n  ")}function Jy(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error("GPU for rank ".concat(t," is not yet supported"))}function $y(t,e,n){const{newShape:a,keptDims:r}=s.D5U.squeezeShape(e),o=e.length,i=t&&3===o&&1===e[0],c=i?e.slice(1):a,l=!t&&o>1&&!s.D5U.arraysEqual(e,n)&&a.length<o||i;return{useSqueezeShape:l,uniformShape:l?c:e,keptDims:r}}function tb(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function eb(t,e){return e.map((e=>t[e])).join(", ")}function nb(t,e,n,a){const r=n.map(((t,n)=>{const a={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(a.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:a}})),o=r.map((t=>t.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},c=Gy(r,i,e),l=function(t,e){const n=wy(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(uy(t,(()=>t.shaderSource(n,e))),uy(t,(()=>t.compileShader(n))),(0,s.OBj)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw fy(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t.gl,c),u=t.createProgram(l);return(0,s.OBj)().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(u),Object.assign({program:e,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:o,outShapeInfo:i},ab(t,e,u)))}function ab(t,e,n){const a=[],r=[];let o,i,c,l=null,u=null;u=t.getUniformLocation(n,"NAN",!1),1===(0,s.OBj)().getNumber("WEBGL_VERSION")&&(l=t.getUniformLocation(n,"INFINITY",!1));const h=!1;for(const s of e.variableNames){const r={name:s,uniform:t.getUniformLocation(n,s,h),offset:t.getUniformLocation(n,"offset".concat(s),h)};e.enableShapeUniforms&&(r.shape=t.getUniformLocation(n,"".concat(s,"Shape"),h),r.texShape=t.getUniformLocation(n,"".concat(s,"TexShape"),h)),a.push(r)}if(e.enableShapeUniforms&&(o=t.getUniformLocation(n,"outShape",h),c=t.getUniformLocation(n,"outShapeStrides",h),i=t.getUniformLocation(n,"outTexShape",h)),e.customUniforms)for(const s of e.customUniforms)r.push(t.getUniformLocation(n,s.name,h));return{variablesLocations:a,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:o,outShapeStridesLocation:c,outTexShapeLocation:i}}function sb(t,e){if(t.length!==e.length)throw Error("Binary was compiled with ".concat(t.length," inputs, but ")+"was executed with ".concat(e.length," inputs"));t.forEach(((t,n)=>{const a=t.logicalShape,r=e[n],o=r.shape;if(!s.D5U.arraysEqual(a,o))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(o," must match"));if(t.isUniform&&r.isUniform)return;const i=t.texShape,c=r.isUniform?null:r.texData.texShape;if(!s.D5U.arraysEqual(i,c))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(i," and ").concat(c," must match"))}))}function rb(t){return(0,s.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}class ob{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ay.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=By();this.outputShape=t,this.enableShapeUniforms=rb(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?zy(["r","c","d"],t):Ly(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}class ib{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ay.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=By();this.outputShape=t,this.enableShapeUniforms=rb(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?zy(["r","c","d"],t):Ly(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}class cb{constructor(t){this.variableNames=["A"],this.outTexUsage=sy.DOWNLOAD;const e=By();this.outputShape=t,this.userCode="\n      ".concat(Vy,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}class lb{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=sy.DOWNLOAD;const e=By();this.outputShape=t,this.userCode="\n      ".concat(Vy,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}const ub={R:0,G:1,B:2,A:3};class hb{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=By();this.outputShape=t,this.enableShapeUniforms=rb(this.outputShape.length);let s="result";e&&(s="floor(result * 255. + 0.5)");let r="";for(let o=0;o<n.length;o++){const t=n[o];r+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(ub[t],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Py(t),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(r,"\n        }\n        ").concat(a.output," = vec4(").concat(s,", 0., 0., 0.);\n      }\n    ")}}class db{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=By();this.outputShape=t,this.enableShapeUniforms=rb(this.outputShape.length);let a="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let r=0;r<=1;r++)for(let e=0;e<=1;e++){const s=2*r+e;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(e," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(t[2]),") {\n          localCoords[2] += ").concat(e,";\n          if (localCoords[1] + ").concat(r," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(t[1]),") {\n            localCoords[1] += ").concat(r,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(s,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(s,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(s,"] = values[2];\n            } else {\n              result[").concat(s,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Py(t),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(s,";\n        }\n    ")}}function pb(t){const e=By();return function(t,e){const n=wy(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(uy(t,(()=>t.shaderSource(n,e))),uy(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,"".concat(e.version,"\n    precision highp float;\n    ").concat(e.attribute," vec3 clipSpacePos;\n    ").concat(e.attribute," vec2 uv;\n    ").concat(e.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function fb(t){return function(t,e){const n=wy(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return uy(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),uy(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function mb(t){return function(t,e){const n=wy(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return uy(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),uy(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}function gb(t,e,n,a,r,o){!function(t,e){const n=(0,s.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const n="[".concat(t,"x").concat(e,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(t>n||e>n){const a="[".concat(t,"x").concat(e,"]"),s="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+s+".")}}(e,n);const i=function(t){return wy(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),c=t.TEXTURE_2D;return uy(t,(()=>t.bindTexture(c,i))),uy(t,(()=>t.texParameteri(c,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),uy(t,(()=>t.texParameteri(c,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),uy(t,(()=>t.texParameteri(c,t.TEXTURE_MIN_FILTER,t.NEAREST))),uy(t,(()=>t.texParameteri(c,t.TEXTURE_MAG_FILTER,t.NEAREST))),1===(0,s.OBj)().getNumber("WEBGL_VERSION")?uy(t,(()=>t.texImage2D(c,0,a,e,n,0,r,o,null))):uy(t,(()=>t.texStorage2D(c,1,a,e,n))),uy(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),{texture:i,texShape:[n,e]}}function yb(t){return t.internalFormatFloat}function bb(t){return t.internalFormatHalfFloat}function xb(t){return t.downloadTextureFormat}function vb(t){return t.internalFormatPackedFloat}function wb(t){return t.internalFormatPackedHalfFloat}function kb(t,e,n,a,s,r,o,i){const c=t,l=new Float32Array(function(t,e){const[n,a]=cy(t,e);return n*a*4}(r,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class Ib{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=(0,s.OBj)().getNumber("WEBGL_VERSION");if(null!=t?(this.gl=t,function(t,e){ty[t]=e}(e,t)):this.gl=ny(e),t=this.gl,2===(0,s.OBj)().getNumber("WEBGL_VERSION")){const e=t;this.createVertexArray=()=>uy(e,(()=>e.createVertexArray())),this.bindVertexArray=t=>uy(e,(()=>e.bindVertexArray(t))),this.deleteVertexArray=t=>uy(e,(()=>e.deleteVertexArray(t))),this.getVertexArray=()=>uy(e,(()=>e.getParameter(e.VERTEX_ARRAY_BINDING)))}else if(null!=t){const e=t.getExtension("OES_vertex_array_object");if(null==e)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>uy(t,(()=>e.createVertexArrayOES())),this.bindVertexArray=n=>uy(t,(()=>e.bindVertexArrayOES(n))),this.deleteVertexArray=n=>uy(t,(()=>e.deleteVertexArrayOES(n))),this.getVertexArray=()=>uy(t,(()=>t.getParameter(e.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,s.OBj)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=dy(this.gl,t),Ay(this.gl,e))this.textureHalfFloatExtension=dy(this.gl,e);else if((0,s.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Ay(this.gl,a))this.colorBufferHalfFloatExtension=dy(this.gl,a);else if((0,s.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Ay(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Ay(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=fb(this.gl),this.indexBuffer=mb(this.gl),this.framebuffer=function(t){return wy(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=ly(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,s.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;uy(t,(()=>t.finish())),uy(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),uy(t,(()=>t.deleteFramebuffer(this.framebuffer))),uy(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),uy(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),uy(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,r]=oy(e,n);return gb(t,s,r,yb(a),a.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,r]=oy(e,n);return gb(t,s,r,bb(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,r]=oy(e,n);return gb(t,s,r,xb(a),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){uy(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?2===(0,s.OBj)().getNumber("WEBGL_VERSION")?uy(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data))):uy(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):2===(0,s.OBj)().getNumber("WEBGL_VERSION")?uy(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n))):uy(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),uy(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,a){this.throwIfDisposed(),function(t,e,n,a,r,o){let i,c,l;uy(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),r instanceof Uint8Array?(i=new Uint8Array(n*a*4),c=t.UNSIGNED_BYTE,l=t.RGBA):(i=new Float32Array(n*a*4),c=t.FLOAT,l=o.internalFormatPackedFloat),i.set(r),2===(0,s.OBj)().getNumber("WEBGL_VERSION")?uy(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,a,t.RGBA,c,i))):uy(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,a,0,t.RGBA,c,i))),uy(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,r]=cy(e,n);return gb(t,s,r,wb(a),t.RGBA,a.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,r]=cy(e,n);return gb(t,s,r,vb(a),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(xy(this.gl,this.framebuffer),this.outputTexture=null),uy(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,a){const[s,r]=oy(e,n),o=new Uint8Array(e*n*4);return uy(t,(()=>t.readPixels(0,0,s,r,a.downloadTextureFormat,t.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,a,s,r){return kb(this.gl,t,0,0,0,s,r,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const a=t,s=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,e),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,s),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const a=function(t,e,n,a){const s=t.createBuffer();uy(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const r=16*e*n;return uy(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,r,t.STREAM_READ))),uy(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),uy(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if((0,s.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const a=t,s=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=a.clientWaitSync(s,0,0);return t===a.ALREADY_SIGNALED||t===a.CONDITION_SATISFIED},e=s}else(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const a=new Float32Array(e*n*4);return uy(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,a))),a}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=pb(e));const n=function(t){return wy(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);uy(e,(()=>e.attachShader(n,this.vertexShader))),uy(e,(()=>e.attachShader(n,t))),function(t,e){if(uy(t,(()=>t.linkProgram(e))),!(0,s.OBj)().get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&my(e,a),a}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;uy(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(t,e,n){uy(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),gy(t,e,"clipSpacePos",n,3,20,0)&&gy(t,e,"uv",n,2,20,12)}(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&(uy(this.gl,(()=>this.gl.deleteProgram(t))),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&my(this.gl,this.program),uy(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(t,e,n){return wy(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),uy(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),yy(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[a,s]=cy(e,n);this.setOutputMatrixTextureDriver(t,a,s)}setOutputMatrixWriteRegion(t,e,n,a){this.setOutputMatrixWriteRegionDriver(n,t,a,e)}setOutputPackedMatrixWriteRegion(t,e,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&my(this.gl,this.program),vy(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}uy(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),uy(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=dy(this.gl,2===(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await s.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(t,(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,s.OBj)().platform&&(n=(0,s.OBj)().platform.setTimeoutCustom.bind((0,s.OBj)().platform)),s.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),by(this.gl,t,this.framebuffer),this.debug&&vy(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(by(this.gl,this.outputTexture,this.framebuffer),this.debug&&vy(this.gl)):xy(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const a=this.gl;by(a,t,this.framebuffer),this.debug&&vy(a),this.outputTexture=t,uy(a,(()=>a.viewport(0,0,e,n))),uy(a,(()=>a.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,a){this.throwIfDisposed(),uy(this.gl,(()=>this.gl.scissor(t,e,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:Sb,bincountImpl:Nb,bincountReduceImpl:Tb,bitwiseAndImpl:Cb,castImpl:Eb,ceilImpl:_b,concatImpl:Ab,equalImpl:Db,expImpl:Rb,expm1Impl:Ob,floorImpl:Fb,gatherNdImpl:Mb,gatherV2Impl:Bb,greaterImpl:Lb,greaterEqualImpl:zb,lessImpl:Ub,lessEqualImpl:Pb,linSpaceImpl:Vb,logImpl:Wb,maxImpl:Gb,maximumImpl:Hb,minimumImpl:jb,multiplyImpl:Xb,negImpl:qb,notEqualImpl:Kb,prodImpl:Zb,raggedGatherImpl:Yb,raggedRangeImpl:Qb,raggedTensorToTensorImpl:Jb,rangeImpl:$b,rsqrtImpl:tx,scatterImpl:ex,sigmoidImpl:nx,simpleAbsImpl:ax,sliceImpl:sx,sparseFillEmptyRowsImpl:rx,sparseReshapeImpl:ox,sparseSegmentReductionImpl:ix,sqrtImpl:cx,staticRegexReplaceImpl:lx,stridedSliceImpl:ux,stringNGramsImpl:hx,stringSplitImpl:dx,stringToHashBucketFastImpl:px,subImpl:fx,tileImpl:mx,topKImpl:gx,transposeImpl:yx,uniqueImpl:bx}=a;function xx(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>"".concat(t,".").concat(e)))}function vx(t,e){return 1===e?[t]:xx(t,e)}class wx{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=rb(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=vx("rc",this.rank),e=Jy(this.rank),n=this.getOutOfBoundsCondition(t),a=this.getSetup(t),s=this.getOutput(t);this.userCode="\n        void main() {\n          ".concat(e," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(s,"));\n          }\n        }\n      ")}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let s="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let e=2;e<this.rank;e++)s="".concat(t[t.length-1-e],",")+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let e="";for(let n=this.rank-2;n<this.rank;n++)e+="".concat(t[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(e[0],";\n      int c = ").concat(e[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(t){const e=this.getSourceCoordsArr(t);if(1===this.rank){const t=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(t," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(e[0],"),\n            cEdge ? 0. : getA(").concat(e[1],"),\n            rEdge ? 0. : getA(").concat(e[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(e[3],")")}}class kx{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=rb(this.outputShape.length);let n="";for(let a=0;a<4;a++){let t="thisRC = rc;";a%2===1&&(t+="thisRC.z += 1;"),a>1&&(t+="thisRC.y += 1;"),n+="\n        ".concat(t,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(t,e){const n=e?Uy(["r","c","d"],"inputShape"):Ly(["r","c","d"],t);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Py(t),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":t[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":t[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class Ix{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,n){const a=Nx(e,n),s=Tx(t,a,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const r=Sx(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=r,this.log();const t=this.freeTextures[s].pop();return this.usedTextures[s].push(t),t}let o;return a===ry.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):a===ry.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):a===ry.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):a===ry.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):a===ry.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=r,this.log(),o}releaseTexture(t,e,n,a){if(null==this.freeTextures)return;const r=Nx(n,a),o=Tx(e,r,a);o in this.freeTextures||(this.freeTextures[o]=[]);const i=Sx(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),c=(0,s.OBj)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=i):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[o],u=l&&l.indexOf(t);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(t,")"));const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*e),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Sx(t,e,n,a,s){const r=function(t,e){switch(t){case ry.PACKED_2X2_FLOAT32:return vb(e);case ry.PACKED_2X2_FLOAT16:return wb(e);case ry.UNPACKED_FLOAT32:return yb(e);case ry.UNPACKED_FLOAT16:return bb(e);case ry.PACKED_4X1_UNSIGNED_BYTE:return xb(e);default:throw new Error("Unknown physical texture type ".concat(t))}}(e,a);let o;if(s){const[e,n]=cy(t[0],t[1]);o=e*n}else{const[e,n]=oy(t[0],t[1]);o=e*n}const i=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(e))}(n,r);return o*i}function Nx(t,e){if(t===sy.UPLOAD)return ry.PACKED_2X2_FLOAT32;if(t===sy.RENDER||null==t)return function(t){return(0,s.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?ry.PACKED_2X2_FLOAT32:ry.UNPACKED_FLOAT32:t?ry.PACKED_2X2_FLOAT16:ry.UNPACKED_FLOAT16}(e);if(t===sy.DOWNLOAD||t===sy.PIXELS)return ry.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(t))}function Tx(t,e,n){return"".concat(t[0],"_").concat(t[1],"_").concat(e,"_").concat(n)}class Cx{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=rb(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const Ex="if (isnan(x)) return x;",_x="return x;",Ax="return abs(x);";const Dx="return (x >= 0.0) ? x : (exp(x) - 1.0);",Rx=Ex+"\n  return (x < 0.0) ? 0.0 : x;\n",Ox=Ex+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Fx="return x;",Mx="return 1.0 / (1.0 + exp(-1.0 * x));",Bx="return x;",Lx="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",zx="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Ux="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Px="return 1.0 / (1.0 + exp(-1.0 * x));";class Vx{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=rb(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class Wx{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=rb(this.outputShape.length);const e=t.length,n=vx("rc",e),a=Jy(e),s=function(t,e){if(1===t)return"rc";let n="";for(let a=0;a<t;a++)n+=e[a],a<t-1&&(n+=",");return n}(e,n),r=n.slice(-2),o=e<=1?"rc":"vec2(".concat(r.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(s,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const Gx=s.GDt.ZA,Hx={};const jx=(0,s.OBj)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Xx extends s.Zuw{nextDataId(){return Xx.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,s.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof Ib)e=t;else{const n=ny((0,s.OBj)().getNumber("WEBGL_VERSION"),t);e=new Ib(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=ny((0,s.OBj)().getNumber("WEBGL_VERSION"));e=new Ib(t),this.binaryCache=((n=(0,s.OBj)().getNumber("WEBGL_VERSION"))in Hx||(Hx[n]={}),Hx[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Ix(this.gpgpu),this.numMBBeforeWarning=null==(0,s.OBj)().global.screen?1024:(0,s.OBj)().global.screen.height*(0,s.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new s.JLz(this,(0,s.SRH)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,n,a,s,r){const o=this.makeTensorInfo(e,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:t,texShape:[a,s]},i.texShape=[a,s];const c=Ny(e),l=new hb(c,!1,r),u=this.runWebGLProgram(l,[o],n,[[a,s]]);return u.shape=e,i.texture=null,this.disposeIntermediateTensorInfo(o),u.dataId}write(t,e,n){if(((0,s.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,s.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:e,dtype:n,values:t,usage:sy.UPLOAD,refCount:1}),a}refCount(t){if(this.texData.has(t)){return this.texData.get(t).refCount}return 0}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,a,r){if((0,s.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:a,values:e,usage:sy.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:a,complexTensorInfos:r,slice:o,shape:i,isPacked:c}=e;if(null!=o){let e;e=c?new Vx(i,Fx):new Cx(i,Fx);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:a}],a),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===a)return n;const l=null!=this.activeTimers;let u,h;if(l&&(u=s.D5U.now()),"complex64"===a){const t=this.readSync(r.real.dataId),e=this.readSync(r.imag.dataId);h=s.backend_util.mergeRealAndImagArrays(t,e)}else h=this.getValuesFromTexture(t);return l&&(this.downloadWaitMs+=s.D5U.now()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:a,slice:r,dtype:o,complexTensorInfos:i,isPacked:c}=e;if(null!=r){let e;e=c?new Vx(a,Fx):new Cx(a,Fx);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:o}],o),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if((0,s.OBj)().getBool("DEBUG")&&!(0,s.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,s.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==o&&(0,s.OBj)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(e.texture.texture,...iy(a))}if(this.pendingRead.set(t,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),e=t[0],n=t[1];u=s.backend_util.mergeRealAndImagArrays(e,n)}else if(null==h)u=this.getValuesFromTexture(t);else{const t=s.D5U.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,t)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=h){const t=this.gpgpu.gl;uy(t,(()=>t.deleteBuffer(h)))}const d=this.convertAndCacheOnCPU(t,u),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach((t=>t(d))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&(0,s.SRH)().removeDataId(t,this),this.pendingDeletes--),d}readToGPU(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(t),{values:a,shape:r,slice:o,dtype:i,isPacked:c,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=o){let n;n=c?new Vx(r,Fx):new Cx(r,Fx);const a=this.runWebGLProgram(n,[{dataId:t,shape:r,dtype:i}],i),s=this.readToGPU(a,e);return this.disposeIntermediateTensorInfo(a),s}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),h=(0,s.SRH)().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>s.D5U.decodeString(t)));return(0,s.f3b)(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,s.f3b)(t.shape,t.dtype,e)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!hy(n)){if((0,s.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:a}=this.texData.get(t),r=s.D5U.sizeFromShape(e);if((0,s.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...iy(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const o=(0,s.OBj)().getBool("WEBGL_PACK")&&!0===a,i=o?Ny(e):e,c=o?new lb(i):new cb(i),l=this.runWebGLProgram(c,[{shape:i,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=s.D5U.flatten(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),o=s.D5U.flatten(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(r);i.kernelMs=s.D5U.sum(t),i.getExtraProfileInfo=()=>t.map(((t,e)=>({name:o[e],ms:t}))).map((t=>"".concat(t.name,": ").concat(t.ms))).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.D5U.now(),endMs:null}}endTimer(t){return(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=s.D5U.now(),t)}async getQueryTime(t){if((0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:a,usage:s,isPacked:r,slice:o}=this.texData.get(t),i=o&&o.origDataId||t,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=e&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(e,a,s,r)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:jx;return(0,s.OBj)().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&s.D5U.sizeFromShape(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){s.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Gx(t.shape,e)}packedUnaryOp(t,e,n){const a=new Vx(t.shape,e),r=this.compileAndRun(a,[t],n);return(0,s.SRH)().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=ax(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if((0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Ax,t.dtype);const e=new Cx(t.shape,Ax),n=this.compileAndRun(e,[t]);return(0,s.SRH)().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let a;if("string"===e&&null!=n&&n.length>0&&s.D5U.isString(n[0])){const r=n.map((t=>s.D5U.encodeString(t)));a=this.write(r,t,e)}else a=this.write(n,t,e);return this.texData.get(a).usage=null,{dataId:a,shape:t,dtype:e}}makeOutput(t,e,n){return(0,s.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new Wx(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new wx(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Iy(t.shape),...Sy(t.shape)],a={dtype:t.dtype,shape:n,dataId:t.dataId},s=[Iy(e),...Sy(e)],r=new kx(s,n),o=[n],i=this.runWebGLProgram(r,[a],t.dtype,o,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:a,shape:r,dtype:o}=n;if(null!=e){const t=s.D5U.sizeFromShape(r),n=e[0]*e[1]*4;s.D5U.assert(t<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=Ny(r);let c;c=a?new ib(i):new ob(i);const l=[null!=e?e:iy(i)];return{dtype:o,shape:r,dataId:this.runWebGLProgram(c,[{shape:i,dtype:o,dataId:t}],o,l,!0,e).dataId}}runWebGLProgram(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(t.outputShape,n),c=this.texData.get(i.dataId);if(t.packedOutput&&(c.isPacked=!0),t.outPackingScheme===ay.DENSE){const e=null!=o?o:iy(t.outputShape);c.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(c.usage=t.outTexUsage),0===s.D5U.sizeFromShape(i.shape))return c.values=s.D5U.getTypedArrayFromDType(i.dtype,0),i;const l=[],u=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&s.D5U.sizeFromShape(e.shape)<=(0,s.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!==!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),l.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!Cy(n.shape,e.shape)){const t=e,a=e.shape;e.shape=n.shape,e=this.packedReshape(e,a),l.push(e),n=this.texData.get(e.dataId),t.shape=a}return{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:c,isUniform:!1},d=function(t,e,n){let a="";e.concat(n).forEach((e=>{const r=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const o=e.texData.texShape,{useSqueezeShape:i,uniformShape:c,keptDims:l}=$y(t.packedInputs,e.shape,o);let u="",h="",d="";if(1===c.length&&t.packedInputs){const t=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];u="".concat(t[0]>1,"_").concat(t[1]>1)}else if(2!==c.length||t.packedInputs){if(c.length>2&&!t.packedInputs){const t=s.D5U.computeStrides(c);d="".concat(t[0]===o[1],"_").concat(t[t.length-1]===o[1])}}else h="".concat(c[0]>1,"_").concat(c[1]>1);const p=e.shape.length,f=2===c.length&&s.D5U.arraysEqual(e.shape,o),m=1===s.D5U.sizeFromShape(e.shape),g=s.backend_util.getBroadcastDims(e.shape,n.shape),y=!t.packedInputs&&p===n.shape.length&&s.D5U.arraysEqual(o,n.texData.texShape),b=t.packedInputs||c.length>2?"":"".concat(o[0]>1,"_").concat(o[1]>1);a+="".concat(p,"_").concat(y,"_").concat(i?l:"","_").concat(c.length,"_").concat(m,"_").concat(g,"_").concat(f,"_").concat(u,"_").concat(h,"_").concat(d,"_").concat(b,"_").concat(r)}else{const t=e.isUniform?"uniform":e.texData.texShape;a+="".concat(e.shape,"_").concat(t,"_").concat(r)}}));const r=t.userCode;let o=t.constructor.name;return o+="_"+a+"_"+r+"".concat((0,s.OBj)().getNumber("WEBGL_VERSION")),o}(t,u,h),p=this.getAndSaveBinary(d,(()=>nb(this.gpgpu,t,u,h))),f=null!=this.activeTimers;let m;f&&(m=this.startTimer()),(0,s.OBj)().get("ENGINE_COMPILE_ONLY")||function(t,e,n,a,r){e.program.enableShapeUniforms||(sb(e.inShapeInfos,n),sb([e.outShapeInfo],[a]));const o=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?t.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):t.setOutputMatrixTexture(o.texture,i[0],i[1]),t.setProgram(e.webGLProgram),t.bindVertexArray(e.webGLProgram.vao),1===(0,s.OBj)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<n.length;++l){const a=n[l],{uniform:r,offset:o,shape:i,texShape:c}=e.variablesLocations[l];if(i){const{uniformShape:n}=$y(e.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:t.gl.uniform1iv(i,new Int32Array(n));break;case 2:t.gl.uniform2iv(i,new Int32Array(n));break;case 3:t.gl.uniform3iv(i,new Int32Array(n));break;case 4:t.gl.uniform4iv(i,new Int32Array(n))}}if(c&&t.gl.uniform2i(c,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(s.D5U.sizeFromShape(a.shape)<2)t.gl.uniform1f(r,a.uniformValues[0]);else{let e=a.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(r,e)}else null!=a.texData.slice&&null!=o&&t.gl.uniform1i(o,a.texData.slice.flatOffset),t.setInputMatrixTexture(a.texData.texture.texture,r,l)}const c=e.outShapeLocation;if(c)switch(a.shape.length){case 1:t.gl.uniform1iv(c,new Int32Array(a.shape));break;case 2:t.gl.uniform2iv(c,new Int32Array(a.shape));break;case 3:t.gl.uniform3iv(c,new Int32Array(a.shape));break;case 4:t.gl.uniform4iv(c,new Int32Array(a.shape))}if(e.outShapeStridesLocation){const n=s.D5U.computeStrides(a.shape);switch(a.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}if(e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),e.program.customUniforms&&r)for(let s=0;s<e.program.customUniforms.length;++s){const n=e.program.customUniforms[s],a=e.customUniformLocations[s],o=r[s];if("float"===n.type)t.gl.uniform1fv(a,o);else if("vec2"===n.type)t.gl.uniform2fv(a,o);else if("vec3"===n.type)t.gl.uniform3fv(a,o);else if("vec4"===n.type)t.gl.uniform4fv(a,o);else if("int"===n.type)t.gl.uniform1iv(a,o);else if("ivec2"===n.type)t.gl.uniform2iv(a,o);else if("ivec3"===n.type)t.gl.uniform3iv(a,o);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));t.gl.uniform4iv(a,o)}}t.executeProgram()}(this.gpgpu,p,u,h,a),l.forEach((t=>this.disposeIntermediateTensorInfo(t))),f&&(m=this.endTimer(m),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(m)}));const g=(0,s.OBj)().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const t=s.D5U.now();t-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!(0,s.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&!1===r){const t=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),t}return i}compileAndRun(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||e[0].dtype;return this.runWebGLProgram(t,e,n,a,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,s.OBj)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,s.lub)((()=>{if(!(0,s.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=(0,s.OBj)().getBool("DEBUG");(0,s.OBj)().set("DEBUG",!1);const e=this.abs((0,s.iD$)(1e-8)).dataSync()[0];if((0,s.OBj)().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:a,values:r,texture:o,usage:i,isPacked:c}=e;if(null!=o)return;const l=null!=this.activeTimers;let u;l&&(u=s.D5U.now());let h=e.texShape;if(null==h&&(h=function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,s.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=(0,s.OBj)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&(0,s.OBj)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),e&&(n*=2,a*=2,1===(t=t.map(((e,n)=>n>=t.length-2?s.D5U.nearestLargerEven(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=s.D5U.squeezeShape(t);t=e.newShape}let r=s.D5U.sizeFromShape(t),o=null;t.length<=1&&r<=n?o=[1,r]:2===t.length&&t[0]<=n&&t[1]<=n?o=t:3===t.length&&t[0]*t[1]<=n&&t[2]<=n?o=[t[0]*t[1],t[2]]:3===t.length&&t[0]<=n&&t[1]*t[2]<=n?o=[t[0],t[1]*t[2]]:4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n?o=[t[0]*t[1]*t[2],t[3]]:4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(o=[t[0],t[1]*t[2]*t[3]]);const i=null!=o&&Math.max(...o)>a&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(null==o||i)if(e){const e=Iy(t);let n=2,a=2;t.length&&([n,a]=Sy(t)),r=e*(n/2)*(a/2),o=s.D5U.sizeToSquarishShape(r).map((t=>2*t))}else o=s.D5U.sizeToSquarishShape(r);return o}(n,c),e.texShape=h),null!=r){const t=Ny(n);let o,i=h[1],d=h[0];const p=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!c&&p||([i,d]=cy(h[0],h[1])),o=c?new db(t,p):new hb(t,p);const f=p?[d,i]:h,m=this.makeTensorInfo(f,a),g=this.texData.get(m.dataId);g.usage=p?sy.PIXELS:sy.UPLOAD,g.texShape=f,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),i,d,r);const y=[[d,i]],b=!0,x=this.runWebGLProgram(o,[m],a,y,b),v=this.texData.get(x.dataId);e.texShape=v.texShape,e.isPacked=v.isPacked,e.usage=v.usage,(0,s.OBj)().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(e.texture=v.texture,e.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(m),l&&(this.uploadWaitMs+=s.D5U.now()-u)}else{const t=this.acquireTexture(h,i,a,c);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:a}=n;return null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype ".concat(e))}(e,a)),n.values}acquireTexture(t,e,n,a){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(t," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(t,e,a)}computeBytes(t,e){return t[0]*t[1]*s.D5U.bytesPerElement(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise((t=>{try{this.checkCompletion_(e),t(!0)}catch(n){throw n}}));t.push(n)}return Promise.all(t)}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await(0,s.glt)(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(!1===this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw fy(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:n,infLoc:a,nanLoc:s,outShapeLocation:r,outShapeStridesLocation:o,outTexShapeLocation:i}=ab(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=n,t.infLoc=a,t.nanLoc=s,t.outShapeLocation=r,t.outShapeStridesLocation=o,t.outTexShapeLocation=i}}createTensorFromGPUData(t,e,n){t.channels=t.channels||"RGBA";const{texture:a,height:r,width:o,channels:i}=t,c=(0,s.SRH)().backend;if(!c.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=c.writeTexture(a,e,n,r,o,i);return(0,s.SRH)().makeTensorFromDataId(l,e,n,c)}}Xx.nextDataId=0;s.C2$.isBrowser()&&(0,s.jqO)("webgl",(()=>new Xx),2);const qx="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Kx{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=s.backend_util.assertAndGetBroadcastShape(e,n),this.enableShapeUniforms=rb(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const Zx="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Yx{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.backend_util.assertAndGetBroadcastShape(e,n);const r=this.outputShape.length;this.enableShapeUniforms=rb(r);let o="";if(a)if(0===r||1===s.D5U.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const t=Jy(r);if(o="\n          ".concat(t," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const t=vx("coords",r);this.enableShapeUniforms?o+="\n            bool nextRowOutOfBounds =\n              (".concat(t[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(t[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):o+="\n            bool nextRowOutOfBounds =\n              (".concat(t[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(t[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(o,"\n\n        setOutput(result);\n      }\n    ")}}function Qx(t){const{inputs:e,backend:n}=t,{x:a}=e;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Jx={kernelName:s.iJz,backendName:"webgl",kernelFunc:Qx};function $x(t){const{inputs:e,backend:n}=t,{real:a,imag:s}=e,r=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(r.dataId),i=Qx({inputs:{x:a},backend:n}),c=Qx({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:c},r}const tv={kernelName:s.Zz9,backendName:"webgl",kernelFunc:$x},ev="return (a < 0.) ? b * a : a;",nv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const av={kernelName:s.J$2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{alpha:o}=a,i=n.makeTensorInfo([],"float32",s.D5U.createScalarValue(o,"float32")),c=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yx(nv,r.shape,i.shape):new Kx(ev,r.shape,i.shape),l=n.runWebGLProgram(c,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},sv="return (a < 0.) ? b * a : a;",rv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const ov={kernelName:s.o0g,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a,alpha:r}=e,o=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yx(rv,a.shape,r.shape):new Kx(sv,a.shape,r.shape);return n.runWebGLProgram(o,[a,r],"float32")}},iv="if (isnan(x)) return x;";function cv(t){let{opSnippet:e,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=t;return t=>{let{inputs:o,backend:i}=t;const{x:c}=o,l=i,u=r||c.dtype;if(l.shouldExecuteOnCPU([c])&&null!=a){const t=l.texData.get(c.dataId),e=a(t.values,u);return l.makeTensorInfo(c.shape,u,e)}let h;return h=(0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new Vx(c.shape,n):new Cx(c.shape,e),l.runWebGLProgram(h,[c],u)}}function lv(t){let{opSnippet:e,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:o,dtype:i}=t;return t=>{let{inputs:c,backend:l}=t;const{a:u,b:h}=c,d=l;if(r&&"complex64"===u.dtype){const t=d.texData.get(u.dataId),n=d.texData.get(h.dataId),[a,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},o={dataId:a.dataId,dtype:a.dtype,shape:h.shape},i=new Kx(e,u.shape,h.shape);return d.runWebGLProgram(i,[r,o],(0,s.x8V)(n.dtype,a.dtype))})),o=$x({inputs:{real:a,imag:r},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(r),o}const p=i||(0,s.x8V)(u.dtype,h.dtype);if(("string"===u.dtype||"string"===h.dtype||d.shouldExecuteOnCPU([u,h]))&&null!=o){const t=d.texData.get(u.dataId).values,e=d.texData.get(h.dataId).values,n="string"===u.dtype?s.backend_util.fromUint8ToStringArray(t):t,a="string"===u.dtype?s.backend_util.fromUint8ToStringArray(e):e,[r,i]=o(u.shape,h.shape,n,a,p),c=d.makeTensorInfo(i,p);return d.texData.get(c.dataId).values=r,c}let f;return f=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new Yx(n,u.shape,h.shape,a):new Kx(e,u.shape,h.shape),d.runWebGLProgram(f,[u,h],p)}}function uv(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===t)return e?Bx:_x;if("relu"===t)return e?zx:Rx;if("elu"===t)return e?Lx:Dx;if("relu6"===t)return e?Ux:Ox;if("prelu"===t)return e?rv:sv;if("leakyrelu"===t)return e?nv:ev;if("sigmoid"===t)return e?Px:Mx;throw new Error("Activation ".concat(t," has not been implemented for the WebGL backend."))}class hv{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=rb(this.outputShape.length);const l=a?t[1]:t[2],u=Math.ceil(l/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const y=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";t[0]<e[0]?b="imod(rc.x, ".concat(t[0],")"):e[0]<t[0]&&(x="imod(rc.x, ".concat(e[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(x,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(h,");\n          vec4 b = getMatrixB(batchB, ").concat(d,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const dv={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class pv{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.backend_util.assertAndGetBroadcastShape(e,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const fv="return a * b;";function mv(t){const{inputs:e,backend:n}=t,{a:a,b:r}=e,o=s.backend_util.upcastType(a.dtype,r.dtype);if("complex64"===a.dtype){const t=n.texData.get(a.dataId),e=n.texData.get(r.dataId),s=new pv(dv.REAL,a.shape,r.shape),o=new pv(dv.IMAG,a.shape,r.shape),i=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=$x({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const t=n.texData.get(a.dataId),e=n.texData.get(r.dataId),[s,i]=Xb(a.shape,r.shape,t.values,e.values,o),c=n.makeTensorInfo(i,o);return n.texData.get(c.dataId).values=s,c}let i;return i=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yx(fv,a.shape,r.shape):new Kx(fv,a.shape,r.shape),n.runWebGLProgram(i,[a,r],o)}const gv={kernelName:s.wYn,backendName:"webgl",kernelFunc:mv};function yv(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{shape:o}=a,i=n,c=s.D5U.sizeFromShape(r.shape),l=s.D5U.inferFromImplicitShape(o,c),u=s.D5U.sizeFromShape(l);s.D5U.assert(c===u,(()=>"The new shape (".concat(l,") has ").concat(u," elements and the old ")+"shape (".concat(r.shape,") has ").concat(c," elements. The new shape and old ")+"shape must have the same number of elements."));const h=i.texData.get(r.dataId);return!h.isPacked||Cy(r.shape,l)||null!==h.texture&&Cy(h.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(t,e,n){const a=[Iy(t.shape),...Sy(t.shape)],s={dtype:t.dtype,shape:a,dataId:t.dataId},r=[Iy(e),...Sy(e)],o=new kx(r,a),i=[a],c=n.runWebGLProgram(o,[s],t.dtype,i,!0);return{dataId:c.dataId,shape:e,dtype:c.dtype}}(r,l,i)}const bv={kernelName:s.HZH,backendName:"webgl",kernelFunc:yv};class xv{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:o}=t;this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l="sumValue += dot(values * ".concat(s.D5U.isInt(t)?t.toPrecision(2):t,", ones);")}let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(l,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class vv{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:r}=t;this.outputShape=[a,r];let o="0.0",i="";"prod"===e?o="1.0":"min"===e?(o="1.0 / 1e-20",i="min"):"max"===e&&(o="-1.0 / 1e-20",i="max");let c="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===e?c="sumValue":"prod"===e?c="prodValue":"all"===e?c="allValue":"any"===e&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let h="\n      if (".concat("sum"===e,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===e,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===e," || ").concat("max"===e,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),d="vec4";"all"===e?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(h,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(2===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(3===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(h,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function wv(t,e,n,a){const r=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],a=s.backend_util.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return e}(t.shape);let o=t;for(let s=0;s<r.length;s++){const{inSize:i,windowSize:c,outSize:l}=r[s];let u,h;u="mean"===n?0===s?new xv({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l},i):new xv({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l}):new vv({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l},n),h=o,o=a.runWebGLProgram(u,[o],e),h.dataId!==t.dataId&&a.disposeIntermediateTensorInfo(h)}return o}class kv{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const a=Jy(this.rank),s=function(t){const e=t.length;if(e>6)throw Error("Transpose for rank ".concat(e," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(e);for(let s=0;s<t.length;s++)a[t[s]]=n[s];return a.join()}(e);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(s,"));\n    }\n    ")}}class Iv{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let l=0;l<n.length;l++)n[l]=t[e[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=Jy(this.rank),s=xx("rc",this.rank),r=new Array(this.rank);for(let l=0;l<e.length;l++)r[e[l]]=s[l];const o="vec2(".concat(r.slice(-2).join(),")"),i="++".concat(s[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(r.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(s[this.rank-1],";\n      if(++").concat(s[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function Sv(t,e,n){const a=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iv(t.shape,e):new kv(t.shape,e);return n.runWebGLProgram(a,[t],t.dtype)}function Nv(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a;return function(t,e,n,a){const r=e,o=t.shape.length,i=s.D5U.parseAxisParam(r,t.shape);let c=i;const l=s.backend_util.getAxesPermutation(c,o),u=null!=l;let h=t;u&&(h=Sv(t,l,a),c=s.backend_util.getInnerMostAxes(c.length,o)),s.backend_util.assertAxesAreInnerMostDims("sum",c,o);const[d,p]=s.backend_util.computeOutAndReduceShapes(h.shape,c);let f=d;n&&(f=s.backend_util.expandShapeToKeepDim(d,i));const m=s.D5U.sizeFromShape(p),g=yv({inputs:{x:h},attrs:{shape:[s.D5U.sizeFromShape(t.shape)/m,m]},backend:a}),y=wv(g,(0,s.z4k)(t.dtype),"sum",a),b=yv({inputs:{x:y},attrs:{shape:f},backend:a});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(y),u&&a.disposeIntermediateTensorInfo(h),b}(r,o,i,n)}const Tv={kernelName:s.GBy,backendName:"webgl",kernelFunc:Nv};function Cv(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{perm:r}=a,o=n,i=s.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=s.shape[r[u]];let l;if(o.shouldExecuteOnCPU([s])){const t=o.texData.get(s.dataId).values,e=yx(t,s.shape,s.dtype,r,c);l=o.makeTensorInfo(c,s.dtype);o.texData.get(l.dataId).values=e}else l=Sv(s,r,o);return l}const Ev={kernelName:s.G3Y,backendName:"webgl",kernelFunc:Cv},_v=1e3;function Av(t){let{a:e,b:n,transposeA:a,transposeB:r,backend:o,bias:i=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:u=null}=t;const h=e.shape.length,d=n.shape.length,p=a?e.shape[h-2]:e.shape[h-1],f=r?n.shape[d-1]:n.shape[d-2],m=a?e.shape[h-1]:e.shape[h-2],g=r?n.shape[d-2]:n.shape[d-1],y=e.shape.slice(0,-2),b=n.shape.slice(0,-2),x=s.D5U.sizeFromShape(y),v=s.D5U.sizeFromShape(b),w=s.Jyw.assertAndGetBroadcastShape(e.shape.slice(0,-2),n.shape.slice(0,-2)).concat([m,g]);s.D5U.assert(p===f,(()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(f,") of Tensors with shapes ").concat(e.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const k=a?[x,p,m]:[x,m,p],I=r?[v,g,f]:[v,f,g],S=yv({inputs:{x:e},backend:o,attrs:{shape:k}}),N=yv({inputs:{x:n},backend:o,attrs:{shape:I}}),T=[S,N],C=Math.max(x,v),E=a?S.shape[1]:S.shape[2],_=null!=i,A=null!=c,D="leakyrelu"===u,R=null!=u?uv(u,!0):null;let O;if((1===m||1===g)&&E>_v&&!1===(_||A||D||null!=R)){let t=S,e=N;a&&(t=Cv({inputs:{x:S},backend:o,attrs:{perm:[0,2,1]}}),T.push(t)),r&&(e=Cv({inputs:{x:N},backend:o,attrs:{perm:[0,2,1]}}),T.push(e));const n=1===g;let s=t;1!==g&&(s=yv({inputs:{x:t},backend:o,attrs:{shape:[C,E,1]}}),T.push(s));const i=1===g?2:1;let c=e;n&&(c=yv({inputs:{x:e},backend:o,attrs:{shape:[C,1,E]}}),T.push(c));const l=mv({inputs:{a:s,b:c},backend:o});O=Nv({inputs:{x:l},backend:o,attrs:{axis:i,keepDims:!0}}),T.push(l)}else{const t=(0,s.x8V)(e.dtype,n.dtype),u=new hv(k,I,[C,m,g],a,r,_,R,A,D),h=[S,N];if(null!=i&&h.push(i),A&&h.push(c),D){const t=o.makeTensorInfo([],"float32",s.D5U.createScalarValue(l,"float32"));h.push(t),T.push(t)}O=o.runWebGLProgram(u,h,t)}const F=yv({inputs:{x:O},backend:o,attrs:{shape:w}});T.push(O);for(const s of T)o.disposeIntermediateTensorInfo(s);return F}const Dv={kernelName:s.usg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:s,b:r,bias:o,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;return Av({a:s,b:r,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:u})}},Rv="return abs(x);";const Ov={kernelName:s.SYM,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const t=n.texData.get(a.dataId),e=ax(t.values);return n.makeTensorInfo(a.shape,a.dtype,e)}let r;return r=(0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Vx(a.shape,Rv):new Cx(a.shape,Rv),n.runWebGLProgram(r,[a],a.dtype)}},Fv=cv({opSnippet:Ex+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Mv={kernelName:s.VGw,backendName:"webgl",kernelFunc:Fv},Bv=cv({opSnippet:Ex+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Lv={kernelName:s.SpW,backendName:"webgl",kernelFunc:Bv},zv="return a + b;",Uv=lv({opSnippet:zv,packedOpSnippet:zv,supportsComplex:!0,cpuKernelImpl:Sb}),Pv={kernelName:s.mm_,backendName:"webgl",kernelFunc:Uv};class Vv{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>"T".concat(e)));const n=[];this.variableNames.forEach((t=>{n.push("float v".concat(t," = get").concat(t,"AtOutCoords();"))}));const a=this.variableNames.map((t=>"v".concat(t))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class Wv{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>"T".concat(e)));const n=[];this.variableNames.forEach((t=>{n.push("vec4 v".concat(t," = get").concat(t,"AtOutCoords();"))}));const a=this.variableNames.map((t=>"v".concat(t))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const Gv={kernelName:s.Xze,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a}=e,r=n;if(1===r.length)return Qx({inputs:{x:r[0]},backend:a});if(r.length>(0,s.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),n=t({inputs:r.slice(0,e),backend:a}),s=t({inputs:r.slice(e),backend:a});return t({inputs:[n,s],backend:a})}const o=r.map((t=>t.dtype)).reduce(((t,e)=>(0,s.x8V)(t,e))),i=r.map((t=>t.shape)),c=(0,s.OBj)().getBool("WEBGL_PACK")?new Wv(r[0].shape,i):new Vv(r[0].shape,i);return a.runWebGLProgram(c,r,o)}};const Hv={kernelName:s.oT6,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a,c=r.shape.length,l=s.D5U.parseAxisParam(o,r.shape);let u=l;const h=s.backend_util.getAxesPermutation(u,c);let d=r;null!=h&&(d=Cv({inputs:{x:r},backend:n,attrs:{perm:h}}),u=s.backend_util.getInnerMostAxes(u.length,c)),s.backend_util.assertAxesAreInnerMostDims("all",u,c);const[p,f]=s.backend_util.computeOutAndReduceShapes(d.shape,u),m=yv({inputs:{x:d},backend:n,attrs:{shape:[-1,s.D5U.sizeFromShape(f)]}}),g=wv(m,m.dtype,"all",n);let y;if(i){y=yv({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(p,l)}})}else y=yv({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(d),y}};const jv={kernelName:s.IKK,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a,c=r.shape.length,l=s.D5U.parseAxisParam(o,r.shape);let u=l;const h=s.backend_util.getAxesPermutation(u,c);let d=r;null!=h&&(d=Cv({inputs:{x:r},backend:n,attrs:{perm:h}}),u=s.backend_util.getInnerMostAxes(u.length,c)),s.backend_util.assertAxesAreInnerMostDims("any",u,c);const[p,f]=s.backend_util.computeOutAndReduceShapes(d.shape,u),m=yv({inputs:{x:d},backend:n,attrs:{shape:[-1,s.D5U.sizeFromShape(f)]}}),g=wv(m,m.dtype,"any",n);let y;if(i){y=yv({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(p,l)}})}else y=yv({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(d),y}};class Xv{constructor(t,e,n){this.variableNames=["A"];const{windowSize:a,batchSize:s,outSize:r}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,r];const o="max"===e?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class qv{constructor(t,e,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.D5U.assert(t.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=t[t.length-1],o=Math.ceil(r/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,l=Jy(c),u=vx("coords",c);let h,d;if(1===o){d=c+1;const t=Jy(d);h="\n        ".concat(t," sourceLocR = ").concat(t,"(").concat(u.join(),", 0);\n        ++").concat(u[c-1],";\n        ").concat(t," sourceLocG = ").concat(t,"(").concat(u.join(),", 0);\n        ++").concat(u[c-2],";\n        ").concat(t," sourceLocA = ").concat(t,"(").concat(u.join(),", 0);\n        --").concat(u[c-1],";\n        ").concat(t," sourceLocB = ").concat(t,"(").concat(u.join(),", 0);\n        --").concat(u[c-2],";")}else d=c,h="\n        ".concat(l," sourceLocR = coords;\n        ++").concat(u[c-1],";\n        ").concat(l," sourceLocG = coords;\n        ++").concat(u[c-2],";\n        ").concat(l," sourceLocA = coords;\n        --").concat(u[c-1],";\n        ").concat(l," sourceLocB = coords;\n        --").concat(u[c-2],";");const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map((t=>"int "+t)),g=vx("sourceLocR",d-1).concat("inIdx.r"),y=vx("sourceLocG",d-1).concat("inIdx.g"),b=vx("sourceLocB",d-1).concat("inIdx.b"),x=vx("sourceLocA",d-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),"),\n                             getBestIndicesAChannel(").concat(x.join(),")));"),k="vec4(\n            getAChannel(".concat(g.join(),"),\n            hasNextCol ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(b.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(x.join(),") : 0.)"),I=a?"":"\n      float getBestIndicesAChannel(".concat(m.join(),") {\n        return getChannel(getBestIndicesA(").concat(p.join(),"),\n                                          vec2(").concat(p.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(m.join(),") {\n        return getChannel(getA(").concat(p.join(),"),\n                               vec2(").concat(p.slice(-2).join(),"));\n      }\n      ").concat(I,"\n      void main() {\n        ").concat(l," coords = getOutputCoords();\n        bool hasNextCol = ").concat(u[c-1]," < ").concat(i[c-1]-1,";\n        bool hasNextRow = ").concat(u[c-2]," < ").concat(i[c-2]-1,";\n        ").concat(h,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(f,", sourceLocG").concat(f,",\n          sourceLocB").concat(f,", sourceLocA").concat(f,") * ").concat(e,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(k,";\n\n        for (int i = 0; i < ").concat(e,"; i++) {\n          inIdx = srcIdx;\n          ").concat(w,"\n          vec4 candidate = ").concat(k,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(v,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function Kv(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=e.shape[0],o=e.shape[1];null!=a&&(r=a.shape[0],o=a.shape[1]);const i=s.backend_util.computeOptimalWindowSize(o),c={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},l=new Xv(c,n,null==a),u=[e];null!=a&&u.push(a);const h=t.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;const d=Kv(t,e,n,h);return t.disposeIntermediateTensorInfo(h),d}function Zv(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:e.shape,o=r[r.length-1],i=s.backend_util.computeOptimalWindowSize(o),c=new qv(r,i,n,null==a),l=null==a?[e]:[e,a],u=t.runWebGLProgram(c,l,"int32");if(u.shape.length===e.shape.length){const a=Zv(t,e,n,u);return t.disposeIntermediateTensorInfo(u),a}return u}function Yv(t,e,n,a){const r=[n];if(s.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,e.shape.length),!(0,s.OBj)().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],o=t.texData.get(e.dataId);let i=e;null!==o&&o.isPacked&&(i=t.unpackTensor(e),n.push(i));const[c,l]=s.backend_util.computeOutAndReduceShapes(i.shape,r),u=s.D5U.sizeFromShape(l),h=yv({inputs:{x:i},backend:t,attrs:{shape:[-1,u]}});n.push(h);const d=Kv(t,h,a);n.push(d);const p=yv({inputs:{x:d},backend:t,attrs:{shape:c}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),p}return Zv(t,e,a)}const Qv={kernelName:s.sJF,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o}=a;let i=s.D5U.parseAxisParam(o,r.shape);const c=s.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=Cv({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=s.backend_util.getInnerMostAxes(i.length,l.shape.length)),s.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const h=Yv(n,l,i[0],"max");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}};const Jv={kernelName:s.aJk,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o}=a;let i=s.D5U.parseAxisParam(o,r.shape);const c=s.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=Cv({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=s.backend_util.getInnerMostAxes(i.length,l.shape.length)),s.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const h=Yv(n,l,i[0],"min");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},$v=cv({opSnippet:Ex+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),tw={kernelName:s.M2y,backendName:"webgl",kernelFunc:$v},ew=cv({opSnippet:Ex+"return log(x + sqrt(x * x + 1.0));"}),nw={kernelName:s.qw7,backendName:"webgl",kernelFunc:ew},aw=cv({opSnippet:Ex+"\n  return atan(x);\n"}),sw={kernelName:s.jMg,backendName:"webgl",kernelFunc:aw},rw=lv({opSnippet:qx+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Zx+"\n  return result;\n"}),ow={kernelName:s.QCc,backendName:"webgl",kernelFunc:rw},iw=cv({opSnippet:Ex+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),cw={kernelName:s.Oyi,backendName:"webgl",kernelFunc:iw};class lw{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const r=t.filterWidth,o=t.strideHeight,i=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m="((batch  * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + d"),g="(xR * ".concat(t.inWidth," + xC) * ").concat(t.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(e," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?s?m:g:"wR * ".concat(h," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(r/4),v=r%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(x,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(x,";\n          if (").concat(1===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class uw{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const r=t.filterWidth,o=t.strideDepth,i=t.strideHeight,c=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(d,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(h,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(e," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?s?"(((batch * ".concat(t.inDepth," + xD) * ").concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"((xD * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let v="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(r/4),k=r%4,I="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(x,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(x,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(d,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(h,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(h,", ch)\n              );\n\n              ").concat(I,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(I,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(I,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                initializationValue\n              );\n\n              ").concat(I,"\n            }\n          }\n        }\n        setOutput(").concat(v,");\n      }\n    ")}}const hw={kernelName:s.JhU,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;Fy(r,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;s.D5U.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=s.backend_util.computePool2DInfo(r.shape,o,i,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&s.D5U.arraysEqual(u.inShape,u.outShape))return Qx({inputs:{x:r},backend:n});const h=new lw(u,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};const dw={kernelName:s._k9,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=a,h=s.backend_util.computePool3DInfo(r.shape,o,i,[1,1,1],c,l,u),d=new uw(h,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}};class pw{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,s=t.strideWidth,r=t.dilationHeight,o=t.dilationWidth,i=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=i-1-t.padInfo.top,u=c-1-t.padInfo.left,h=1/(e*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(h,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(r,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class fw{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,a=t.filterWidth,s=t.strideDepth,r=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=u-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(s,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(h,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const mw={kernelName:s.IMb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:o}=e,i=o,{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=s.backend_util.computePool3DInfo(i.shape,c,l,[1,1,1],u,h),p=new fw(d);return n.runWebGLProgram(p,[r],i.dtype)}};const gw={kernelName:s.ROF,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:o}=e,i=o;Fy([r,o],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=a,h=s.backend_util.computePool2DInfo(i.shape,c,l,1,u),d=new pw(h);return n.runWebGLProgram(d,[r],i.dtype)}};const yw={kernelName:s.XLW,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:s,b:r}=e,{transposeA:o,transposeB:i}=a;return Av({a:s,b:r,transposeA:o,transposeB:i,backend:n})}};class bw{constructor(t,e,n,a,r,o){this.outputShape=[],this.variableNames=["x","mean","variance"],s.backend_util.assertAndGetBroadcastShape(t,e),s.backend_util.assertAndGetBroadcastShape(t,n);let i="0.0";null!=a&&(s.backend_util.assertAndGetBroadcastShape(t,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";null!=r&&(s.backend_util.assertAndGetBroadcastShape(t,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(i,";\n        float scale = ").concat(c,";\n        float inv = scale * inversesqrt(variance + float(").concat(o,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class xw{constructor(t,e,n,a,r,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.backend_util.assertAndGetBroadcastShape(t,e),s.backend_util.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";null!=a&&(s.backend_util.assertAndGetBroadcastShape(t,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=r&&(s.backend_util.assertAndGetBroadcastShape(t,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        vec4 offset = ".concat(i,";\n        vec4 scale = ").concat(c,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(o,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const vw={kernelName:s.sHE,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,mean:o,variance:i,offset:c,scale:l}=e;s.D5U.assert(o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.D5U.assert(null==c||o.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.D5U.assert(null==l||o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=a;null==u&&(u=.001);const h=[r,o,i];let d=null;null!=c&&(d=c.shape,h.push(c));let p=null;null!=l&&(p=l.shape,h.push(l));const f=(0,s.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new xw(r.shape,o.shape,i.shape,d,p,u):new bw(r.shape,o.shape,i.shape,d,p,u);return n.runWebGLProgram(f,h,h[0].dtype)}};class ww{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Jy(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(t){if(1===t)return"sourceLoc";if(t<=6)return kw.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error("Slicing for rank ".concat(t," is not yet supported"))}(this.rank);let a;const s=t.map(((t,e)=>"sourceLoc.".concat(kw[e]," = start[").concat(e,"] + coords.").concat(kw[e],";")));a="\n        ".concat(e," sourceLoc;\n        ").concat(e," coords = getOutputCoords();\n        ").concat(s.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const kw=["x","y","z","w","u","v"];class Iw{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=Jy(this.rank),n=vx("coords",this.rank),a=vx("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),r="getChannel(getSource(".concat(a.join(),"), ").concat(s,")"),o="\n      result.x = ".concat(r,";\n      if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(r,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(t[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(r,";\n        if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(r,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(e,"(").concat(t.map(((t,e)=>"start[".concat(e,"]"))).join(),");"):t.map(((t,e)=>"".concat(a[e]," = ").concat(n[e]," + start[").concat(e,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(e," coords = getOutputCoords();\n        ").concat(e," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function Sw(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:o,size:i}=a,[c,l]=s.kuN.parseSliceParams(r,o,i);if(s.kuN.assertParamsValid(r,c,l),0===s.D5U.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const t=n.texData.get(r.dataId),e=sx(t.values,c,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,e)}const{isPacked:u}=n.texData.get(r.dataId),h=s.kuN.isSliceContinous(r.shape,c,l);if(u||!h){const t=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iw(l):new ww(l),e=[c];return n.runWebGLProgram(t,[r],r.dtype,e)}return n.uploadToGPU(r.dataId),function(t,e,n,a){const r=a.texData.get(t.dataId),o=a.makeTensorInfo(n,t.dtype),i=a.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=t.dtype;let c=s.kuN.computeFlatOffset(e,s.D5U.computeStrides(t.shape));r.slice&&(c+=r.slice.flatOffset),i.slice={flatOffset:c,origDataId:r.slice&&r.slice.origDataId||t.dataId};const l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),o}(r,c,l,n)}const Nw={kernelName:s.p2w,backendName:"webgl",kernelFunc:Sw},Tw={kernelName:s.zws,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:o,crops:i}=a;s.D5U.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const c=o.reduce(((t,e)=>t*e)),l=s.backend_util.getReshaped(r.shape,o,c),u=s.backend_util.getPermuted(l.length,o.length),h=s.backend_util.getReshapedPermuted(r.shape,o,c),d=s.backend_util.getSliceBeginCoords(i,o.length),p=s.backend_util.getSliceSize(h,i,o.length),f=[],m=yv({inputs:{x:r},backend:n,attrs:{shape:l}}),g=Cv({inputs:{x:m},backend:n,attrs:{perm:u}}),y=yv({inputs:{x:g},backend:n,attrs:{shape:h}}),b=Sw({inputs:{x:y},backend:n,attrs:{begin:d,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}};const Cw={kernelName:s.zvY,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,weights:r}=e,{size:o}=a,i=n.readSync(s.dataId),c=n.readSync(r.dataId),l=Nb(i,c,r.dtype,r.shape,o);return n.makeTensorInfo([o],r.dtype,l)}};const Ew={kernelName:s.hCO,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:a,b:r}=e,o=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=(0,s.OBj)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===i){const t=n.texData.get(a.dataId).values,e=n.texData.get(r.dataId).values,[s,o]=Cb(a.shape,r.shape,t,e,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=s,i}let c;return c=o?new Yx("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new Kx("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(c,[a,r],a.dtype)}};const _w={kernelName:s.eEB,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:a,s1:r}=e,o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=s.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},Aw=lv({opSnippet:"return float(a != b);",cpuKernelImpl:Kb,dtype:"bool"}),Dw={kernelName:s.yQU,backendName:"webgl",kernelFunc:Aw};function Rw(t){const{inputs:e,backend:n}=t,{input:a}=e;return Qx({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const Ow={kernelName:s.xJR,backendName:"webgl",kernelFunc:Rw},Fw="return float(int(x));";const Mw={kernelName:s.RFZ,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a,attrs:r}=e,{x:o}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===o.dtype)return Qx({inputs:{x:o},backend:a});const e=s.lls(o.shape),n=t({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),r=$x({inputs:{real:n,imag:e},backend:a});return e.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===o.dtype){const e=Rw({inputs:{input:o},backend:a}),n=t({inputs:{x:e},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(e),n}if(!s.D5U.hasEncodingLoss(o.dtype,i)){const t=Qx({inputs:{x:o},backend:a});return{dataId:t.dataId,shape:t.shape,dtype:i}}if(a.shouldExecuteOnCPU([o])){const t=a.texData.get(o.dataId).values,[e,n,s]=Eb(t,o.shape,o.dtype,i);return a.makeTensorInfo(e,n,s)}if("int32"===i)return function(t,e){const n=new Cx(t.shape,Fw),a=e.runWebGLProgram(n,[t],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(o,a);if("bool"===i){const t=a.makeTensorInfo([],"bool",s.D5U.getTypedArrayFromDType("bool",1)),e=Aw({inputs:{a:o,b:t},backend:a});return a.disposeIntermediateTensorInfo(t),e}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(i))}},Bw="return ceil(x);",Lw=cv({opSnippet:Bw,packedOpSnippet:Bw,cpuKernelImpl:_b}),zw={kernelName:s.gJX,backendName:"webgl",kernelFunc:Lw};class Uw{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Pw{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Vw={kernelName:s.xnO,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{clipValueMin:o,clipValueMax:i}=a;let c;c=(0,s.OBj)().getBool("WEBGL_PACK_CLIP")?new Pw(r.shape):new Uw(r.shape);const l=[[o],[i]];return n.runWebGLProgram(c,[r],r.dtype,l)}};class Ww{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Gw(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const Hw={kernelName:s.yj2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,s=n.texData.get(a.dataId),r=new Ww(a.shape),o=[Gw(a,s.complexTensorInfos.real),Gw(a,s.complexTensorInfos.imag)];return n.runWebGLProgram(r,o,o[0].dtype)}};class jw{constructor(t){this.outputShape=[],this.outputShape=s.backend_util.computeOutShape(t,1),this.variableNames=t.map(((t,e)=>"T".concat(e)));const e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];const n=["if (yC < ".concat(e[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<e.length;s++){const t=e[s-1];n.push("else if (yC < ".concat(e[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(t,"));"))}const a=e.length,r=e[e.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class Xw{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.backend_util.computeOutShape(t,e);const n=this.outputShape,a=n.length,r=Jy(a),o=vx("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=t.map(((t,e)=>"T".concat(e)));const c=new Array(t.length-1);c[0]=t[0][e];for(let s=1;s<c.length;s++)c[s]=c[s-1]+t[s][e];const l=i[e],u=i.slice(-2),h=i.join();let d="if (".concat(l," < ").concat(c[0],") {\n        return getChannel(\n            getT0(").concat(h,"), vec2(").concat(u.join(),"));\n        }");for(let s=1;s<c.length;s++){const t=c[s-1];d+="\n        if (".concat(l," < ").concat(c[s],"  && ").concat(l," >= ").concat(c[s-1],") {\n          return getChannel(\n            getT").concat(s,"(").concat(qw(i,l,t),"),\n            vec2(").concat(qw(u,l,t),"));\n        }")}const p=c.length,f=c[c.length-1];d+="\n        return getChannel(\n          getT".concat(p,"(").concat(qw(i,l,f),"),\n          vec2(").concat(qw(u,l,f),"));"),this.userCode="\n      float getValue(".concat(i.map((t=>"int "+t)),") {\n        ").concat(d,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(o,"), 0., 0., 0.);\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," + 1;\n        if (").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-2]," = ").concat(o[a-2]," + 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," - 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2]," &&\n            ").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(o,");\n        }\n        setOutput(result);\n      }\n    ")}}function qw(t,e,n){const a=t.indexOf(e);return t.map(((t,e)=>e===a?"".concat(t," - ").concat(n):t)).join()}function Kw(t){const{inputs:e,backend:n}=t,{input:a}=e;return Qx({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const Zw={kernelName:s.J_u,backendName:"webgl",kernelFunc:Kw};function Yw(t,e,n){const a=t[0].dtype;if("complex64"===a){const a=t.map((t=>Rw({inputs:{input:t},backend:n}))),s=t.map((t=>Kw({inputs:{input:t},backend:n}))),r=Yw(a,e,n),o=Yw(s,e,n),i=$x({inputs:{real:r,imag:o},backend:n});return a.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(t);if("string"===a&&(r=!0),r){const r=t.map((t=>{const a=s.D5U.sizeFromShape(t.shape.slice(e));return yv({inputs:{x:t},backend:n,attrs:{shape:[-1,a]}})})),o=r.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),i=s.backend_util.computeOutShape(r.map((t=>t.shape)),1),c=1===r[0].shape[0],l=Ab(o,i,a,c),u=s.backend_util.computeOutShape(t.map((t=>t.shape)),e),h=n.makeTensorInfo(u,a,l);return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}const o=t.filter((t=>s.D5U.sizeFromShape(t.shape)>0)),i=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(1===o.length){const e=i?new Cx(t[0].shape,Fx):new Vx(t[0].shape,Fx);return n.runWebGLProgram(e,t,a)}const c=(0,s.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>c){const t=[];for(let s=0;s<o.length;s+=c){const a=o.slice(s,s+c);t.push(Yw(a,e,n))}const a=Yw(t,e,n);for(const e of t)n.disposeIntermediateTensorInfo(e);return a}if(i){const t=new Xw(o.map((t=>t.shape)),e);return n.runWebGLProgram(t,o,a)}const{tensors2D:l,outShape:u}=function(t,e,n){const a=s.backend_util.computeOutShape(t.map((t=>t.shape)),e),r=t.map((t=>yv({inputs:{x:t},attrs:{shape:[-1,s.D5U.sizeFromShape(t.shape.slice(e))]},backend:n})));return{tensors2D:r,outShape:a}}(o,e,n),h=new jw(l.map((t=>t.shape))),d=n.runWebGLProgram(h,l,a);l.forEach((t=>n.disposeIntermediateTensorInfo(t)));const p=yv({inputs:{x:d},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(d),p}function Qw(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a,o=s.D5U.parseAxisParam(r,e[0].shape)[0],i=e.map((t=>t.shape));s.backend_util.assertParamsConsistent(i,o);const c=s.backend_util.computeOutShape(e.map((t=>t.shape)),o);if(0===s.D5U.sizeFromShape(c))return n.makeTensorInfo(c,e[0].dtype,[]);const l=e.filter((t=>s.D5U.sizeFromShape(t.shape)>0));return 1===l.length?Qx({inputs:{x:l[0]},backend:n}):Yw(l,o,n)}const Jw={kernelName:s.Eh3,backendName:"webgl",kernelFunc:Qw};class $w{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=t.outShape;const r=t.padInfo.top,o=t.padInfo.left,i=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):s?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),v="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(x,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(r,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(d,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(t.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}}class tk{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,a=t.padInfo.left,s=t.strideDepth,r=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(s,", ").concat(r,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(e,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ek{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=rb(this.outputShape.length);const o=t.padInfo.left,i=t.strideWidth,c=t.dilationWidth,l=t.filterHeight,u=t.filterWidth,h=u;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let s=0;s<u;s++)d+="\n           vec4 xTexelC".concat(2*s,";\n           int xTexelC").concat(2*s,"Ready;\n           vec4 xTexelC").concat(2*s+1,";\n           int xTexelC").concat(2*s+1,"Ready;\n           vec4 xC").concat(s,";");d+="\n     for (int r = 0; r < ".concat(l,"; r++) {\n      for (int d1 = 0; d1 < ").concat(t.inChannels,"; d1 += 2) {\n       ");for(let s=0;s<u;s++)d+="\n           xTexelC".concat(2*s," = vec4(0.0);\n           xTexelC").concat(2*s,"Ready = 0;\n           xTexelC").concat(2*s+1," = vec4(0.0);\n           xTexelC").concat(2*s+1,"Ready = 0;\n           xC").concat(s," = vec4(0.0);");d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(h+1)/2;g++){const e=2*g;if(d+="\n           xC = xCCorner + ".concat(e*c,";\n           "),1===i){if(e<u&&(o%2===1?(d+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n               "),d+=1===c&&e>0?"\n                 xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                   } else {\n                     xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                   }\n                   ")):d+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n\n                 xC").concat(e," = xTexelC").concat(e,";\n                 "),e+1<u)){const t=o%2===0?s.D5U.nearestLargerEven(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(d+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                     xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(e+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(e+1,"Ready = 1;\n                   }\n                   "),d+=c>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                     } else {\n                      xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                     }\n                     "):"\n                     xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                     ")):d+=1===t?"\n                     xC".concat(e+1," = xTexelC").concat(e,";\n                     "):"\n                     xCOffset = xC + ".concat(t,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                       xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(e+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(e+1,"Ready = 1;\n                     }\n\n                     xC").concat(e+1," = xTexelC").concat(e+1,";\n                     ")}}else e<u&&(o%2===1?(d+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                   xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(e+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e+1,"Ready = 1;\n                 }\n\n                 xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n               "),e+1<u&&(d+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                 "))):(d+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                   xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(e+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(e+1,"Ready = 1;\n                 }\n\n                 xC").concat(e," = vec4(\n                   xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n               "),e+1<u&&(d+="\n                   xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                 "))));e<u&&(d+="\n             wTexel = getW(r, ".concat(e,", d1, d2);\n             dotProd += xC").concat(e,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(t.inChannels,") {\n               dotProd += xC").concat(e,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),e+1<u&&(d+="\n               wTexel = getW(r, ".concat(e+1,", d1, d2);\n               dotProd += xC").concat(e+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(t.inChannels,") {\n                 dotProd += xC").concat(e+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),f="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(p,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(d,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(m,"\n         ").concat(f,"\n         setOutput(result);\n       }\n     ")}}class nk{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=rb(this.outputShape.length);const{dataFormat:n}=e,a=By(),s="channelsLast"===n,r=s?1:2,o=s?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(t[2]," && pos < ").concat(t[1],") {");let c="";for(let l=0;l<=1;l++)for(let t=0;t<=1;t++)c+="\n          blockIndex = rc.z + ".concat(t,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(r,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(s,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+t,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+t,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function ak(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&1===n&&t[0]>1?[t[0],1]:null}function sk(t){let{x:e,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=t;const u=e.shape,h=r.texData.get(e.dataId),d=a.inChannels,p=u[0]*u[1]*u[2],f=a.outChannels,m="channelsLast"===a.dataFormat;let g;const y=[];if(null!=i){const t=ak(i.shape,m);null!=t&&(i=yv({inputs:{x:i},backend:r,attrs:{shape:t}}),y.push(i))}if(null!=o){const t=ak(o.shape,m);null!=t&&(o=yv({inputs:{x:o},backend:r,attrs:{shape:t}}),y.push(o))}if(!((1===p||1===f)&&d>_v)&&h.isPacked&&m&&null!=h.texture&&u[2]%2!==0&&s.D5U.arraysEqual(h.shape.slice(-3),u.slice(-3))){const t=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,t,a.inChannels],dtype:e.dtype},p=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,s.D5U.assert(Cy(h.shape,d.shape),(()=>"packed reshape ".concat(h.shape," to ").concat(d.shape," isn't free")));const f=yv({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(f);const m=Av({a:d,b:f,backend:r,transposeA:false,transposeB:false,bias:o,activation:l,preluActivationWeights:i,leakyreluAlpha:c}),b=r.texData.get(m.dataId);s.D5U.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),h.shape=p,b.shape=a.outShape,g=Qx({inputs:{x:m},backend:r}),g.shape=a.outShape,y.push(m)}else{const t=a.outHeight*a.outWidth,s=yv({inputs:{x:e},backend:r,attrs:{shape:m?[a.batchSize,t,a.inChannels]:[a.batchSize,a.inChannels,t]}}),u=yv({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),h=Av({a:m?s:u,b:m?u:s,transposeA:!m,transposeB:false,backend:r,bias:o,activation:l,preluActivationWeights:i,leakyreluAlpha:c});g=yv({inputs:{x:h},backend:r,attrs:{shape:a.outShape}}),y.push(s),y.push(u),y.push(h)}for(const s of y)r.disposeIntermediateTensorInfo(s);return g}function rk(t){let{x:e,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=t;const{filterWidth:u,filterHeight:h,inChannels:d,outWidth:p,outHeight:f,dataFormat:m}=a,g="channelsLast"===m,y=u*h*d,b=f*p,x=[a.batchSize,y,b],v=[];if(null!=i){const t=ak(i.shape,g);null!=t&&(i=yv({inputs:{x:i},backend:r,attrs:{shape:t}}),v.push(i))}if(null!=o){const t=ak(o.shape,g);null!=t&&(o=yv({inputs:{x:o},backend:r,attrs:{shape:t}}),v.push(o))}const w=yv({inputs:{x:n},backend:r,attrs:{shape:[1,y,s.D5U.sizeFromShape(n.shape)/y]}});v.push(w);const k=new nk(x,a),I=[e.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],S=r.runWebGLProgram(k,[e],"float32",I),N=yv({inputs:{x:S},backend:r,attrs:{shape:x}});v.push(S),v.push(N);const T=null!=o,C=null!=i,E="leakyrelu"===l,_=l?uv(l,!0):null,A=new hv(g?N.shape:w.shape,g?w.shape:N.shape,g?[a.batchSize,b,a.outChannels]:[a.batchSize,a.outChannels,b],!0,!1,T,_,C,E),D=g?[N,w]:[w,N];if(o&&D.push(o),C&&D.push(i),E){const t=r.makeTensorInfo([],"float32",s.D5U.createScalarValue(c,"float32"));D.push(t),v.push(t)}const R=r.runWebGLProgram(A,D,"float32"),O=yv({inputs:{x:R},backend:r,attrs:{shape:a.outShape}});v.push(R);for(const s of v)r.disposeIntermediateTensorInfo(s);return O}const ok={kernelName:s.mhS,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o}=e,{strides:i,pad:c,dataFormat:l,dilations:u,dimRoundingMode:h}=a,d=s.backend_util.convertConv2DDataFormat(l),p=s.backend_util.computeConv2DInfo(r.shape,o.shape,i,u,c,h,!1,d);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===d&&(0,s.OBj)().getBool("WEBGL_EXP_CONV")){const t=new ek(p),e=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=n.runWebGLProgram(t,[r,o],"float32",e)}else if((0,s.OBj)().getBool("WEBGL_CONV_IM2COL"))f=rk({x:r,filter:o,convInfo:p,backend:n});else{const t=new $w(p);f=n.runWebGLProgram(t,[r,o],"float32")}else f=sk({x:r,filter:o,convInfo:p,backend:n});const m=yv({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class ik{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,a=t.padInfo.top,s=t.padInfo.left,r="channelsLast"===t.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(s,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              ").concat(r?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ck{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,s=t.strideWidth,r="channelsLast"===t.dataFormat,o=e-1-t.padInfo.top,i=n-1-t.padInfo.left,c=r?1:2,l=r?2:3,u=r?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n\n              if (").concat(r,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class lk{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,a=t.strideWidth,s=t.padInfo.front,r=t.padInfo.top,o=t.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(t.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(e," - ").concat(s,";\n\n            if (xF < 0 || xF >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(r,";\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class uk{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,a=t.filterWidth,s=t.strideDepth,r=t.strideHeight,o=t.strideWidth,i=e-1-t.padInfo.front,c=n-1-t.padInfo.top,l=a-1-t.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(e,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(s,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(t.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(e," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const hk={kernelName:s.wUP,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:o}=e,{strides:i,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:h}=a,d=s.backend_util.convertConv2DDataFormat(l),p=s.backend_util.computeConv2DInfo(r.shape,h,i,1,c,u,!1,d),f=new ik(p);return n.runWebGLProgram(f,[r,o],"float32")}};class dk{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=rb(this.outputShape.length);const e=t.filterHeight,n=t.filterWidth,a=e-1-t.padInfo.top,s=n-1-t.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(t.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(t.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const pk={kernelName:s.wm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:o}=e,{inputShape:i,strides:c,pad:l,dataFormat:u,dimRoundingMode:h}=a,d=s.backend_util.convertConv2DDataFormat(u),p=s.backend_util.computeConv2DInfo(i,o.shape,c,1,l,h,!1,d);if((0,s.OBj)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===d){const t=[[p.strideHeight,p.strideWidth]],e=new dk(p);return n.runWebGLProgram(e,[r,o],"float32",t)}{const t=new ck(p);return n.runWebGLProgram(t,[r,o],"float32")}}};const fk={kernelName:s.x12,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o}=e,{strides:i,pad:c,dilations:l}=a,u=s.backend_util.computeConv3DInfo(r.shape,o.shape,i,l,c),h=new tk(u);return n.runWebGLProgram(h,[r,o],"float32")}};const mk={kernelName:s.o2y,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:o}=e,{strides:i,pad:c,filterShape:l}=a,u=s.backend_util.computeConv3DInfo(r.shape,l,i,1,c),h=new lk(u);return n.runWebGLProgram(h,[r,o],"float32")}};const gk={kernelName:s.ik2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:o}=e,{pad:i,strides:c,inputShape:l}=a,u=s.backend_util.computeConv3DInfo(l,o.shape,c,1,i),h=new uk(u);return n.runWebGLProgram(h,[r,o],"float32")}},yk=cv({opSnippet:iv+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Zx,"\n  return result;\n")}),bk={kernelName:s.mc4,backendName:"webgl",kernelFunc:yk},xk=cv({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),vk={kernelName:s.TR1,backendName:"webgl",kernelFunc:xk};class wk{constructor(t,e,n,a,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[r,o,i,c]=t,[l]=e,[u,h]=n;this.outputShape=[l,u,h,c];const d="bilinear"===a?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,y]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,x,v]=h>1?["".concat((i-1)/(h-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(r,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(x,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(s,"));\n          return;\n        }\n        float in_x = ").concat(v,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(s,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(d," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const kk={kernelName:s.VcC,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{image:s,boxes:r,boxInd:o}=e,{cropSize:i,method:c,extrapolationValue:l}=a,u=new wk(s.shape,r.shape,i,c,l);return n.runWebGLProgram(u,[s,r,o],"float32")}};var Ik;!function(t){t.Prod="*",t.Sum="+"}(Ik||(Ik={}));class Sk{constructor(t,e,n,a){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,r=this.op===Ik.Prod?"1.0":"0.0",o=n?r:"getX(".concat(Nk(s,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(Jy(s)," coords = getOutputCoords();\n        int end = ").concat(Tk(s,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(Tk(s,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(Nk(s,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function Nk(t,e,n){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".x, ").concat(e,".y");if(3===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z");if(4===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z, ").concat(e,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(t," is not yet supported"))}function Tk(t,e,n){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".y");if(3===t)return"".concat(e,".z");if(4===t)return"".concat(e,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(t," is not yet supported"))}function Ck(t,e,n,a,r,o){const i=e.shape.length,c=s.backend_util.getAxesPermutation([a],i);let l=e;null!=c&&(l=Cv({inputs:{x:e},backend:n,attrs:{perm:c}}));const u=s.backend_util.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(e.shape.length-1," ")+"but got axis=".concat(a));const h=l.shape[u];let d=Qx({inputs:{x:l},backend:n});for(let s=0;s<=Math.ceil(Math.log2(h))-1;s++){const e=new Sk(t,l.shape,!1,o),a=[[s]],r=d;d=n.runWebGLProgram(e,[d],d.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const e=new Sk(t,l.shape,r,o),a=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=c){const t=Cv({inputs:{x:d},backend:n,attrs:{perm:s.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(l),t}return d}const Ek={kernelName:s.Byc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:r,exclusive:o,reverse:i}=a;return Ck(Ik.Prod,s,n,r,o,i)}};const _k={kernelName:s.iHb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:r,exclusive:o,reverse:i}=a;return Ck(Ik.Sum,s,n,r,o,i)}};const Ak={kernelName:s.QRR,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,weights:r}=e,{size:o,binaryOutput:i}=a;if(1===s.shape.length){const t=n.readSync(s.dataId),e=n.readSync(r.dataId),a=Nb(t,e,r.dtype,r.shape,o);return n.makeTensorInfo([o],r.dtype,a)}if(2===s.shape.length){const t=n.bufferSync(s),e=n.bufferSync(r),a=Tb(t,e,o,i);return n.makeTensorInfo(a.shape,r.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(s.shape.length,"."))}};class Dk{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(e,";\n      int offset_h = imod(h, ").concat(e,");\n      int in_w = w / ").concat(e,";\n      int offset_w = imod(w, ").concat(e,");\n      int offset_d = (offset_h * ").concat(e," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Rk={kernelName:s.T0n,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockSize:r,dataFormat:o}=a,i=s.shape[0],c=("NHWC"===o?s.shape[1]:s.shape[2])*r,l=("NHWC"===o?s.shape[2]:s.shape[3])*r,u=("NHWC"===o?s.shape[3]:s.shape[1])/(r*r),h=new Dk("NHWC"===o?[i,c,l,u]:[i,u,c,l],r,o);return n.runWebGLProgram(h,[s],s.dtype)}};class Ok{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=rb(this.outputShape.length);const r=t.filterHeight,o=t.filterWidth,i=t.outChannels/t.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):s?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(r,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class Fk{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=rb(this.outputShape.length);const o=t.outChannels/t.inChannels,i=t.padInfo.left,c=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,h=t.filterWidth,d=h;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let s=0;s<h;s++)p+="\n          vec4 xTexelC".concat(2*s,";\n          int xTexelC").concat(2*s,"Ready;\n          vec4 xTexelC").concat(2*s+1,";\n          int xTexelC").concat(2*s+1,"Ready;\n          vec4 xC").concat(s,";");p+="\n    for (int r = 0; r < ".concat(u,"; r++) {\n      ");for(let s=0;s<h;s++)p+="\n          xTexelC".concat(2*s," = vec4(0.0);\n          xTexelC").concat(2*s,"Ready = 0;\n          xTexelC").concat(2*s+1," = vec4(0.0);\n          xTexelC").concat(2*s+1,"Ready = 0;\n          xC").concat(s," = vec4(0.0);");p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(d+1)/2;y++){const t=2*y;if(p+="\n          xC = xCCorner + ".concat(t*l,";\n          "),1===c){if(t<h&&(i%2===1?(p+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n              "),p+=1===l&&t>0?"\n                xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                  } else {\n                    xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                  }\n                  ")):p+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n\n                xC").concat(t," = xTexelC").concat(t,";\n                "),t+1<h)){const e=i%2===0?s.D5U.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                    xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(t+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(t+1,"Ready = 1;\n                  }\n                  "),p+=l>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                    } else {\n                     xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                    }\n                    "):"\n                    xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                    ")):p+=1===e?"\n                    xC".concat(t+1," = xTexelC").concat(t,";\n                    "):"\n                    xCOffset = xC + ".concat(e,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                      xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(t+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(t+1,"Ready = 1;\n                    }\n\n                    xC").concat(t+1," = xTexelC").concat(t+1,";\n                    ")}}else t<h&&(i%2===1?(p+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                  xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(t+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t+1,"Ready = 1;\n                }\n\n                xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n              "),t+1<h&&(p+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                "))):(p+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                  xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(t+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(t+1,"Ready = 1;\n                }\n\n                xC").concat(t," = vec4(\n                  xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n              "),t+1<h&&(p+="\n                  xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                "))));t<h&&(p+="\n            wTexel = getW(r, ".concat(t,", d1, q);\n            dotProd += xC").concat(t," * vec4(wTexel.xz, wTexel.xz);\n          "),t+1<h&&(p+="\n              wTexel = getW(r, ".concat(t+1,", d1, q);\n              dotProd += xC").concat(t+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),m="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(f,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(o,";\n        int q = d2 - d1 * ").concat(o,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(p,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(g,"\n        ").concat(m,"\n        setOutput(result);\n      }\n    ")}}const Mk={kernelName:s.cie,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o}=e,{strides:i,pad:c,dilations:l,dimRoundingMode:u}=a;let h=l;null==h&&(h=[1,1]),s.D5U.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,h),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(h,"'")));const d=s.backend_util.computeConv2DInfo(r.shape,o.shape,i,h,c,u,!0);let p;p=(0,s.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new Fk(d):new Ok(d);const f=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,o],"float32",f)}};class Bk{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,a=t.padInfo.top,s=t.padInfo.left,r=t.outChannels/t.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(r," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(s,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Lk{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,s=t.strideWidth,r=e-1-t.padInfo.top,o=n-1-t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(r,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const zk={kernelName:s.sL$,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:o}=e,{strides:i,dilations:c,pad:l,dimRoundingMode:u,filterShape:h}=a,d=s.backend_util.computeConv2DInfo(r.shape,h,i,c,l,u,!0),p=new Bk(d);return n.runWebGLProgram(p,[r,o],"float32")}};const Uk={kernelName:s.y7R,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:o}=e,{strides:i,dilations:c,pad:l,dimRoundingMode:u,inputShape:h}=a,d=s.backend_util.computeConv2DInfo(h,o.shape,i,c,l,u,!0),p=new Lk(d);return n.runWebGLProgram(p,[r,o],"float32")}};class Pk{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Vk={kernelName:s.$w,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,r=[...a.shape,...a.shape],o=s.D5U.sizeFromShape(a.shape),i=yv({inputs:{x:a},backend:n,attrs:{shape:[o]}}),c=new Pk(o),l=n.runWebGLProgram(c,[i],i.dtype),u=yv({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class Wk{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:a,strideHeight:s,strideWidth:r,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=t,{top:u,left:h}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(s,", ").concat(r,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(h,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(e,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const Gk={kernelName:s.p4S,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o}=e,{strides:i,pad:c,dilations:l}=a,u=s.backend_util.computeDilation2DInfo(r.shape,o.shape,i,c,"NHWC",l);let h;const d=new Wk(u);h=n.runWebGLProgram(d,[r,o],"float32");const p=yv({inputs:{x:h},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(h),p}};const Hk={kernelName:s.$g6,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{equation:r}=a,o=e,{allDims:i,summedDims:c,idDims:l}=s.backend_util.decodeEinsumEquation(r,o.length);s.backend_util.checkEinsumDimSizes(i.length,l,o);const{path:u,steps:h}=s.backend_util.getEinsumComputePath(c,l),d=h.length;let p=null,f=i.length;const m=[];for(let g=0;g<d;++g){for(const t of h[g]){const{permutationIndices:e,expandDims:a}=s.backend_util.getEinsumPermutation(f,l[t]);let r;s.backend_util.isIdentityPermutation(e)?r=o[t]:(r=Cv({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),m.push(r));const i=r.shape.slice();for(let t=0;t<a.length;++t)i.splice(a[t],0,1);s.D5U.arraysEqual(r.shape,i)||(r=yv({inputs:{x:r},backend:n,attrs:{shape:i}}),m.push(r)),null===p?p=r:(p=mv({inputs:{a:r,b:p},backend:n}),m.push(p))}g<d-1&&(u[g]>=0&&(p=Nv({inputs:{x:p},backend:n,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const s of m)s!==p&&n.disposeIntermediateTensorInfo(s);return p}},jk=cv({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Xk={kernelName:s.SX0,backendName:"webgl",kernelFunc:jk},qk={kernelName:s.HEU,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:a,y:r}=e,o=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yx("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new Kx("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(o,[a,r],a.dtype)}},Kk=lv({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Db}),Zk={kernelName:s.hdR,backendName:"webgl",kernelFunc:Kk},Yk=cv({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(s.backend_util.ERF_P,";\n  float a1 = ").concat(s.backend_util.ERF_A1,";\n  float a2 = ").concat(s.backend_util.ERF_A2,";\n  float a3 = ").concat(s.backend_util.ERF_A3,";\n  float a4 = ").concat(s.backend_util.ERF_A4,";\n  float a5 = ").concat(s.backend_util.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),Qk={kernelName:s.Omj,backendName:"webgl",kernelFunc:Yk},Jk=cv({opSnippet:iv+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Rb,dtype:"float32"}),$k={kernelName:s.NEP,backendName:"webgl",kernelFunc:Jk};function tI(t){const{inputs:e,attrs:n,backend:a}=t,{dim:r}=n,{input:o}=e,i=o.shape.length,c=o.shape.slice();let l=r;return r<0&&(s.D5U.assert(-(i+1)<=r,(()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]"))),l=i+r+1),c.splice(l,0,1),yv({inputs:{x:o},backend:a,attrs:{shape:c}})}const eI={kernelName:s.YFo,backendName:"webgl",kernelFunc:tI},nI="return exp(x) - 1.0;",aI=cv({opSnippet:nI,packedOpSnippet:nI,cpuKernelImpl:Ob}),sI={kernelName:s.Y0y,backendName:"webgl",kernelFunc:aI};class rI{constructor(t,e,n){this.variableNames=["real","imag"];const a=e[1];this.outputShape=e;const s=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),r=n?"".concat(a,".0"):"1.0";let o;if("real"===t)o="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error('FFT component must be either "real" or "imag", got '.concat(t,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(s,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(r,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function oI(t,e,n){const a=n.texData.get(t.dataId),r=s.D5U.sizeFromShape(t.shape),o=t.shape[t.shape.length-1],i=yv({inputs:{x:t},backend:n,attrs:{shape:[r/o,o]}}),c=i.shape,l=new rI("real",c,e),u=new rI("imag",c,e),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:c},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:c}],d=n.runWebGLProgram(l,h,"float32"),p=n.runWebGLProgram(u,h,"float32"),f=$x({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const m=yv({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const iI={kernelName:s.vwp,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e;return oI(a,!1,n)}};class cI{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function lI(t){const{backend:e,attrs:n}=t,{shape:a,value:r}=n;let{dtype:o}=n;if(o=o||s.D5U.inferDtype(r),"string"===o){const t=s.D5U.getArrayFromDType(o,s.D5U.sizeFromShape(a));return t.fill(r),e.makeTensorInfo(a,o,t)}{const t=new cI(a,r),n=[[r]];return e.runWebGLProgram(t,[],o,n)}}const uI={kernelName:s.deh,backendName:"webgl",kernelFunc:lI};class hI{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(e," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(e,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const dI={kernelName:s.Uyb,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n}=t;const{image:a}=e,s=n,r=new hI(a.shape);return s.runWebGLProgram(r,[a],a.dtype)}},pI="return floor(x);",fI=cv({opSnippet:pI,packedOpSnippet:pI,cpuKernelImpl:Fb}),mI={kernelName:s.OR,backendName:"webgl",kernelFunc:fI},gI=lv({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),yI={kernelName:s.jeX,backendName:"webgl",kernelFunc:gI};class bI{constructor(t){this.variableNames=["A"];const e=By(),[n,a]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(e.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class xI{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=By(),[n,a]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(e.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}const vI={kernelName:s.eBW,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t;let{pixels:r}=e;const{numChannels:o}=a,i="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[u,l],d=[u,l,o];if(c||i){const t=(0,s.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=wI&&t===kI||(kI=t,wI=document.createElement("canvas").getContext("2d",{willReadFrequently:kI})),wI.canvas.width=l,wI.canvas.height=u,wI.drawImage(r,0,0,l,u),r=wI.canvas}const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=sy.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const f=(0,s.OBj)().getBool("WEBGL_PACK")?new xI(d):new bI(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let wI,kI=(0,s.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const II={kernelName:s._V0,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o,bias:i,preluActivationWeights:c}=e,{strides:l,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=a,g=s.backend_util.convertConv2DDataFormat(h),y=s.backend_util.computeConv2DInfo(r.shape,o.shape,l,d,u,p,!1,g);let b;const x=[],v=null!=i,w=null!=c,k="leakyrelu"===f,I=()=>{const t=[r,o],e=(t,e)=>{if("NCHW"===e&&1===t.shape.length&&1!==t.shape[0]){const e=yv({inputs:{x:t},backend:n,attrs:{shape:[t.shape[0],1,1]}});return x.push(e),e}return t};if(v&&t.push(e(i,h)),w&&t.push(e(c,h)),k){const e=n.makeTensorInfo([],"float32",s.D5U.createScalarValue(m,"float32"));t.push(e),x.push(e)}return t};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&(0,s.OBj)().getBool("WEBGL_EXP_CONV")){const t=f?uv(f,!0):null,e=new ek(y,v,t,w,k),a=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],s=I();b=n.runWebGLProgram(e,s,"float32",a)}else if((0,s.OBj)().getBool("WEBGL_CONV_IM2COL"))b=rk({x:r,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});else{const t=f?uv(f,!1):null,e=new $w(y,v,t,w,k),a=I();b=n.runWebGLProgram(e,a,"float32")}else b=sk({x:r,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});const S=yv({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return x.push(b),x.forEach((t=>n.disposeIntermediateTensorInfo(t))),S}};const SI={kernelName:s.luS,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o,bias:i,preluActivationWeights:c}=e,{strides:l,pad:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,m=[];let g=h;null==g&&(g=[1,1]),s.D5U.assert(s.backend_util.eitherStridesOrDilationsAreOne(l,g),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(l," and dilations '").concat(g,"'")));const y=s.backend_util.computeConv2DInfo(r.shape,o.shape,l,g,u,d,!0),b=(0,s.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=p?uv(p,b):null,v=[r,o],w=null!=i,k=null!=c,I="leakyrelu"===p;if(w&&v.push(i),k&&v.push(c),I){const t=n.makeTensorInfo([],"float32",s.D5U.createScalarValue(f,"float32"));v.push(t),m.push(t)}let S;S=b?new Fk(y,w,x,k,I):new Ok(y,w,x,k,I);const N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=n.runWebGLProgram(S,v,"float32",N);return m.forEach((t=>n.disposeIntermediateTensorInfo(t))),T}};class NI{constructor(t,e,n,a){this.sliceDim=t,this.strides=e,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const s=Jy(n.length);let r="\n    int index;";for(let o=0;o<this.sliceDim;o++)r+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(s," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(r,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const TI={kernelName:s.q1x,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:a,indices:r}=e,o=r.shape,i=o[o.length-1],c=s.D5U.sizeFromShape(a.shape),[l,u,h,d]=s.backend_util.prepareAndValidate(a,r),p=yv({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),f=yv({inputs:{x:a},backend:n,attrs:{shape:[s.D5U.sizeFromShape(a.shape)/h,h]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const t=n.readSync(r.dataId),e=n.bufferSync(a),s=Mb(t,e,a.dtype,u,i,h,d,a.shape,c);return n.makeTensorInfo(l,a.dtype,s.values)}const m=new NI(i,d,[u,h],a.shape),g=n.runWebGLProgram(m,[f,p],f.dtype),y=yv({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class CI{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=Jy(this.rank),a=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let s=0;s<t.length;s++)2===s?a.push("index"):a.push("".concat(n[s]));return a.join()}(t);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(t[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function EI(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,indices:o}=e,{axis:i,batchDims:c}=a,l=s.D5U.parseAxisParam(i,r.shape)[0];if((0,s.OBj)().get("DEBUG")){const t=n.readSync(o.dataId),e=r.shape[l];for(let n=0;n<t.length;++n){const a=t[n];s.D5U.assert(a<=e-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(e-1,"]")))}}const u=s.backend_util.segment_util.collectGatherOpShapeInfo(r,o,l,c),h=s.D5U.sizeFromShape(o.shape),d=[],p=yv({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=yv({inputs:{x:o},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});d.push(p),d.push(f);const m=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,o])||"string"===r.dtype){const t=n.bufferSync(f),e=n.bufferSync(p),a=Bb(e,t,m);return d.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}const g=new CI(p.shape,m),y=n.runWebGLProgram(g,[p,f],p.dtype);d.push(y);const b=yv({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return d.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}const _I={kernelName:s.qi_,backendName:"webgl",kernelFunc:EI},AI=lv({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Lb,dtype:"bool"}),DI={kernelName:s.iZT,backendName:"webgl",kernelFunc:AI},RI=lv({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:zb}),OI={kernelName:s.Acj,backendName:"webgl",kernelFunc:RI};const FI={kernelName:s.Qg5,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e;return oI(a,!0,n)}},MI=cv({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),BI={kernelName:s.avt,backendName:"webgl",kernelFunc:MI},LI=cv({opSnippet:"return float(isinf(x));",dtype:"bool"}),zI={kernelName:s.iWB,backendName:"webgl",kernelFunc:LI},UI=cv({opSnippet:"return float(isnan(x));",dtype:"bool"}),PI={kernelName:s.r7n,backendName:"webgl",kernelFunc:UI},VI=lv({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Ub,dtype:"bool"}),WI={kernelName:s.vtC,backendName:"webgl",kernelFunc:VI},GI=lv({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Pb,dtype:"bool"}),HI={kernelName:s.CAk,backendName:"webgl",kernelFunc:GI};const jI={kernelName:s.e7N,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:s,num:r}=n,o=Vb(a,s,r);return e.makeTensorInfo([o.length],"float32",o)}},XI=cv({opSnippet:iv+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Wb}),qI={kernelName:s.ZbH,backendName:"webgl",kernelFunc:XI},KI=cv({opSnippet:iv+"\n  return log(1.0 + x);\n"}),ZI={kernelName:s.kU,backendName:"webgl",kernelFunc:KI},YI=lv({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),QI={kernelName:s.PYm,backendName:"webgl",kernelFunc:YI},JI=cv({opSnippet:"return float(!(x >= 1.0));"}),$I={kernelName:s.VfG,backendName:"webgl",kernelFunc:JI},tS=lv({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),eS={kernelName:s.MZg,backendName:"webgl",kernelFunc:tS};class nS{constructor(t,e,n,a,s){this.variableNames=["x"],this.outputShape=[];const r=e,o=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===s?"inversesqrt(".concat(c,")"):1===s?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(s,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(r,"; j <= ").concat(r,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class aS{constructor(t,e,n,a,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const r=e,o=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===s?"inversesqrt(".concat(c,")"):1===s?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(s,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(r,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(r,"; j <= ").concat(r,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const sS={kernelName:s.eZ0,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{depthRadius:o,bias:i,alpha:c,beta:l}=a,u=(0,s.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new aS(r.shape,o,i,c,l):new nS(r.shape,o,i,c,l);return n.runWebGLProgram(u,[r],r.dtype)}};class rS{constructor(t,e,n,a,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=a,this.beta=s,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(e,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(e," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(s,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(s,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const oS={kernelName:s.Hhh,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:s,y:r,dy:o}=e,{depthRadius:i,bias:c,alpha:l,beta:u}=a,h=new rS(s.shape,i,c,l,u);return n.runWebGLProgram(h,[s,r,o],s.dtype)}};function iS(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reductionIndices:o,keepDims:i}=a,c=r.shape.length,l=s.D5U.parseAxisParam(o,r.shape);let u=l;const h=s.backend_util.getAxesPermutation(u,c),d=null!=h,p=n.shouldExecuteOnCPU([r]);let f=r;if(d){if(p){const t=n.texData.get(f.dataId).values,e=new Array(c);for(let n=0;n<e.length;n++)e[n]=r.shape[h[n]];const a=yx(t,r.shape,r.dtype,h,e);f=n.makeTensorInfo(e,r.dtype);n.texData.get(f.dataId).values=a}else f=Sv(r,h,n);u=s.backend_util.getInnerMostAxes(u.length,c)}s.backend_util.assertAxesAreInnerMostDims("max",u,c);const[m,g]=s.backend_util.computeOutAndReduceShapes(f.shape,u);let y,b=m;if(i&&(b=s.backend_util.expandShapeToKeepDim(m,l)),p){const t=n.texData.get(f.dataId).values,e=Gb(t,s.D5U.sizeFromShape(g),b,r.dtype);y=n.makeTensorInfo(b,r.dtype);n.texData.get(y.dataId).values=e}else y=function(t,e,n,a){const r=s.D5U.sizeFromShape(e),o=yv({inputs:{x:t},attrs:{shape:[s.D5U.sizeFromShape(t.shape)/r,r]},backend:a}),i=wv(o,t.dtype,"max",a),c=yv({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),c}(f,g,b,n);return d&&n.disposeIntermediateTensorInfo(f),y}const cS={kernelName:s.YoZ,backendName:"webgl",kernelFunc:iS},lS=lv({opSnippet:qx+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Zx+"\n  return result;\n",cpuKernelImpl:Hb}),uS={kernelName:s.BMI,backendName:"webgl",kernelFunc:lS};const hS={kernelName:s.mTV,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;Fy(r,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;s.D5U.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=s.backend_util.computePool2DInfo(r.shape,o,i,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&s.D5U.arraysEqual(u.inShape,u.outShape))return Qx({inputs:{x:r},backend:n});const h=new lw(u,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};const dS={kernelName:s.OAf,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,h=s.backend_util.computePool3DInfo(r.shape,o,i,[1,1,1],c,u,l),d=new uw(h,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}};class pS{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,a=t.dilationHeight,s=t.effectiveFilterHeight,r=t.effectiveFilterWidth,o=s-1-t.padInfo.top,i=r-1-t.padInfo.left,c=s*r-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(s,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(e,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(r,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(r," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class fS{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,a=t.strideWidth,s=t.dilationDepth,r=t.dilationHeight,o=t.dilationWidth,i=t.effectiveFilterDepth,c=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=i-1-t.padInfo.front,h=c-1-t.padInfo.top,d=l-1-t.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(h,", ").concat(d,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(s,") {\n          float dyD = float(dyDCorner + wD) / ").concat(e,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(r,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const mS={kernelName:s.OU7,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:o}=e,i=o,{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=s.backend_util.computePool3DInfo(i.shape,c,l,[1,1,1],u,h),p=new uw(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new fS(d),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const gS={kernelName:s.OV7,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:o,output:i}=e,c=o;Fy([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:h,dimRoundingMode:d}=a,p=s.backend_util.computePool2DInfo(c.shape,l,u,1,h,d),f=new lw(p,"max",!0),m=n.runWebGLProgram(f,[c],c.dtype),g=new pS(p),y=n.runWebGLProgram(g,[r,m],c.dtype);return n.disposeIntermediateTensorInfo(m),y}};const yS={kernelName:s.vFR,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,{filterSize:o,strides:i,pad:c,includeBatchInIndex:l}=n,u=a;s.D5U.assert(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const h=[1,1];s.D5U.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,h),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(h,"'")));const d=s.backend_util.computePool2DInfo(r.shape,o,i,h,c),[p,f]=function(t,e,n,a){let s=new lw(n,"max",!1);const r=a.runWebGLProgram(s,[t],"float32");return s=new lw(n,"max",!0,!0,e),[r,a.runWebGLProgram(s,[t],"float32")]}(r,l,d,u);return[p,f]}};const bS={kernelName:s.q2K,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,{keepDims:o,axis:i}=n,c=a,l=r.shape.length,u=s.D5U.parseAxisParam(i,r.shape);let h=u;const d=s.backend_util.getAxesPermutation(h,l),p=null!=d,f=c.shouldExecuteOnCPU([r]),m=[];let g=r;if(p){if(f){const t=c.texData.get(g.dataId).values,e=new Array(l);for(let a=0;a<e.length;a++)e[a]=r.shape[d[a]];const n=yx(t,r.shape,r.dtype,d,e);g=c.makeTensorInfo(e,r.dtype);c.texData.get(g.dataId).values=n}else g=Sv(r,d,c);m.push(g),h=s.backend_util.getInnerMostAxes(h.length,l)}s.backend_util.assertAxesAreInnerMostDims("sum",h,l);const[y,b]=s.backend_util.computeOutAndReduceShapes(g.shape,h);let x=y;o&&(x=s.backend_util.expandShapeToKeepDim(y,u));const v=function(t,e,n,a){const r=s.D5U.sizeFromShape(e),o=yv({inputs:{x:t},attrs:{shape:[s.D5U.sizeFromShape(t.shape)/r,r]},backend:a}),i=wv(o,"float32","mean",a),c=yv({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),c}(g,b,x,c);for(const s of m)c.disposeIntermediateTensorInfo(s);return v}};const xS={kernelName:s.c17,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a,c=r.shape.length,l=s.D5U.parseAxisParam(o,r.shape);let u=l;const h=s.backend_util.getAxesPermutation(u,c);let d=r;null!=h&&(d=Cv({inputs:{x:r},backend:n,attrs:{perm:h}}),u=s.backend_util.getInnerMostAxes(u.length,r.shape.length)),s.backend_util.assertAxesAreInnerMostDims("min",u,c);const[p,f]=s.backend_util.computeOutAndReduceShapes(d.shape,u),m=yv({inputs:{x:d},backend:n,attrs:{shape:[-1,s.D5U.sizeFromShape(f)]}}),g=wv(m,m.dtype,"min",n);let y;if(i){y=yv({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(p,l)}})}else y=yv({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(d),y}},vS=lv({opSnippet:qx+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Zx+"\n  return result;\n",cpuKernelImpl:jb}),wS={kernelName:s.q8u,backendName:"webgl",kernelFunc:vS};class kS{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,s=Jy(a),r=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(s," start = ").concat(s,"(").concat(r,");\n      ").concat(s," end = ").concat(s,"(").concat(o,");\n\n      void main() {\n        ").concat(s," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(s," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(r,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class IS{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,s=Jy(a),r=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=vx("rc",a),c=vx("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h="reflect"===n?0:1;let d="";if(1===a){const t="\n        ".concat(s," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(h,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(h,";\n        }\n        source -= start;\n      ");d="\n        ".concat(s," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const t="\n        ".concat(s," source = rc;\n        ").concat(s," lt = ").concat(s,"(lessThan(source, start));\n        ").concat(s," gte = ").concat(s,"(greaterThanEqual(source, end));\n        ").concat(s," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(h,") +\n                gte * ((end - 1) * 2 - source + ").concat(h,");\n        source -= start;\n      ");d="\n        ".concat(s," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(t,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(t,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(s," start = ").concat(s,"(").concat(r,");\n      const ").concat(s," end = ").concat(s,"(").concat(o,");\n\n      void main() {\n        ").concat(s," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")}}const SS={kernelName:s.jQs,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r}=e,{paddings:o,mode:i}=a,c=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new IS(r.shape,o,i):new kS(r.shape,o,i);return n.runWebGLProgram(c,[r],r.dtype)}},NS=lv({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Zx+"\n  return result;\n"}),TS={kernelName:s.Vbg,backendName:"webgl",kernelFunc:NS};class CS{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(e-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(e-1,"));\n      }\n    ")}}const ES=lv({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),_S={kernelName:s.oHH,backendName:"webgl",kernelFunc:ES},AS="return a - b;",DS=lv({opSnippet:AS,packedOpSnippet:AS,supportsComplex:!0,cpuKernelImpl:fx}),RS={kernelName:s.Tr8,backendName:"webgl",kernelFunc:DS};function OS(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{dim:o}=a,i=s.D5U.parseAxisParam([o],r.shape),c=iS({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=s.backend_util.expandShapeToKeepDim(c.shape,i),u=yv({inputs:{x:c},backend:n,attrs:{shape:l}}),h=DS({inputs:{a:r,b:u},backend:n}),d=Jk({inputs:{x:h},backend:n}),p=Nv({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),f=yv({inputs:{x:p},backend:n,attrs:{shape:l}}),m=ES({inputs:{a:d,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const FS={kernelName:s.Gcp,backendName:"webgl",kernelFunc:OS};const MS={kernelName:s.NZg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{logits:s}=e,{numSamples:r,seed:o,normalized:i}=a,c=i?s:OS({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new CS(l,u,r),d=[[o]],p=n.runWebGLProgram(h,[c],"int32",d);return i||n.disposeIntermediateTensorInfo(c),p}},BS=Ex+"\n  return -x;\n";const LS={kernelName:s.kuV,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;if(n.shouldExecuteOnCPU([a])){const t=n.texData.get(a.dataId),[e,s]=qb(t.values,a.shape,a.dtype);return n.makeTensorInfo(s,a.dtype,e)}let r;return r=(0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Vx(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Cx(a.shape,BS),n.runWebGLProgram(r,[a],a.dtype)}},zS=s.GDt.GP;const US={kernelName:s.uv1,backendName:"webgl",kernelFunc:function(t){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l}=a,u=n.readSync(r.dataId),h=n.readSync(o.dataId),{selectedIndices:d}=zS(u,h,i,c,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},PS=s.GDt.qP;const VS={kernelName:s.cye,backendName:"webgl",kernelFunc:function(t){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,padToMaxOutputSize:u}=a,h=n.readSync(r.dataId),d=n.readSync(o.dataId),{selectedIndices:p,validOutputs:f}=PS(h,d,i,c,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},WS=s.GDt.pA;const GS={kernelName:s.W0H,backendName:"webgl",kernelFunc:function(t){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,softNmsSigma:u}=a,h=n.readSync(r.dataId),d=n.readSync(o.dataId),p=i,f=c,m=l,g=u,{selectedIndices:y,selectedScores:b}=WS(h,d,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class HS{constructor(t,e,n,a){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const jS={kernelName:s.we_,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{indices:r}=e,{dtype:o,depth:i,onValue:c,offValue:l}=a,u=s.D5U.sizeFromShape(r.shape),h=new HS(u,i,c,l),d=yv({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(h,[d],o);n.disposeIntermediateTensorInfo(d);const f=yv({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(p),f}};function XS(t){const{inputs:e,backend:n}=t,{x:a}=e;if("complex64"===a.dtype){const t=Rw({inputs:{input:a},backend:n}),e=XS({inputs:{x:t},backend:n}),s=Kw({inputs:{input:a},backend:n}),r=XS({inputs:{x:s},backend:n}),o=$x({inputs:{real:e,imag:r},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),o}return lI({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const qS={kernelName:s.RuY,backendName:"webgl",kernelFunc:XS};const KS={kernelName:s.qWM,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=Rw({inputs:{input:s},backend:a}),n=t({inputs:{x:e},backend:a}),r=Kw({inputs:{input:s},backend:a}),o=XS({inputs:{x:r},backend:a}),i=$x({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(o),i}return lI({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:a})}};const ZS={kernelName:s.QiL,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a;if(1===e.length)return tI({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach((t=>{s.D5U.assertShapesMatch(o,t.shape,"All tensors passed to stack must have matching shapes"),s.D5U.assert(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=Qw({inputs:e.map((t=>{const e=tI({inputs:{input:t},backend:n,attrs:{dim:r}});return c.push(e),e})),backend:n,attrs:{axis:r}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}};class YS{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,s=Jy(a),r=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(s," start = ").concat(s,"(").concat(r,");\n      ").concat(s," end = ").concat(s,"(").concat(o,");\n\n      void main() {\n        ").concat(s," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(s," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(r,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class QS{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,s=Jy(a),r=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=vx("rc",a),c=vx("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h=["".concat(s," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(h[f],"\n        if (").concat(d,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(s," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(s," start = ").concat(s,"(").concat(r,");\n      const ").concat(s," end = ").concat(s,"(").concat(o,");\n\n      void main() {\n        ").concat(s," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const JS=t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{paddings:o,constantValue:i}=a;if(0===s.D5U.sizeFromShape(r.shape)){const t=o.map(((t,e)=>t[0]+r.shape[e]+t[1]));return lI({backend:n,attrs:{shape:t,value:i,dtype:r.dtype}})}const c=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QS(r.shape,o,i):new YS(r.shape,o,i),l=[[i]];return n.runWebGLProgram(c,[r],r.dtype,l)},$S={kernelName:s.lyA,backendName:"webgl",kernelFunc:JS},tN=lv({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Zx+"\n  return result;\n"}),eN={kernelName:s.pe_,backendName:"webgl",kernelFunc:tN};const nN={kernelName:s.DlI,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a,c=r.shape.length,l=[],u=s.D5U.parseAxisParam(o,r.shape);let h=u;const d=s.backend_util.getAxesPermutation(h,c);let p,f=r;if(null!=d&&(f=Cv({inputs:{x:r},backend:n,attrs:{perm:d}}),h=s.backend_util.getInnerMostAxes(h.length,c),l.push(f)),s.backend_util.assertAxesAreInnerMostDims("prod",h,c),n.shouldExecuteOnCPU([f])){const t=n.texData.get(f.dataId).values,{outVals:e,outShape:a,outDtype:s}=Zb(f.shape,f.dtype,t,h);p=n.makeTensorInfo(a,s,e)}else{const[t,e]=s.backend_util.computeOutAndReduceShapes(f.shape,h),a=s.D5U.sizeFromShape(e),o=yv({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),i=wv(o,(0,s.z4k)(r.dtype),"prod",n);p=yv({inputs:{x:i},backend:n,attrs:{shape:t}}),l.push(o),l.push(i)}if(i){l.push(p);const t=s.backend_util.expandShapeToKeepDim(p.shape,u);p=yv({inputs:{x:p},backend:n,attrs:{shape:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}};const aN={kernelName:s.dDz,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{paramsNestedSplits:s,paramsDenseValues:r,indices:o}=e,{outputRaggedRank:i}=a,c=s.map((t=>n.readSync(t.dataId))),l=s.map((t=>t.shape)),u=n.readSync(r.dataId),h=n.readSync(o.dataId),[d,p,f]=Yb(c,l,u,r.shape,r.dtype,h,o.shape,i),m=d.map((t=>n.makeTensorInfo([t.length],"int32",t))),g=n.makeTensorInfo(f,r.dtype,p);return m.concat([g])}};const sN={kernelName:s.CQl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{starts:a,limits:s,deltas:r}=e,o=n.readSync(a.dataId),i=n.readSync(s.dataId),c=n.readSync(r.dataId),[l,u]=Qb(o,a.shape,a.dtype,i,s.shape,c,r.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const rN={kernelName:s.BiW,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{shape:s,values:r,defaultValue:o,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=a,l=n.readSync(s.dataId),u=n.readSync(r.dataId),h=n.readSync(o.dataId),d=i.map((t=>n.readSync(t.dataId))),p=i.map((t=>t.shape)),[f,m]=Jb(l,s.shape,u,r.shape,r.dtype,h,o.shape,d,p,c);return n.makeTensorInfo(f,r.dtype,m)}},oN=t=>{const{backend:e,attrs:n}=t,{start:a,stop:s,step:r,dtype:o}=n,i=$b(a,s,r,o);return e.makeTensorInfo([i.length],o,i)},iN={kernelName:s.e6w,backendName:"webgl",kernelFunc:oN},cN=cv({opSnippet:"return 1.0 / x;"}),lN={kernelName:s.$HU,backendName:"webgl",kernelFunc:cN},uN=cv({opSnippet:Ex+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),hN={kernelName:s.qkr,backendName:"webgl",kernelFunc:uN},dN=cv({opSnippet:Ex+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),pN={kernelName:s.SbG,backendName:"webgl",kernelFunc:dN};class fN{constructor(t,e,n,a,s){this.variableNames=["A"],this.outputShape=[];const[r,o,i,c]=t;this.outputShape=[r,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class mN{constructor(t,e,n,a,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,o,i,c]=t;this.outputShape=[r,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const gN={kernelName:s._Yw,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:c}=a,[l,u]=c,h=(0,s.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new mN(r.shape,l,u,o,i):new fN(r.shape,l,u,o,i);return n.runWebGLProgram(h,[r],"float32")}};class yN{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,s]=e,[,r,o]=t,i=[n&&r>1?a-1:a,n&&o>1?s-1:s],c=[n&&r>1?r-1:r,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(r,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(s-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const bN={kernelName:s.zbQ,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s,dy:r}=e,{alignCorners:o}=a,i=new yN(r.shape,s.shape,o);return n.runWebGLProgram(i,[r],r.dtype)}};class xN{constructor(t,e,n,a,s){this.variableNames=["A"],this.outputShape=[];const[r,o,i,c]=t;this.outputShape=[r,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class vN{constructor(t,e,n,a,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,o,i,c]=t;this.outputShape=[r,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const wN={kernelName:s.dpD,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:c}=a,[l,u]=c,h=(0,s.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new vN(r.shape,l,u,o,i):new xN(r.shape,l,u,o,i);return n.runWebGLProgram(h,[r],r.dtype)}};class kN{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,s]=e,[,r,o]=t,i=[n&&r>1?a-1:a,n&&o>1?s-1:s],c=[n&&r>1?r-1:r,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(r,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(s,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const IN={kernelName:s.Hmb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s,dy:r}=e,{alignCorners:o}=a,i=new kN(r.shape,s.shape,o);return n.runWebGLProgram(i,[r],r.dtype)}};class SN{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=t,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(t[0]," - coord - 1));\n        }\n      "));const a=t.map(((n,a)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),s=Jy(n);this.userCode="\n      void main() {\n        ".concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class NN{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=t;const a=vx("rc",n),s="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),r="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=Jy(n);function i(n){const a=t.map(((a,s)=>function(n,a){return-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(s,n))),s=a.join(","),r=a.slice(-2).join(",");return"getChannel(getX(".concat(s,"), vec2(").concat(r,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(t[0]," - rc - 1),\n            ").concat(t[0]," - rc - 1);\n          if(").concat(s,"){\n              result.g = getChannel(getX(").concat(t[0]," - (rc  + 1) - 1),\n                ").concat(t[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(t){return i(t)}(a.slice()),";\n          if(").concat(s,"){\n            result.g = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",i(t)}(a.slice()),";\n          }\n          if(").concat(r,") {\n            result.b = ").concat(function(t){return t[n-2]="("+t[n-2]+" + 1)",i(t)}(a.slice()),";\n            if(").concat(s,") {\n              result.a = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",i(t)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const TN={kernelName:s.mKl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{dims:o}=a,i=r.shape.length,c=s.D5U.parseAxisParam(o,r.shape);if(0===i)return Qx({inputs:{x:r},backend:n});const l=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NN(r.shape,c):new SN(r.shape,c);return n.runWebGLProgram(l,[r],r.dtype)}};class CN{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],a=t[2];this.outputShape=t;let s="";s="number"===typeof e?"float outputValue = ".concat(e.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(e.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(s,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const EN={kernelName:s.b9H,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{image:r}=e,{radians:o,fillValue:i,center:c}=n,l=a,u=new CN(r.shape,i),[h,d]=s.backend_util.getImageCenter(c,r.shape[1],r.shape[2]),p=[[h,d,Math.sin(o),Math.cos(o)]];return l.runWebGLProgram(u,[r],r.dtype,p)}},_N=cv({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),AN={kernelName:s.e07,backendName:"webgl",kernelFunc:_N},DN=cv({opSnippet:"return inversesqrt(x);",cpuKernelImpl:tx}),RN={kernelName:s.bV0,backendName:"webgl",kernelFunc:DN};class ON{constructor(t,e,n,a,s,r){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=r;const i=Jy(s.length),c=Jy(r.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=e>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(s,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(t,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(e,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(d,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class FN{constructor(t,e,n,a,s,r){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r;const i=Jy(s.length),c=Jy(r.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=e>1?"strides[j]":"strides",g=e>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(s,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(t,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(e,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(e,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(d,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const MN={kernelName:s.xQA,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:r,updates:o}=e,{shape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=s.backend_util.calculateShapes(o,r,i),p=[d/u,u];if(0===d)return n.makeTensorInfo(i,r.dtype);const f=yv({inputs:{x:r},backend:n,attrs:{shape:[l,c]}}),m=yv({inputs:{x:o},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;y=(0,s.OBj)().getBool("WEBGL_PACK")?new FN(l,c,f.shape.length,m.shape.length,h,p):new ON(l,c,f.shape.length,m.shape.length,h,p);const b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=yv({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class BN{constructor(t,e,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(e+1)),"; ++i) { if (left >= right) break;"),o=2===(0,s.OBj)().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(o,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(i," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const LN={kernelName:s.nr8,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sortedSequence:s,values:r}=e,{side:o}=a,i=new BN(s.shape[0],s.shape[1],r.shape[1],o),c=[[s.shape[1]]];return n.runWebGLProgram(i,[s,r],"int32",c)}};class zN{constructor(t,e,n){let a,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)s="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],o=[];for(let a=0;a<e.length;a++)o.push("".concat(n[a])),a<t&&r.push("".concat(n[a]));a=r.join(),s=o.join()}const r=Jy(n);this.userCode="\n      void main() {\n        ".concat(r," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(s,"));\n        } else {\n          setOutput(getB(").concat(s,"));\n        }\n      }\n    ")}}const UN={kernelName:s.PhF,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:a,t:r,e:o}=e,i=new zN(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,o],(0,s.x8V)(r.dtype,o.dtype))}},PN=cv({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(s.backend_util.SELU_SCALEALPHA,";\n  float scale = ").concat(s.backend_util.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),VN={kernelName:s.oFR,backendName:"webgl",kernelFunc:PN},WN=cv({opSnippet:iv+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:nx}),GN={kernelName:s.a5O,backendName:"webgl",kernelFunc:WN},HN=cv({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),jN={kernelName:s.i5y,backendName:"webgl",kernelFunc:HN},XN=cv({opSnippet:iv+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Zx,"\n  return result;\n")}),qN={kernelName:s.RQH,backendName:"webgl",kernelFunc:XN},KN=cv({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),ZN={kernelName:s.wYB,backendName:"webgl",kernelFunc:KN},YN=cv({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),QN={kernelName:s.MRv,backendName:"webgl",kernelFunc:YN},JN={kernelName:s.TQc,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:o,paddings:i}=a;s.D5U.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const c=o.reduce(((t,e)=>t*e)),l=[[0,0]];l.push(...i);for(let s=1+o.length;s<r.shape.length;++s)l.push([0,0]);const u=[],h=JS({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=s.backend_util.getReshaped(h.shape,o,c,!1),p=s.backend_util.getPermuted(d.length,o.length,!1),f=s.backend_util.getReshapedPermuted(h.shape,o,c,!1),m=yv({inputs:{x:h},backend:n,attrs:{shape:d}}),g=Cv({inputs:{x:m},backend:n,attrs:{perm:p}}),y=yv({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(h),u.push(m),u.push(g),u.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}};const $N={kernelName:s.O3z,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:a,values:s,denseShape:r,defaultValue:o}=e;if(1!==r.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(r.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==s.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(s.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),c=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(o.dataId)[0],[h,d,p,f,m]=rx(i,a.shape,a.dtype,c,s.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const tT={kernelName:s.nhH,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:a,inputShape:s,newShape:r}=e;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==s.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(s.shape));if(1!==r.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(r.shape));const o=Array.from(n.readSync(s.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(r.dataId)),[l,u,h]=ox(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}};const eT={kernelName:s.w3H,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:s,segmentIds:r}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(s.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(r.shape));const o=n.readSync(a.dataId),i=n.readSync(s.dataId),c=n.readSync(r.dataId),[l,u]=ix(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const nT={kernelName:s.ZjV,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:s,segmentIds:r}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(s.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(r.shape));const o=n.readSync(a.dataId),i=n.readSync(s.dataId),c=n.readSync(r.dataId),[l,u]=ix(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const aT={kernelName:s.D2d,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:h,strides:d,outputSize:p}=s.backend_util.calculateShapes(o,r,c);if("string"===o.dtype){const t=n.bufferSync(r),e=n.bufferSync(o),a=s.D5U.decodeString(n.readSync(i.dataId)[0]),f=ex(t,e,c,p,h,u,l,d,a,false);return n.makeTensorInfo(c,f.dtype,f.values)}const f=new ON(u,l,r.shape.length,o.shape.length,d,[p,1],false),m=n.runWebGLProgram(f,[o,r,i],o.dtype),g=yv({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),g}};const sT={kernelName:s.L8s,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{numOrSizeSplits:o,axis:i}=a,c=s.D5U.parseAxisParam(i,r.shape)[0],l=s.backend_util.prepareSplitSize(r,o,c),u=r.shape.length,h=new Array(u).fill(0),d=r.shape.slice();return l.map((t=>{const e=[...d];e[c]=t;const a=Sw({inputs:{x:r},backend:n,attrs:{begin:h,size:e}});return h[c]+=t,a}))}},rT="return sqrt(x);",oT=cv({opSnippet:rT,packedOpSnippet:rT,cpuKernelImpl:cx}),iT={kernelName:s.FKq,backendName:"webgl",kernelFunc:oT},cT=cv({opSnippet:"return x * x;"}),lT={kernelName:s.bK0,backendName:"webgl",kernelFunc:cT},uT="return (a - b) * (a - b);",hT=lv({opSnippet:uT,packedOpSnippet:uT}),dT={kernelName:s._tC,backendName:"webgl",kernelFunc:hT};const pT={kernelName:s.e0R,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const o=n.readSync(r.dataId),i=s.backend_util.fromUint8ToStringArray(o),c=lx(i,"string",a);return n.makeTensorInfo(r.shape,"string",c)}};const fT={kernelName:s.h8e,backendName:"webgl",kernelFunc:function(t){let{inputs:e,attrs:n,backend:a}=t;const{x:s}=e,r=Ex+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new Cx(s.shape,r);return a.runWebGLProgram(o,[s],s.dtype)}};class mT{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,s=Jy(n.length),r=Jy(n.length);let o="";if(1===a)o="coords * strides + begin";else{let t=0;o=n.map(((e,a)=>(t++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(t-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(s," begin = ").concat(s,"(").concat(t,");\n      ").concat(s," strides = ").concat(s,"(").concat(e,");\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const gT={kernelName:s.jQk,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:o,end:i,strides:c,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=s.kuN.sliceInfo(r.shape,o,i,c,l,u,h,d,p);let k;if(g)k=yv({inputs:{x:r},backend:n,attrs:{shape:m}});else if(y||b){s.D5U.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const t=s.kuN.computeOutShape(x,v,w),e=Sw({inputs:{x:r},backend:n,attrs:{begin:x,size:t}});k=yv({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(e)}else{if(n.shouldExecuteOnCPU([r])){const t=n.readSync(r.dataId),e=(0,s.f3b)(r.shape,r.dtype,t),a=ux(f,e,w,x);k=n.makeTensorInfo(m,r.dtype,a.values)}else{const t=new mT(x,w,f);k=n.runWebGLProgram(t,[r],r.dtype)}}const I=yv({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),I}};const yT={kernelName:s._JP,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{separator:s,nGramWidths:r,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=e,d=n.readSync(u.dataId),p=n.readSync(h.dataId),[f,m]=hx(d,p,s,r,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const bT={kernelName:s.s1s,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{skipEmpty:s}=a,{input:r,delimiter:o}=e;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error("Input must be a vector, got shape: ".concat(r.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(r.dataId),c=n.readSync(o.dataId)[0],[l,u,h]=dx(i,c,s),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const xT={kernelName:s.XkS,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{numBuckets:s}=a,{input:r}=e;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(r.dataId),i=px(o,s);return n.makeTensorInfo(r.shape,"int32",i)}},vT=cv({opSnippet:"return tan(x);"}),wT={kernelName:s.sEM,backendName:"webgl",kernelFunc:vT},kT=cv({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),IT={kernelName:s.MIZ,backendName:"webgl",kernelFunc:kT};const ST={kernelName:s.SIB,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{tensor:r,indices:o,updates:i}=e,{}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=s.backend_util.calculateShapes(i,o,r.shape),p=[d/u,u];if(0===d)return n.makeTensorInfo(r.shape,o.dtype);const f=yv({inputs:{x:o},backend:n,attrs:{shape:[l,c]}}),m=yv({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),g=yv({inputs:{x:r},backend:n,attrs:{shape:p}}),y=new ON(l,c,f.shape.length,m.shape.length,h,p,!1,!0),b=n.runWebGLProgram(y,[m,f,g],g.dtype),x=yv({inputs:{x:b},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),x}};class NT{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const a=Jy(this.rank),s=function(t){const e=t.length;if(e>5)throw Error("Tile for rank ".concat(e," is not yet supported"));if(1===e)return"imod(resRC, ".concat(t[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let s=0;s<t.length;s++)a.push("imod(".concat(n[s],", ").concat(t[s],")"));return a.join()}(t);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(s,"));\n      }\n    ")}}function TT(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reps:o}=a;if("string"===r.dtype||r.shape.length>5){const t=n.readSync(r.dataId),e="string"===r.dtype?t.map((t=>s.D5U.decodeString(t))):t,a=(0,s.f3b)(r.shape,r.dtype,e),i=mx(a,o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new NT(r.shape,o);return n.runWebGLProgram(i,[r],r.dtype)}const CT={kernelName:s.n9L,backendName:"webgl",kernelFunc:TT};class ET{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class _T{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function AT(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function DT(t){let e=1;for(;e<t;)e*=2;return e}const RT={kernelName:s.cWu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{k:o,sorted:i}=a,c=(0,s.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,s.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([r])||h<c||o>l){const t=n.readSync(r.dataId),[e,a]=gx(t,u,r.dtype,o,i);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===o)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===h)return[r,lI({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const d=n.texData.get(r.dataId),p=null!==d&&d.isPacked,f=p?n.unpackTensor(r):r,m=s.D5U.sizeFromShape(u)/h,g=yv({inputs:{x:f},attrs:{shape:[m,h]},backend:n});p&&AT(n,f);const y=DT(o),b=DT(h);let x=null;const v=()=>null===x?[g,g]:[g,x],w=(t,e,a)=>{const s=v(),r=new ET(a),o=[[h],[null===x?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],i=x;x=n.runWebGLProgram(r,s,"int32",o),AT(n,i)};for(let s=1;s<y;s*=2){const t=2*s;for(let e=s;e>=1;e/=2)w(t,e,[m,b])}for(let s=b;s>y;s/=2){const t=v(),e=new _T([m,s/2]),a=[[h],[null===x?1:0],[y]],r=x;x=n.runWebGLProgram(e,t,"int32",a),AT(n,r);const o=y/2,i=2*o;for(let n=o;n>=1;n/=2)w(i,n,x.shape)}let k=x;x=Sw({inputs:{x:x},backend:n,attrs:{begin:0,size:[m,o]}}),AT(n,k);let I=EI({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});AT(n,g);const S=u.slice(0,-1);S.push(o),k=x,x=yv({inputs:{x:x},attrs:{shape:S},backend:n}),AT(n,k);const N=I;return I=yv({inputs:{x:I},attrs:{shape:S},backend:n}),AT(n,N),[I,x]}};class OT{constructor(t,e,n,a,s,r){this.variableNames=["Image","Transforms"],this.outputShape=r;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(t," && 0 <= coordX && coordX < ").concat(e,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(s,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(s,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(e,"));\n                float mapY = mapCoord(inY, float(").concat(t,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const FT={kernelName:s.wx7,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:s,transforms:r}=e,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=a,[u,h,d,p]=s.shape,[f,m]=null!=l?l:[h,d],g=new OT(h,d,o,i,c,[u,f,m,p]);return n.runWebGLProgram(g,[s,r],"float32")}};const MT={kernelName:s.kpP,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{axis:s}=n,{x:r}=e;Fy(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(r.dataId),{outputValues:i,outputShape:c,indices:l}=bx(o,s,r.shape,r.dtype);return[a.makeTensorInfo(c,r.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const BT={kernelName:s.ToN,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{value:s}=e;let{axis:r}=a;r<0&&(r+=s.shape.length);const o=s,i=o.shape.length,c=s.shape[r],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==r&&(l[u++]=o.shape[m]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[r]=1;const f=new Array(c);for(let m=0;m<f.length;m++){d[r]=m;const t=Sw({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),e=yv({inputs:{x:t},backend:n,attrs:{shape:l}});f[m]=e,h.push(t)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class LT{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,a=t.batchSize,s=t.inSize,r=t.numSegments,o=r*Math.ceil(s/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";s%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return initializationValue;\n        }\n      "));let h="";s%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(h,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(r,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(r,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const zT={kernelName:s.Qvg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,segmentIds:o}=e,{numSegments:i}=a,c=r.shape.length,l=[];let u=0;const h=s.backend_util.getAxesPermutation([u],c);let d=r;null!=h&&(d=Cv({inputs:{x:r},backend:n,attrs:{perm:h}}),l.push(d),u=s.backend_util.getInnerMostAxes(1,c)[0]);const p=s.backend_util.segment_util.computeOutShape(d.shape,u,i),f=s.D5U.sizeFromShape([d.shape[u]]),m=yv({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,s.z4k)(r.dtype),y=(t,e,a,r,o)=>{const i=t.shape[0],c=t.shape[1],u=s.backend_util.segment_util.segOpComputeOptimalWindowSize(c,o),h=new LT({windowSize:u,inSize:c,batchSize:i,numSegments:o},e),d=n.compileAndRun(h,[t,a],r);if(l.push(d),d.shape[1]===o)return d;const p=oN({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=TT({inputs:{x:p},backend:n,attrs:{reps:[c/u]}});l.push(p),l.push(f);return y(d,e,f,r,o)},b=yv({inputs:{x:y(m,"unsortedSegmentSum",o,g,i)},backend:n,attrs:{shape:p}});let x=b;if(null!=h){l.push(b);const t=s.backend_util.getUndoAxesPermutation(h);x=Cv({inputs:{x:x},backend:n,attrs:{perm:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},UT=[Dv,Ov,Mv,Lv,Pv,Gv,Hv,jv,Qv,Jv,tw,nw,sw,ow,cw,hw,dw,mw,gw,yw,vw,Tw,Cw,Ew,_w,Mw,zw,Vw,tv,Hw,Jw,ok,hk,pk,fk,mk,gk,bk,vk,kk,Ek,_k,Ak,Rk,Mk,zk,Uk,Vk,Gk,Hk,Xk,qk,Zk,Qk,$k,eI,sI,iI,uI,dI,mI,yI,vI,II,SI,TI,_I,DI,OI,Jx,FI,Zw,BI,zI,PI,av,WI,HI,jI,qI,ZI,QI,$I,eS,sS,oS,cS,uS,hS,dS,mS,gS,yS,bS,xS,wS,SS,TS,MS,gv,LS,US,VS,GS,Dw,jS,KS,ZS,$S,eN,ov,nN,aN,sN,rN,iN,Ow,_S,lN,hN,pN,bv,gN,bN,wN,IN,TN,EN,AN,RN,MN,LN,UN,VN,GN,jN,qN,ZN,Nw,FS,QN,JN,$N,tT,eT,nT,aT,sT,iT,lT,dT,pT,fT,gT,yT,bT,xT,RS,Tv,wT,IT,ST,CT,RT,FT,Ev,MT,BT,zT,qS];for(const PT of UT)(0,s.wCN)(PT);s.jTM,Pl.gJ},8987:t=>{t.exports=n;var e=null;try{e=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function a(t){return!0===(t&&t.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var s={},r={};function o(t,e){var n,a,o;return e?(o=0<=(t>>>=0)&&t<256)&&(a=r[t])?a:(n=c(t,(0|t)<0?-1:0,!0),o&&(r[t]=n),n):(o=-128<=(t|=0)&&t<128)&&(a=s[t])?a:(n=c(t,t<0?-1:0,!1),o&&(s[t]=n),n)}function i(t,e){if(isNaN(t))return e?y:g;if(e){if(t<0)return y;if(t>=p)return k}else{if(t<=-f)return I;if(t+1>=f)return w}return t<0?i(-t,e).neg():c(t%d|0,t/d|0,e)}function c(t,e,a){return new n(t,e,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return g;if("number"===typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(t.substring(1),e,n).neg();for(var s=i(l(n,8)),r=g,o=0;o<t.length;o+=8){var c=Math.min(8,t.length-o),h=parseInt(t.substring(o,o+c),n);if(c<8){var d=i(l(n,c));r=r.mul(d).add(i(h))}else r=(r=r.mul(s)).add(i(h))}return r.unsigned=e,r}function h(t,e){return"number"===typeof t?i(t,e):"string"===typeof t?u(t,e):c(t.low,t.high,"boolean"===typeof e?e:t.unsigned)}n.fromString=u,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var x=o(1,!0);n.UONE=x;var v=o(-1);n.NEG_ONE=v;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=c(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var e=i(t),n=this.div(e),a=n.mul(e).sub(this);return n.toString(t)+a.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var s=i(l(t,6),this.unsigned),r=this,o="";;){var c=r.div(s),u=(r.sub(c.mul(s)).toInt()>>>0).toString(t);if((r=c).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1===(1&this.low)},S.isEven=function(){return 0===(1&this.low)},S.equals=function(t){return a(t)||(t=h(t)),(this.unsigned===t.unsigned||this.high>>>31!==1||t.high>>>31!==1)&&(this.high===t.high&&this.low===t.low)},S.eq=S.equals,S.notEquals=function(t){return!this.eq(t)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(t){return this.comp(t)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(t){return this.comp(t)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(t){return this.comp(t)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(t){return this.comp(t)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(t){if(a(t)||(t=h(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(t){a(t)||(t=h(t));var e=this.high>>>16,n=65535&this.high,s=this.low>>>16,r=65535&this.low,o=t.high>>>16,i=65535&t.high,l=t.low>>>16,u=0,d=0,p=0,f=0;return p+=(f+=r+(65535&t.low))>>>16,d+=(p+=s+l)>>>16,u+=(d+=n+i)>>>16,u+=e+o,c((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(t){return a(t)||(t=h(t)),this.add(t.neg())},S.sub=S.subtract,S.multiply=function(t){if(this.isZero())return g;if(a(t)||(t=h(t)),e)return c(e.mul(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned);if(t.isZero())return g;if(this.eq(I))return t.isOdd()?I:g;if(t.eq(I))return this.isOdd()?I:g;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(m)&&t.lt(m))return i(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,r=this.low>>>16,o=65535&this.low,l=t.high>>>16,u=65535&t.high,d=t.low>>>16,p=65535&t.low,f=0,y=0,b=0,x=0;return b+=(x+=o*p)>>>16,y+=(b+=r*p)>>>16,b&=65535,y+=(b+=o*d)>>>16,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=r*d)>>>16,y&=65535,f+=(y+=o*u)>>>16,f+=n*p+s*d+r*u+o*l,c((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(t){if(a(t)||(t=h(t)),t.isZero())throw Error("division by zero");var n,s,r;if(e)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?c((this.unsigned?e.div_u:e.div_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return y;if(t.gt(this.shru(1)))return x;r=y}else{if(this.eq(I))return t.eq(b)||t.eq(v)?I:t.eq(I)?b:(n=this.shr(1).div(t).shl(1)).eq(g)?t.isNegative()?b:v:(s=this.sub(t.mul(n)),r=n.add(s.div(t)));if(t.eq(I))return this.unsigned?y:g;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();r=g}for(s=this;s.gte(t);){n=Math.max(1,Math.floor(s.toNumber()/t.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),u=o<=48?1:l(2,o-48),d=i(n),p=d.mul(t);p.isNegative()||p.gt(s);)p=(d=i(n-=u,this.unsigned)).mul(t);d.isZero()&&(d=b),r=r.add(d),s=s.sub(p)}return r},S.div=S.divide,S.modulo=function(t){return a(t)||(t=h(t)),e?c((this.unsigned?e.rem_u:e.rem_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return c(~this.low,~this.high,this.unsigned)},S.and=function(t){return a(t)||(t=h(t)),c(this.low&t.low,this.high&t.high,this.unsigned)},S.or=function(t){return a(t)||(t=h(t)),c(this.low|t.low,this.high|t.high,this.unsigned)},S.xor=function(t){return a(t)||(t=h(t)),c(this.low^t.low,this.high^t.high,this.unsigned)},S.shiftLeft=function(t){return a(t)&&(t=t.toInt()),0===(t&=63)?this:t<32?c(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):c(0,this.low<<t-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(t){return a(t)&&(t=t.toInt()),0===(t&=63)?this:t<32?c(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):c(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(t){if(a(t)&&(t=t.toInt()),0===(t&=63))return this;var e=this.high;return t<32?c(this.low>>>t|e<<32-t,e>>>t,this.unsigned):c(32===t?e:e>>>t-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},S.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},S.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},n.fromBytes=function(t,e,a){return a?n.fromBytesLE(t,e):n.fromBytesBE(t,e)},n.fromBytesLE=function(t,e){return new n(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},n.fromBytesBE=function(t,e){return new n(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}},6699:(t,e,n)=>{var a=n(2501),s=n(9112),r=n(2132),o=n(7368),i=n(4113),c=n(1725),l=n(3411);l.alea=a,l.xor128=s,l.xorwow=r,l.xorshift7=o,l.xor4096=i,l.tychei=c,t.exports=l},2501:function(t,e,n){var a;!function(t,s,r){function o(t){var e=this,n=function(){var t=4022871197,e=function(e){e=String(e);for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)};return e}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function i(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function c(t,e){var n=new o(t),a=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,a&&("object"==typeof a&&i(a,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,s))||(s.exports=a):this.alea=c}(0,t=n.nmd(t),n.amdD)},1725:function(t,e,n){var a;!function(t,s,r){function o(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,a=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-a|0,a=a<<24^a>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-a|0,e.d=a<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var a=0;a<n.length+20;a++)e.b^=0|n.charCodeAt(a),e.next()}function i(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function c(t,e){var n=new o(t),a=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&i(a,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,s))||(s.exports=a):this.tychei=c}(0,t=n.nmd(t),n.amdD)},9112:function(t,e,n){var a;!function(t,s,r){function o(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function c(t,e){var n=new o(t),a=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&i(a,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,s))||(s.exports=a):this.xor128=c}(0,t=n.nmd(t),n.amdD)},4113:function(t,e,n){var a;!function(t,s,r){function o(t){var e=this;e.next=function(){var t,n,a=e.w,s=e.X,r=e.i;return e.w=a=a+1640531527|0,n=s[r+34&127],t=s[r=r+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[r]=n^t,e.i=r,n+(a^a>>>16)|0},function(t,e){var n,a,s,r,o,i=[],c=128;for(e===(0|e)?(a=e,e=null):(e+="\0",a=0,c=Math.max(c,e.length)),s=0,r=-32;r<c;++r)e&&(a^=e.charCodeAt((r+32)%e.length)),0===r&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,r>=0&&(o=o+1640531527|0,s=0==(n=i[127&r]^=a+o)?s+1:0);for(s>=128&&(i[127&(e&&e.length||0)]=-1),s=127,r=512;r>0;--r)a=i[s+34&127],n=i[s=s+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[s]=a^n;t.w=o,t.X=i,t.i=s}(e,t)}function i(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function c(t,e){null==t&&(t=+new Date);var n=new o(t),a=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,a&&(a.X&&i(a,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,s))||(s.exports=a):this.xor4096=c}(0,t=n.nmd(t),n.amdD)},7368:function(t,e,n){var a;!function(t,s,r){function o(t){var e=this;e.next=function(){var t,n,a=e.x,s=e.i;return t=a[s],n=(t^=t>>>7)^t<<24,n^=(t=a[s+1&7])^t>>>10,n^=(t=a[s+3&7])^t>>>3,n^=(t=a[s+4&7])^t<<7,t=a[s+7&7],n^=(t^=t<<13)^t<<9,a[s]=n,e.i=s+1&7,n},function(t,e){var n,a=[];if(e===(0|e))a[0]=e;else for(e=""+e,n=0;n<e.length;++n)a[7&n]=a[7&n]<<15^e.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],t.x=a,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function i(t,e){return e.x=t.x.slice(),e.i=t.i,e}function c(t,e){null==t&&(t=+new Date);var n=new o(t),a=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,a&&(a.x&&i(a,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,s))||(s.exports=a):this.xorshift7=c}(0,t=n.nmd(t),n.amdD)},2132:function(t,e,n){var a;!function(t,s,r){function o(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),a==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function c(t,e){var n=new o(t),a=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&i(a,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,s))||(s.exports=a):this.xorwow=c}(0,t=n.nmd(t),n.amdD)},3411:function(t,e,n){var a;!function(s,r,o){var i,c=256,l=o.pow(c,6),u=o.pow(2,52),h=2*u,d=c-1;function p(t,e,n){var a=[],d=y(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,b(r)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(c):(t=new Uint8Array(c),(s.crypto||s.msCrypto).getRandomValues(t)),b(t)}catch(a){var e=s.navigator,n=e&&e.plugins;return[+new Date,s,n,s.screen,b(r)]}}():t,3),a),p=new f(a),x=function(){for(var t=p.g(6),e=l,n=0;t<u;)t=(t+n)*c,e*=c,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),r),(e.pass||n||function(t,e,n,a){return a&&(a.S&&m(a,p),t.state=function(){return m(p,{})}),n?(o.random=t,e):t})(x,d,"global"in e?e.global:this==o,e.state)}function f(t){var e,n=t.length,a=this,s=0,r=a.i=a.j=0,o=a.S=[];for(n||(t=[n++]);s<c;)o[s]=s++;for(s=0;s<c;s++)o[s]=o[r=d&r+t[s%n]+(e=o[s])],o[r]=e;(a.g=function(t){for(var e,n=0,s=a.i,r=a.j,o=a.S;t--;)e=o[s=d&s+1],n=n*c+o[d&(o[s]=o[r=d&r+e])+(o[r]=e)];return a.i=s,a.j=r,n})(c)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,a=[],s=typeof t;if(e&&"object"==s)for(n in t)try{a.push(g(t[n],e-1))}catch(r){}return a.length?a:"string"==s?t:t+"\0"}function y(t,e){for(var n,a=t+"",s=0;s<a.length;)e[d&s]=d&(n^=19*e[d&s])+a.charCodeAt(s++);return b(e)}function b(t){return String.fromCharCode.apply(0,t)}if(y(o.random(),r),t.exports){t.exports=p;try{i=n(5042)}catch(x){}}else void 0===(a=function(){return p}.call(e,n,e,t))||(t.exports=a)}("undefined"!==typeof self?self:this,[],Math)}}]);
//# sourceMappingURL=482.feddc3e1.chunk.js.map