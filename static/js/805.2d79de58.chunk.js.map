{"version":3,"file":"static/js/805.2d79de58.chunk.js","mappings":"4MAMA,MA2CA,EA3CqBA,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAEnCC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAWC,aAAY,KAC3BJ,GAAUK,IACa,IAAjBA,IACFC,cAAcH,GACdN,EAAS,MAEJQ,EAAe,IACtB,GACD,KAEH,MAAO,IAAMC,cAAcH,EAAS,GACnC,CAACN,IAOJ,OACEU,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,OAAQ,SAAWC,UAAU,UAAUC,GAAG,YAAWC,SAAA,EAC9DC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAJ,SAAC,0BAGtCN,EAAAA,EAAAA,MAACQ,EAAAA,EAAU,CAACC,QAAQ,YAAWH,SAAA,CAAC,6CACad,EAAM,gBAEnDe,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLF,QAAQ,YACRG,MAAM,UACNC,QAfiBC,KACrBxB,EAAS,IAAI,EAeTyB,MAAO,CAAEC,UAAW,QAASV,SAC9B,mBAGG,C,mJC3CH,SAASW,EAA0BC,GACxC,OAAOC,EAAAA,EAAAA,GAAqB,gBAAiBD,EAC/C,EAC0BE,EAAAA,EAAAA,GAAuB,gBAAiB,CAAC,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,YAAa,YAAa,QAAS,QAAS,UAAW,SAAU,UAAW,WAAY,YAAa,aAAc,cAAe,eAAgB,SAAU,eAAgB,c,aCD3R,MAAMC,EAAY,CAAC,QAAS,YAAa,YAAa,eAAgB,SAAU,YAAa,UAAW,kBAyB3FC,GAAiBC,EAAAA,EAAAA,IAAO,OAAQ,CAC3CC,KAAM,gBACNN,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMD,EAAWnB,SAAWkB,EAAOC,EAAWnB,SAA+B,YAArBmB,EAAWE,OAAuBH,EAAO,QAADI,QAASC,EAAAA,EAAAA,GAAWJ,EAAWE,SAAWF,EAAWK,QAAUN,EAAOM,OAAQL,EAAWlB,cAAgBiB,EAAOjB,aAAckB,EAAWM,WAAaP,EAAOO,UAAU,GAP5PX,EAS3BY,IAAA,IAAC,MACFC,EAAK,WACLR,GACDO,EAAA,OAAKE,EAAAA,EAAAA,GAAS,CACbC,OAAQ,GACgB,YAAvBV,EAAWnB,SAAyB,CAErC8B,KAAM,WACkB,YAAvBX,EAAWnB,SAAyB2B,EAAMI,WAAWZ,EAAWnB,SAA+B,YAArBmB,EAAWE,OAAuB,CAC7GW,UAAWb,EAAWE,OACrBF,EAAWK,QAAU,CACtBS,SAAU,SACVC,aAAc,WACdC,WAAY,UACXhB,EAAWlB,cAAgB,CAC5BmC,aAAc,UACbjB,EAAWM,WAAa,CACzBW,aAAc,IACd,IACIC,EAAwB,CAC5BC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,UAAW,KACXC,UAAW,KACXC,MAAO,IACPC,MAAO,IACPC,QAAS,KAILC,EAAuB,CAC3BC,QAAS,eACTC,YAAa,eACbC,UAAW,iBACXC,cAAe,iBACfC,MAAO,cAwHT,EAnHgCC,EAAAA,YAAiB,SAAoBC,EAASC,GAC5E,MAAMC,GAAaC,EAAAA,EAAAA,GAAc,CAC/B1C,MAAOuC,EACPzC,KAAM,kBAEFZ,EAR0BA,IACzB8C,EAAqB9C,IAAUA,EAOxByD,CAA0BF,EAAWvD,OAC7Cc,GAAQ4C,EAAAA,EAAAA,IAAajC,EAAAA,EAAAA,GAAS,CAAC,EAAG8B,EAAY,CAClDvD,YAEI,MACFkB,EAAQ,UAAS,UACjByC,EAAS,UACTnE,EAAS,aACTM,GAAe,EAAK,OACpBuB,GAAS,EAAK,UACdC,GAAY,EAAK,QACjBzB,EAAU,QAAO,eACjB+D,EAAiB1B,GACfpB,EACJ+C,GAAQC,EAAAA,EAAAA,GAA8BhD,EAAOL,GACzCO,GAAaS,EAAAA,EAAAA,GAAS,CAAC,EAAGX,EAAO,CACrCI,QACAlB,QACA2D,YACAnE,YACAM,eACAuB,SACAC,YACAzB,UACA+D,mBAEIG,EAAYvE,IAAc8B,EAAY,IAAMsC,EAAe/D,IAAYqC,EAAsBrC,KAAa,OAC1GmE,EAnGkBhD,KACxB,MAAM,MACJE,EAAK,aACLpB,EAAY,OACZuB,EAAM,UACNC,EAAS,QACTzB,EAAO,QACPmE,GACEhD,EACEiD,EAAQ,CACZhD,KAAM,CAAC,OAAQpB,EAA8B,YAArBmB,EAAWE,OAAuB,QAAJC,QAAYC,EAAAA,EAAAA,GAAWF,IAAUpB,GAAgB,eAAgBuB,GAAU,SAAUC,GAAa,cAE1J,OAAO4C,EAAAA,EAAAA,GAAeD,EAAO5D,EAA2B2D,EAAQ,EAuFhDG,CAAkBnD,GAClC,OAAoBrB,EAAAA,EAAAA,KAAKe,GAAgBe,EAAAA,EAAAA,GAAS,CAChD2C,GAAIL,EACJT,IAAKA,EACLtC,WAAYA,EACZ2C,WAAWU,EAAAA,EAAAA,GAAKL,EAAQ/C,KAAM0C,IAC7BE,GACL,G","sources":["pages/NotFound.jsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nconst NotFoundPage = () => {\n  const navigate = useNavigate();\n  const [count, setCount] = useState(5); // Start countdown from 5\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount((currentCount) => {\n        if (currentCount === 1) {\n          clearInterval(interval); // Clear interval when count reaches 1\n          navigate(\"/\"); // Redirect when countdown finishes\n        }\n        return currentCount - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(interval); // Clean up interval\n  }, [navigate]);\n\n  // Handle button click\n  const handleBackHome = () => {\n    navigate(\"/\");\n  };\n\n  return (\n    <Box sx={{ height: \"100vh\" }} component=\"section\" id=\"not-found\">\n      <Typography variant=\"h3\" gutterBottom>\n        404 - Page Not Found\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        You will be redirected to the homepage in {count} seconds.\n      </Typography>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleBackHome}\n        style={{ marginTop: \"20px\" }}\n      >\n        Back to Home\n      </Button>\n    </Box>\n  );\n};\n\nexport default NotFoundPage;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === 'inherit' && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: 'inherit'\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;"],"names":["NotFoundPage","navigate","useNavigate","count","setCount","useState","useEffect","interval","setInterval","currentCount","clearInterval","_jsxs","Box","sx","height","component","id","children","_jsx","Typography","variant","gutterBottom","Button","color","onClick","handleBackHome","style","marginTop","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","root","align","concat","capitalize","noWrap","paragraph","_ref","theme","_extends","margin","font","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","transformDeprecatedColors","extendSxProp","className","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}